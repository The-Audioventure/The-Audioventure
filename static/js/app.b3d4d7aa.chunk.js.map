{"version":3,"sources":["assets/backgroundBanner.gif","styles/main_styleFactory.js","styles/container_styleFactory.js","styles/banner_styleFactory.js","styles/text_styleFactory.js","src/utilities.js","styles/view_styleFactory.js","src/screens/ChooseMoodOrPlaceScreen.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V2_JS/index.js?5f09"],"names":["module","exports","main_styleFactory","backgroundDim","buttonBorderWidth","FONT_SIZE","LINE_HEIGHT","StyleSheet","create","viewStyle","justifyContent","backgroundColor","alignItems","imageStyle","height","width","resizeMode","overflow","buttonStyle","borderWidth","borderColor","borderRadius","textStyle","fontFamily","fontSize","textAlign","color","opacity","lineHeight","container_styleFactory","containerDim","baseStyleSheet","defaultStyle","position","apartStyle_default","apartStyle_nudged","top","bottom","left","right","horizontalItemsStyle","flexDirection","main","debug_color","debug","colorStyle","style","debugStyle","Object","entries","key","value","compose","banner_styleFactory","bannerDim","default","justLeft","borderLeftWidth","noTop","borderTopWidth","justBorder","text_styleFactory","font_size","line_height","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","view_styleFactory","horizontal","HomeScreen","navigation","useState","Dimensions","get","setWindow","window","addEventListener","useFonts","PressStart2P_400Regular","require","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","titleText_style","scaled_clickFontSize","leftScreenBanner_style","leftBanner_style","rightScreenBanner_style","rightBanner_style","mainView_style","View","TouchableOpacity","onPress","navigate","Text","track","uri","Mood","opacityLevel","opacityReducer","opacityState","action","console","log","payload","type","Angry","Lazy","Sad","Happy","Pumped","Weird","Romantic","stylefactory","backgroundHeight","backgroundWidth","contentViewStyle","titleViewStyle","flex","titleBanner","title_textStyle","optionsViewStyle","apart_optionLineViewStyle","even_optionLineViewStyle","option_buttonStyle","option_textStyle","parentViewStyle","MatchMyMoodScreen","props","React","Audio","Sound","sound","soundPlaying","setSoundPlaying","moodPlaying","setMoodPlaying","useReducer","opacityDispatch","play_pauseSound","loaded_song","mood","a","async","_loaded","error","pauseAsync","unloadAsync","loadAsync","playAsync","_onPlaybackStatusUpdate","status","didJustFinish","useEffect","undefined","RATIO","styles","ImageBackground","source","onMouseEnter","onMouseLeave","displayType","prefix","Place","Beach","Icy","Jungle","Home","Clouds","Party","Volcano","TakeMeSomewhereScreen","BACKGROUND_IMAGE","contentView_style","titleContent_style","creditsContent_style","titleBanner_style","clickBanner_style","creditsBanner_style","main_styles","clickText_style","navigator","createStackNavigator","ChooseMoodOrPlace","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhere","initialRouteName","headerMode","defaultNavigationOptions","title","cardStyle","createAppContainer","container","registerRootComponent","App"],"mappings":"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","file":"static/js/app.b3d4d7aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundBanner.e17a0abf.gif\";","\nimport { StyleSheet } from \"react-native\";\n\nconst main_styleFactory = (backgroundDim, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT) => StyleSheet.create({\n\n    viewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: backgroundDim.height,\n        width: backgroundDim.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden'\n    },\n    buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '50%',\n        height: '25%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    }\n})\n\nexport default main_styleFactory;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\n\n\n\nconst container_styleFactory = (containerDim) => {\n    \n    const baseStyleSheet = StyleSheet.create({\n        defaultStyle: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n\n        apartStyle_default: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            justifyContent: \"space-between\",\n            alignItems: 'center'\n        },\n\n        apartStyle_nudged: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            justifyContent: \"space-between\",\n            top: containerDim.top,\n            bottom: containerDim.bottom,\n            left: containerDim.left,\n            right: containerDim.right,\n            alignItems: 'center'\n        },\n        horizontalItemsStyle: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            top: containerDim.top,\n            bottom: containerDim.bottom,\n            left: containerDim.left,\n            right: containerDim.right,\n            alignItems: 'center',\n            flexDirection: 'row'\n        }\n\n    })\n    \n\n    \n    return {\n        main: (debug_color) => {\n            return baseStyleSheet;\n        },\n        debug: (debug_color) => {\n\n            const colorStyle = StyleSheet.create({\n                style: {\n                    backgroundColor: debug_color\n                }\n            })\n\n            var debugStyle = {};\n            // const\n            for (const[key, value] of Object.entries(baseStyleSheet)) {\n                debugStyle[key] = StyleSheet.compose(colorStyle.style, value);\n            }\n            return debugStyle;\n        }\n    }\n}\n\nexport default container_styleFactory;","import {StyleSheet} from 'react-native'\n\nconst banner_styleFactory = (bannerDim, buttonBorderWidth) => StyleSheet.create({\n    default: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: buttonBorderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    justBorder: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n\n});\n\nexport default banner_styleFactory;","import {StyleSheet} from 'react-native'\n\nconst text_styleFactory = (font_size, line_height) => StyleSheet.create({\n    default: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: font_size,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: line_height\n    }\n\n});\n\nexport default text_styleFactory;","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import {StyleSheet} from 'react-native'\n\nconst view_styleFactory = (color) => StyleSheet.create({\n    default: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: color,\n        alignItems: 'center',\n        height: '100%',\n        width: '100%'\n    },\n    horizontal: {\n        // flexDirection: \"column\",\n        // justifyContent: 'center',\n        justifyContent: 'flex-start',\n        backgroundColor: color,\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        flexDirection: 'row'\n    }\n\n});\n\nexport default view_styleFactory;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p';\nimport React, {useState} from 'react';\nimport main_styleFactory from '../../styles/main_styleFactory';\nimport container_styleFactory from '../../styles/container_styleFactory';\nimport banner_styleFactory from '../../styles/banner_styleFactory';\nimport text_styleFactory from '../../styles/text_styleFactory';\nimport utilities from '../utilities';\nimport view_styleFactory from '../../styles/view_styleFactory';\n\n\n\nconst HomeScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const BACKGROUND_IMAGE = require('../../assets/backgroundBanner.gif');\n\n    // these constants depend on the image backgroun I use\n    const BACKGROUND_IMAGE_HEIGHT = 867;\n    const BACKGROUND_IMAGE_WIDTH = 1542;\n    const BUTTON_BORDER_WIDTH = 5;\n\n    const GOOGLE_DOCS_TEXT_CONVERSION_RATIO = 2.14285714;\n\n    const TILE_FONT_SIZE = 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const CLICK_FONT_SIZE = 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const LINE_SPACING = 1.15;\n\n    // calculation for the scaling of the background image\n    const imageDim = {height: BACKGROUND_IMAGE_HEIGHT, width: BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * BUTTON_BORDER_WIDTH;\n\n\n\n    const contentDim = {height: '84.5%', width: '50%', top: '.6%'};\n    const contentView_style = container_styleFactory(contentDim);\n\n    const titleContentDim = {height: '36%', width: '100%'};\n    const titleContent_style = container_styleFactory(titleContentDim);\n\n    const creditsContentDim = {height: '9%', width: '33%'};\n    const creditsContent_style = container_styleFactory(creditsContentDim);\n\n    const titleBannerDim = {height: '78%', width: '100%'};\n    const titleBanner_style = banner_styleFactory(titleBannerDim, scaledButtonBorderWidth);\n    const clickBannerDim = {height: '22%', width: '100%'};\n    const clickBanner_style = banner_styleFactory(clickBannerDim, scaledButtonBorderWidth);\n    const creditsBannerDim = {height: '100%', width: '100%'};\n    const creditsBanner_style = banner_styleFactory(creditsBannerDim, scaledButtonBorderWidth);\n    \n    const scaled_titleFontSize = scaledImageDim.scalingRatio * TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * LINE_SPACING;\n    const titleText_style = text_styleFactory(scaled_titleFontSize, scaled_titleLineHeight);\n    const main_styles = main_styleFactory(scaledImageDim, scaledButtonBorderWidth, scaled_titleFontSize, scaled_titleLineHeight);\n\n\n    const scaled_clickFontSize = scaledImageDim.scalingRatio * CLICK_FONT_SIZE;\n    const scaled_clickLineHeight = scaled_clickFontSize * LINE_SPACING;\n    const clickText_style = text_styleFactory(scaled_clickFontSize, scaled_clickLineHeight);\n\n    const horizontalContainerDim = {height: '100%', width: '100%'};\n    const horizontalContainer_style = container_styleFactory(horizontalContainerDim);\n\n    const leftScreenBannerDim = {height: '100%', width: '50%'};\n    const leftScreenBanner_style = container_styleFactory(leftScreenBannerDim);\n    const leftBanner_Dim = {height: '20%', width: '80%'};\n    const leftBanner_style = banner_styleFactory(leftBanner_Dim, scaledButtonBorderWidth);\n\n    const rightScreenBannerDim = {height: '100%', width: '50%'};\n    const rightScreenBanner_style = banner_styleFactory(rightScreenBannerDim, scaledButtonBorderWidth);\n    const rightBanner_Dim = {height: '20%', width: '80%'};\n    const rightBanner_style = banner_styleFactory(rightBanner_Dim, scaledButtonBorderWidth);\n\n    const mainView_style =  view_styleFactory('white');\n    return (\n        <View style={mainView_style.horizontal}>\n            <TouchableOpacity \n                style={leftScreenBanner_style.debug('rgb(238,238,238)').defaultStyle}\n                onPress={() => navigation.navigate('MatchMyMood')}\n                >\n                <View \n                    style={leftBanner_style.default}>\n                    <Text style={titleText_style.default} >[Match My<br></br>Mood!]!</Text>                \n                </View>\n            </TouchableOpacity>\n            <TouchableOpacity \n                style={rightScreenBanner_style.justLeft}\n                onPress={() => navigation.navigate('TakeMeSomewhere')}\n                >\n                <View \n                    style={rightBanner_style.default}>\n                    <Text style={titleText_style.default} >[Take Me<br></br>Somewhere]</Text>                \n                </View>\n            </TouchableOpacity>\n        </View>\n    )\n\n\n};\n\n\n\n  \n\n\nexport default HomeScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport NumberFormat from 'react-number-format'\nimport { Audio } from 'expo-av';\nimport { loadOptions } from \"@babel/core\";\n// import stylefactory from '../styles/styles'\n\n\nconst track = {\n    // Angry: require('../../assets/angryPuella.mp3'),\n    Angry: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/angryPuella.mp3'},\n    // Lazy: require('../../assets/lazySamuraiChamploo.mp3'),\n    Lazy: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/lazySamuraiChamploo.mp3'},\n    // Sad: require('../../assets/sadTokyoGhoul.mp3'),\n    Sad: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/sadTokyoGhoul.mp3'},\n    // Happy: require('../../assets/happyFlipFlappers.mp3'),\n    Happy: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/happyFlipFlappers.mp3'},\n    // Pumped: require('../../assets/pumpedOnePiece.mp3'),\n    Pumped: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/pumpedOnePiece.mp3'},\n    // Weird: require('../../assets/weirdMintOrange.mp3'),\n    Weird: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/weirdMintOrange.mp3'},\n    // Romantic: require('../../assets/romanticSakura.mp3')\n    Romantic: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/romanticSakura.mp3'},\n}\nconst Mood = {\n    Angry: 'Angry',\n    Lazy: 'Lazy',\n    Sad: 'Sad',\n    Happy: 'Happy',\n    Pumped: 'Pumped',\n    Weird: 'Weird',\n    Romantic: 'Romantic',\n    Null: 'null'\n}\n\nconst opacityLevel = {\n    mouseOn: 0.5,\n    mouseOff: 1.0\n\n}\n\nconst opacityReducer = (opacityState, action) => {\n    console.log(action.payload)\n    switch(action.type) {\n        case Mood.Angry:\n            console.log(\"hello angry\")\n            return {...opacityState, Angry: action.payload};\n        case Mood.Lazy:\n            return {...opacityState, Lazy: action.payload};\n        case Mood.Sad:\n            return {...opacityState, Sad: action.payload};\n        case Mood.Happy:\n            return {...opacityState, Happy: action.payload};\n        case Mood.Pumped:\n            return {...opacityState, Pumped: action.payload};\n        case Mood.Weird:\n            return {...opacityState, Weird: action.payload};\n        case Mood.Romantic:\n            return {...opacityState, Romantic: action.payload};\n        default:\n            return opacityState;\n    }\n}\n\n\nconst MatchMyMoodScreen = (props) => {\n\n   \n\n\n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(Mood.Null)\n\n\n    const [opacityState, opacityDispatch] = useReducer(opacityReducer, {\n                                                    Angry: 1,\n                                                    Lazy: 1,\n                                                    Sad: 1,\n                                                    Happy: 1,\n                                                    Pumped: 1,\n                                                    Weird: 1,\n                                                    Romantic: 1});\n    const {\n        Angry,\n        Lazy,\n        Sad,\n        Happy,\n        Pumped,\n        Weird,\n        Romantic} = opacityState;\n\n    \n\n    async function play_pauseSound(loaded_song, mood) {\n        console.log(\"pressed play_pause\")\n        console.log(sound._loaded)\n        console.log(moodPlaying)\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === Mood.Null) {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n                await sound.loadAsync(loaded_song)\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                            setSoundPlaying(false);\n                            setMoodPlaying(Mood.Null);\n                          // audio has finished!\n                          console.log(\"finished playing song\");\n                          await sound.unloadAsync();\n                        }\n                      })\n            }\n        }\n        //     await sound.loadAsync(loaded_song)\n        //     sound._onPlaybackStatusUpdate = (async (status) => {\n        //         if (status.didJustFinish === true) {\n        //           // audio has finished!\n        //           console.log(\"finished\");\n        //           await sound.unloadAsync();\n        //         }\n        //       })\n        //     setSound(sound);\n        //     setSoundPlaying(true);\n\n        //     sound.playAsync();\n        // } else {\n        //     sound.pauseAsync();\n        //     await sound.unloadAsync();\n        //     setSound(sound);\n        //     setSoundPlaying(false);\n\n        // }\n    }\n\n\n  \n    React.useEffect(() => {\n      return sound\n        ? () => {\n            console.log('Unloading Sound');\n            sound.unloadAsync(); }\n        : undefined;\n    }, [sound]);\n  \n  \n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT, opacityState);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Match My<br></br>Mood!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Angry, Mood.Angry)}\n                            // opacity={}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Angry, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Angry, payload: opacityLevel.mouseOff})}\n                            >\n\n                            <Text style={styles.option_textStyle} >Angry</Text> \n                                       \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Pumped, Mood.Pumped)}\n                            opacity={Pumped}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Pumped, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Pumped, payload: opacityLevel.mouseOff})}\n                            >   \n                                \n                            <Text style={styles.option_textStyle} >Pumped<br></br>Up!</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Lazy, Mood.Lazy)}\n                            opacity={Lazy}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Lazy, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Lazy, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Lazy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Happy, Mood.Happy)}\n                            opacity={Happy}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Happy, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Happy, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Happy!</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Weird, Mood.Weird)}\n                            opacity={Weird}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Weird, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Weird, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Weird~</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Sad, Mood.Sad)}\n                            opacity={Sad}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Sad, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Sad, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >A Little<br></br>Sad...</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Romantic, Mood.Romantic)}\n                            opacity={Romantic}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Romantic, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Romantic, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Romantic<br></br><NumberFormat value={3} displayType={'text'} prefix={'<'}></NumberFormat></Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT, opacityState) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (3.9/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .295*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default MatchMyMoodScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport { Audio } from 'expo-av';\nimport NumberFormat from 'react-number-format'\n// import stylefactory from '../styles/styles'\n\n\nconst track = {\n    // Beach: require('../../assets/beachEvangelion.mp3'),\n    Beach: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/beachEvangelion.mp3'},\n    // Icy: require('../../assets/icyYuri.mp3'),\n    Icy: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/icyYuri.mp3'},\n    // Jungle: require('../../assets/jungleJojo.mp3'),\n    Jungle: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/jungleJojo.mp3'},\n    // Home: require('../../assets/homeSpiceWolf.mp3'),\n    Home: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/homeSpiceWolf.mp3'},\n    // Clouds: require('../../assets/cloudsAnohana.mp3'),\n    Clouds: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/cloudsAnohana.mp3'},\n    // Party: require('../../assets/partyDeathParade.mp3'),\n    Party: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/partyDeathParade.mp3'},\n    // Volcano: require('../../assets/volcanoReZero.mp3')\n    Volcano: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/volcanoReZero.mp3'},\n}\nconst Place = {\n    Beach: 'Beach',\n    Icy: 'Icy',\n    Jungle: 'Jungle',\n    Home: 'Home',\n    Clouds: 'Clouds',\n    Party: 'Party',\n    Volcano: 'Volcano',\n    Null: 'null'\n}\n\nconst opacityLevel = {\n    mouseOn: 0.5,\n    mouseOff: 1.0 \n\n}\n\nconst opacityReducer = (opacityState, action) => {\n    switch(action.type) {\n        case Place.Beach:\n            return {...opacityState, Beach: action.payload};\n        case Place.Icy:\n            return {...opacityState, Icy: action.payload};\n        case Place.Jungle:\n            return {...opacityState, Jungle: action.payload};\n        case Place.Home:\n            return {...opacityState, Home: action.payload};\n        case Place.Clouds:\n            return {...opacityState, Clouds: action.payload};\n        case Place.Party:\n            return {...opacityState, Party: action.payload};\n        case Place.Volcano:\n            return {...opacityState, Volcano: action.payload};\n        default:\n            return opacityState;\n    }\n}\n\n\n\nconst TakeMeSomewhereScreen = (props) => {\n    \n\n\n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(Place.Null)\n\n\n    const [opacityState, opacityDispatch] = useReducer(opacityReducer, {\n        Beach: 1,\n        Icy: 1,\n        Jungle: 1,\n        Home: 1,\n        Clouds: 1,\n        Party: 1,\n        Volcano: 1});\n    const {\n        Beach,\n        Icy,\n        Jungle,\n        Home,\n        Clouds,\n        Party,\n        Volcano} = opacityState;\n\n    \n\n    async function play_pauseSound(loaded_song, mood) {\n        console.log(\"pressed play_pause\")\n        console.log(sound._loaded)\n        console.log(moodPlaying)\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === Place.Null) {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n                await sound.loadAsync(loaded_song)\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                          // audio has finished!\n                          setSoundPlaying(false);\n                          setMoodPlaying(Place.Null);\n                          console.log(\"finished playing song\");\n                          await sound.unloadAsync();\n                        }\n                      })\n            }\n        }\n    }\n\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Take Me<br></br>Somewhere!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Beach, Place.Beach)}\n                        opacity={Beach}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Beach, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Beach, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >To the<br></br>Beach</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Clouds, Place.Clouds)}\n                        opacity={Clouds}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Clouds, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Clouds, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Through<br></br>the Clouds</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Icy, Place.Icy)}\n                        opacity={Icy}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Icy, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Icy, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Somewhere<br></br>Icy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Home, Place.Home)}\n                        opacity={Home}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Home, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Home, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Home</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Party, Place.Party)}\n                        opacity={Party}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Party, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Party, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >To A<br></br>Party!</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Jungle, Place.Jungle)}\n                        opacity={Jungle}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Jungle, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Jungle, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >The<br></br>Jungle</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Volcano, Place.Volcano)}\n                        opacity={Volcano}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Volcano, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Volcano, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Into a<br></br>Volcano</Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (4.25/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .298*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default TakeMeSomewhereScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport main_styleFactory from '../../styles/main_styleFactory'\nimport container_styleFactory from '../../styles/container_styleFactory'\nimport banner_styleFactory from '../../styles/banner_styleFactory'\nimport text_styleFactory from '../../styles/text_styleFactory'\nimport utilities from '../utilities'\n\n\n\n\nconst HomeScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const BACKGROUND_IMAGE = require('../../assets/backgroundBanner.gif');\n\n    // these constants depend on the image backgroun I use\n    const BACKGROUND_IMAGE_HEIGHT = 867;\n    const BACKGROUND_IMAGE_WIDTH = 1542;\n    const BUTTON_BORDER_WIDTH = 5;\n\n    const GOOGLE_DOCS_TEXT_CONVERSION_RATIO = 2.14285714;\n\n    const TILE_FONT_SIZE = 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const CLICK_FONT_SIZE = 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const LINE_SPACING = 1.15;\n\n    // calculation for the scaling of the background image\n    const imageDim = {height: BACKGROUND_IMAGE_HEIGHT, width: BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * BUTTON_BORDER_WIDTH;\n\n\n\n    const contentDim = {height: '84.5%', width: '50%', top: '.6%'};\n    const contentView_style = container_styleFactory(contentDim);\n\n    const titleContentDim = {height: '36%', width: '100%'};\n    const titleContent_style = container_styleFactory(titleContentDim);\n\n    const creditsContentDim = {height: '9%', width: '33%'};\n    const creditsContent_style = container_styleFactory(creditsContentDim);\n\n    const titleBannerDim = {height: '78%', width: '100%'};\n    const titleBanner_style = banner_styleFactory(titleBannerDim, scaledButtonBorderWidth);\n    const clickBannerDim = {height: '22%', width: '100%'};\n    const clickBanner_style = banner_styleFactory(clickBannerDim, scaledButtonBorderWidth);\n    const creditsBannerDim = {height: '100%', width: '100%'};\n    const creditsBanner_style = banner_styleFactory(creditsBannerDim, scaledButtonBorderWidth);\n    \n    const scaled_titleFontSize = scaledImageDim.scalingRatio * TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * LINE_SPACING;\n    const titleText_style = text_styleFactory(scaled_titleFontSize, scaled_titleLineHeight);\n    const main_styles = main_styleFactory(scaledImageDim, scaledButtonBorderWidth, scaled_titleFontSize, scaled_titleLineHeight);\n\n\n    const scaled_clickFontSize = scaledImageDim.scalingRatio * CLICK_FONT_SIZE;\n    const scaled_clickLineHeight = scaled_clickFontSize * LINE_SPACING;\n    const clickText_style = text_styleFactory(scaled_clickFontSize, scaled_clickLineHeight);\n\n\n\n    return (\n        <View style={main_styles.viewStyle}>\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <ImageBackground style={main_styles.imageStyle} source={BACKGROUND_IMAGE} >\n                    <View style={contentView_style.main().apartStyle_nudged}>\n                        \n                        <View style={titleContent_style.main().defaultStyle}>\n                            <View \n                                style={titleBanner_style.default}>\n                                <Text style={titleText_style.default} >Choose Your Own Audioventure!</Text>                \n                            </View>\n                            <View \n                                style={clickBanner_style.noTop}>\n                                <Text style={clickText_style.default} >Click anywhere to start!</Text>                \n                            </View>\n                        </View>\n\n                        <View style={creditsContent_style.main().defaultStyle}>\n                            <View \n                                style={creditsBanner_style.default}>\n                                <Text style={clickText_style.default} >Credits</Text>                \n                            </View>\n                        </View>\n\n                    </View>          \n                </ImageBackground>\n            </TouchableOpacity>\n        </View>\n    )\n\n\n};\n\n\n\n  \n\n\nexport default HomeScreen;\n\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen';\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen';\n\n\nimport HomeScreen from './src/screens/HomeScreen'\n// import MatchMyMoodScreen from './src/screens/MatchMyMoodScreen';\n// import TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen';\n// import FirstChoiceScreen from './src/screens/FirstChoiceScreen';\n\n\nconst navigator = createStackNavigator(\n\n  {\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n  },\n  {\n    initialRouteName: 'Home',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\nexport default createAppContainer(navigator);\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}