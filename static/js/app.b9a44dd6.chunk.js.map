{"version":3,"sources":["src/assets/loading.gif","src/components/ViewContainer.js","src/components/StyledBackground.js","src/utilities.js","src/components/TextBanner.js","src/AppConstants.js","src/screens/ChooseMoodOrPlaceScreen.js","src/components/CircleButton.js","src/components/IconButton.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/components/Banner.js","src/StaticMusicBox.js","src/components/StyledMusicPlayer.js","src/screens/PlaylistScreen.js","src/screens/RootScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V3/index.js?f349"],"names":["module","exports","ViewContainer","props","viewStyle","this","StyleSheet","create","style","justifyContent","backgroundColor","color","alignItems","height","width","nudge","compose","top","bottom","left","right","horizontal","flexDirection","apart","radius","borderRadius","round","onPress","children","View","React","Component","StyledBackground","resizeMode","overflow","ImageBackground","source","image","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","TextBanner","propStyles","scroll","flexWrap","showsVerticalScrollIndicato","default","borderWidth","borderColor","paddingHorizontal","justLeft","borderLeftWidth","noTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","noBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","bottomCorners","corners","justBorder","fontStyle","fontFamily","fontSize","textAlign","textAlignVertical","opacity","lineHeight","touchable","TouchableOpacity","Text","getUri","fileName","uri","AppConstants","HomeScreenImage","src","themeImage","Sad","Pumped","Cloudy","Romantic","Icy","Party","Beach","Weird","Home","Space","Happy","themes","icons","Back","name","Random","themePlaylists","Anime","artist","track","BACKGROUND_IMAGE","BACKGROUND_IMAGE_HEIGHT","BACKGROUND_IMAGE_WIDTH","BUTTON_BORDER_WIDTH","GOOGLE_DOCS_TEXT_CONVERSION_RATIO","TILE_FONT_SIZE","SUBTITLE_FONT_SIZE","CLICK_FONT_SIZE","LINE_SPACING","ChooseMoodOrPlace","navigation","useState","Dimensions","get","setWindow","window","addEventListener","useFonts","PressStart2P_400Regular","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","navigate","CircleButton","fillRectangle","iteration","starting","barHeight","fillRectangleHeight","roundedRadius","Math","ceil","y","size","sqrt","pow","verticalLocation","location","key","baseRectangleStyle","renderLines","Array","numberOfRectangles","map","_","index","fillRectangles","Fragment","circleDiameter","position","zIndex","elevation","localStyles","styles","container","activeOpacity","button","alignContent","IconButton","centerHeight","displaceRadius","sin","angle","centerWidth","cos","iconSize","Image","ICONS","Lazy","THEMES","MatchMyMoodScreen","CENTER_SCREEN_HEIGHT","CENTER_SCREEN_WIDTH","ICONS_SCREEN_RADIUS","elem","indx","PI","themeName","TakeMeSomewhere","Banner","noBackground","noBorder","StaticMusicBox","soundPlayer","playlist","onStartSong","onEndSong","States","INITIAL","PLAYING","PAUSED","FINISHED","songName","findIndex","v","currentState","currentSongName","newSongName","a","async","songFinishCallback","n","getSongIndex","loadAsync","playAsync","_onPlaybackStatusUpdate","status","didJustFinish","unloadAsync","pauseAsync","console","log","OPACITY_STATE","StyledMusicPlayer","state","isNexting","flatListRef","isPlaying","playbackInstance","currentIndex","volume","isBuffering","opacities","Object","assign","x","onPlayPause_dispatchSideEffects","newOpacities","action","copy","entries","type","payload","songOpacityReducer","scrollToIndex","animated","setState","onPlaybackStatusUpdate","length","handlePlayPause","handleNextTrack","handleSongButton","songIndex","warn","loadAudio","error","handlePreviousTrack","Audio","Sound","shouldPlay","setOnPlaybackStatusUpdate","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","shouldDuckAndroid","staysActiveInBackground","playThroughEarpieceAndroid","bannerBorderWidth","subtitleFontSize","subtitleLineHeight","ref","vertical","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","data","renderItem","item","ScrollView","nestedScrollEnabled","titleFontSize","titleLineHeight","Ionicons","AntDesign","PLAY_PAUSE_STATE","PlaylistScreen","IMAGE","PLAYLIST","THEME","getParam","initialOpacityState","element","dict","useReducer","opacityState","playPauseState","Tinos_400Regular","HEIGHT","WIDTH","MAGIC_SCALING_FACTOR","scaled_subtitleFontSize","scaled_subtitleLineHeight","align","leftPad","paddingLeft","alignSelf","FirstScreen","navigationOptions","title","RootScreen","HomeScreen","fontsLoaded","icon_uris","values","themeBackground_uris","beachSong_uris","useAssets","assets","require","flex","aspectRatio","navigator","createStackNavigator","Root","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhereScreen","Playlist","initialRouteName","headerMode","defaultNavigationOptions","cardStyle","Platform","select","web","config","createBrowserApp","history","createAppContainer","registerRootComponent","App"],"mappings":"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","file":"static/js/app.b9a44dd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.671e8b5d.gif\";","import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS } from 'react-native';\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        backgroundColor: props.color,\n        alignItems: 'center',\n        height: props.height,\n        width: props.width\n    }\n\n});\n\nconst nudge = (props) => StyleSheet.create({\n    style: {\n        top: props.top,\n        bottom: props.bottom,\n        left: props.left,\n        right: props.right\n    }\n})\n\nconst horizontal = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'flex-start',\n        flexDirection: 'row'\n    }\n})\n\nconst apart = (props) => StyleSheet.create({\n    style: {\n        justifyContent: \"space-between\"\n    }\n})\n\nconst round = (props) => StyleSheet.create({\n    style: {\n        borderRadius: props.radius\n    }\n})\n\nexport default class ViewContainer extends React.Component {\n    render() {\n        var viewStyle = styles(this.props).style;\n            // console.log(this.props)\n            if (this.props.nudge){\n                // console.log('nudge!')\n                viewStyle = StyleSheet.compose(viewStyle, nudge(this.props).style);\n            }\n            if (this.props.horizontal) {\n                viewStyle = StyleSheet.compose(viewStyle, horizontal(this.props).style);\n            }\n            if (this.props.apart) {\n                viewStyle = StyleSheet.compose(viewStyle, apart(this.props).style);\n            }\n            if (this.props.radius) {\n                viewStyle = StyleSheet.compose(viewStyle, round(this.props).style);\n            }\n\n        if (this.props.onPress) {\n            return (<TouchableOpacity onPress={this.props.onPress} style={viewStyle}>{this.props.children}</TouchableOpacity>)\n        } else {\n            return (<View style={viewStyle}>{this.props.children}</View>)\n        }\n        \n    }\n};","import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: props.height,\n        width: props.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        overflow: 'hidden',\n         \n    }\n});\n\nexport default class StyledBackground extends React.Component {\n    render() {\n        var style = styles(this.props);\n        // console.log(this.props);\n\n        return (\n            <ImageBackground   style={style.style} source={this.props.image}> \n                {this.props.children}\n            </ImageBackground>\n        )\n    }\n};","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        paddingHorizontal: '3%',\n        alignItems: 'center',\n\n        \n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    fontStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: props.fontSize,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: props.lineHeight\n    }\n});\n\nexport default class TextBanner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        // console.log(this.props);\n        if (this.props.justLeft) {\n            viewStyle = propStyles.justLeft;\n        } else if (this.props.noTop) {\n            viewStyle = propStyles.noTop;\n        } else if (this.props.noBottom) {\n            viewStyle = propStyles.noBottom;\n        } else if (this.props.bottomCorners) {\n            viewStyle = propStyles.bottomCorners;\n        } else if (this.props.justBorder) {\n            viewStyle = propStyles.justBorder;\n        } else if (this.props.corners) {\n            viewStyle = propStyles.corners;\n        } \n\n        // if (this.props.scroll) {\n        //     viewStyle = StyleSheet.compose(viewStyle, propStyles.scroll);   \n        //     return (\n        //         <ScrollView style={viewStyle}>\n        //             <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n        //         </ScrollView>\n        //     )\n        // }\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                </View>\n            )\n        }\n        \n    }\n};","const GOOGLE_DOCS_TEXT_CONVERSION_RATIO =  2.14285714;\n\nconst getUri = function(fileName) {\n    \n    return {uri: `https://yahtzeerage.github.io/CYOA-Assets/assets/${fileName}`}\n}\n\nconst AppConstants = {\n\n    // HomeScreenImage: {height: 2880, width: 5120, src: getUri(\"031_cover_noword.png\")},\n    HomeScreenImage: {height: 2880, width: 5120, src: {uri: \"https://raw.githubusercontent.com/YahtzeeRage/CYOA-Assets/master/assets/031_cover_noword.png?token=AIGD4GKSBNO4H24F2L7M2JDALJC2Y\"}},\n\n    themeImage: {\n        Sad: {height: 2880, width: 5120, src: getUri(\"028_sad1.png\")},\n        Pumped: {height: 2880, width: 5120, src: getUri(\"032_pumped.png\")},\n        Cloudy: {height: 2880, width: 5120, src: getUri(\"034_cloud.png\")},\n        Romantic: {height: 2880, width: 5120, src: getUri(\"036_romantic.png\")},\n        Icy: {height: 2880, width: 5120, src: getUri(\"038_snow.png\")},\n        Party: {height: 2880, width: 5120, src: getUri(\"039_party.png\")},\n        Beach: {height: 2880, width: 5120, src: getUri(\"042_beach.png\")},\n        Weird: {height: 2880, width: 5120, src: getUri(\"043_weirdagain.png\")},\n        Home: {height: 2880, width: 5120, src: getUri(\"044_home.png\")},\n        Space: {height: 2880, width: 5120, src: getUri(\"045_space.png\")},\n        Happy: {height: 2880, width: 5120, src: getUri(\"046_happy.png\")},\n    },\n\n    themes: {\n        Sad: \"Sad\",\n        Pumped: \"Pumped\",\n        Cloudy: \"Cloudy\",\n        Romantic: \"Romantic\",\n        Icy: \"Icy\",\n        Party: \"Party\",\n        Beach: \"Beach\",\n        Weird: \"Weird\",\n        Home: \"Home\",\n        Space: \"Space\",\n        Happy: \"Happy\"\n    },\n\n    icons: {\n        Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n        Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n        Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n        Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n        Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n        Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n        Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n        Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n    \n    },\n\n    themePlaylists: {\n        Anime: [\n            { name: 'Mario Coin', artist: \"Uhh\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Mario-coin-sound.mp3\"}},\n            { name: 'Linked Horizon', artist: \"Revo\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/LinkedHorizon.mp3\"}},\n            { name: 'Let Me Hear', artist: \"Fear and Loathing in Las Vegas\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/LetMeHear.mp3\"} },\n            { name: 'Heavenly Blue', artist: \"Hiroyuki Sawano\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/HeavenlyBlue.mp3\"}},\n            { name: 'The World', artist: \"Yutaka Yamada\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/TheWorld.mp3\"}},\n            { name: 'Sono Chi No Sadame', artist: \"Bluff\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/SonoChiNoSadame.mp3\"}},\n            { name: 'Unravel', artist: \"Toru Kitajima\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Unravel.mp3\"}},\n            { name: 'Magia', artist: \"Kalafina\", track: { uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/angryPuella.mp3\"}},\n            { name: 'Papermoon', artist: \"Tomoko Kawase\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Papermoon.mp3\"}},\n            { name: 'Clattanoia', artist: \"OxT\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Clattanoia.mp3\"}}\n        ],\n        Beach: [\n            { name: 'Limonada Fria', artist: \"Future You\", track: getUri(\"FutureYou_Limonada%20Fria.wav\")},\n            { name: 'Verano En Playa Azul', artist: \"Michelle Lugo\", track: getUri(\"Michelle_VeranoEnPlayaAzul.wav\")},\n            { name: 'By the Bay', artist: \"Raydee99\", track: getUri(\"BytheBay.wav\")}\n        ]\n\n\n    },\n\n\n    BACKGROUND_IMAGE: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/backgroundBanner.gif\" },\n    BACKGROUND_IMAGE_HEIGHT: 867,\n    BACKGROUND_IMAGE_WIDTH: 1542,\n    BUTTON_BORDER_WIDTH: 7,\n    GOOGLE_DOCS_TEXT_CONVERSION_RATIO: GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    TILE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    SUBTITLE_FONT_SIZE: 21 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLICK_FONT_SIZE: 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    LINE_SPACING: 1.15\n};\n\nexport default AppConstants;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\nconst ChooseMoodOrPlace = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n    \n\n    return (\n        <ViewContainer color='white' height='100%' width='100%' horizontal >\n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('MatchMyMood')}}\n                style={{backgroundColor: 'rgb(238,238,238)', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Match My<br></br>Mood!]</TextBanner>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('TakeMeSomewhere')}}\n                style={{backgroundColor: '#8e7cc3c6', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Take Me<br></br>Somewhere!]</TextBanner>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n\n}\n\nexport default ChooseMoodOrPlace;\n","import React from 'react';\nimport {View, StyleSheet, TouchableOpacity } from 'react-native';\n\nexport default class CircleButton extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.numberOfRectangles = 15\n    this.radius = this.props.circleDiameter / 2\n\n    // base the height of each bars on the circle radius.\n    // Add 1 to the value b/c we will subtract one down below to get rid of the zero index\n    this.fillRectangleHeight = this.radius / (this.numberOfRectangles + 1)\n\n    // The style used for the rectangles\n    // the zIndex and elevation of 10 puts the rectangles in front of the clickable button\n    this.baseRectangleStyle = {\n      position: 'absolute',\n      zIndex: 10,\n      elevation: 10,\n    }\n  }\n\n  fillRectangle = (iteration, starting) => {\n    const barHeight = this.fillRectangleHeight\n    const roundedRadius = Math.ceil(this.radius)\n    const y = (barHeight * iteration)\n\n    const x = Math.ceil(Math.sqrt(Math.pow(this.radius, 2) - Math.pow(y, 2)))\n\n    let width = roundedRadius - x\n\n    // The bar dimensions\n    const size = {\n      width: width,\n      height: barHeight\n    };\n\n    const verticalLocation = y + roundedRadius\n\n    let location = {}\n    if(starting === 'topLeft'){\n      location = {\n        left: 0,\n        bottom: verticalLocation,\n      };\n    }else if(starting === 'bottomLeft'){\n      location = {\n        left: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'topRight'){\n      location = {\n        right: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'bottomRight'){\n      location = {\n        right: 0,\n        bottom: verticalLocation,\n      }\n    };\n\n    // Create a unique key to identify the element\n    let key = \"\" + iteration + starting\n\n    return(\n      <View key={key} style={{...this.baseRectangleStyle, ...size, ...location}}></View>\n    )\n  };\n\n  renderLines = (starting) => {\n    //start with index+1 b/c 0 will be a width of zero, so no point in doing that math\n    return [...Array(this.numberOfRectangles)].map((_, index) => this.fillRectangle(index+1, starting))\n  }\n\n  fillRectangles = () => {\n    return(\n      <React.Fragment>\n        {this.renderLines('topLeft')}\n        {this.renderLines('bottomLeft')}\n        {this.renderLines('topRight')}\n        {this.renderLines('bottomRight')}\n      </React.Fragment>\n     )\n   };\n\n  render(){\n    let localStyles = styles(this.props)\n\n    return (\n      <View style={localStyles.container}>\n        <TouchableOpacity\n          activeOpacity={.2}\n          style = {localStyles.button}\n          onPress = {this.props.onPress}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n\n        {this.fillRectangles()}\n      </View>\n    )\n  }\n}\n\nconst styles = (props) => StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 0,\n  },\n  button: {\n    backgroundColor: 'clear',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderRadius: (props.circleDiameter / 2),\n    width: props.circleDiameter,\n    height: props.circleDiameter,\n\n    top: props.top,\n    bottom: props.bottom,\n    right: props.right,\n    left: props.left\n  },\n});","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\n\n\nexport default class IconButton extends React.Component {\n    render() {\n        return (\n            <View \n                style={{bottom: this.props.centerHeight + this.props.displaceRadius * Math.sin(this.props.angle), \n                        left: this.props.centerWidth + this.props.displaceRadius * Math.cos(this.props.angle), \n                        position: 'absolute'}}>\n                <CircleButton  \n                        circleDiameter={this.props.iconSize} \n                        onPress={this.props.onPress}\n                        >\n                        <Image \n                            style={{ height: this.props.iconSize, width: this.props.iconSize, borderRadius: 100 }} \n                            source={this.props.image}>\n                        </Image>\n                    </CircleButton>\n            </View>\n        )\n    }\n}","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Pumped: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/pumped.png\", name: \"Pumped\"},\n    Lazy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/lazy.png\", name: \"Lazy\"},\n    Happy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/happy.png\", name: \"Happy\"},\n    Weird: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/weird.png\", name: \"Weird\"},\n    Sad: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/sad.png\", name: \"Sad\"},\n    Romantic: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/romance.png\", name: \"Romantic\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Pumped\",\n    \"Lazy\",\n    \"Happy\",\n    \"Weird\",\n    \"Sad\",\n    \"Romantic\",\n    \"Random\"\n]\n\n\n\nconst MatchMyMoodScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.BACKGROUND_IMAGE} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default MatchMyMoodScreen;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\nimport { StackActions }from '@react-navigation/web'\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n    Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n    Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n    Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n    Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n    Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Home\",\n    \"Cloudy\",\n    \"Beach\",\n    \"Party\",\n    \"Icy\",\n    \"Space\",\n    \"Random\"\n]\n\n\n\nconst TakeMeSomewhere = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.BACKGROUND_IMAGE} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default TakeMeSomewhere;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        // justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        // paddingHorizontal: '3%',\n        // alignItems: 'center',\n        // alignContent: 'center',\n\n        // justifyContent: 'center',\n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n});\n\nexport default class Banner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        if (this.props.justLeft) {\n            viewStyle = propStyles.justLeft;\n        // } else if (this.props.noTop) {\n        //     viewStyle = propStyles.noTop;\n        // } else if (this.props.noBottom) {\n        //     viewStyle = propStyles.noBottom;\n        } else if (this.props.bottomCorners) {\n            viewStyle = propStyles.bottomCorners;\n        } else if (this.props.justBorder) {\n            viewStyle = propStyles.justBorder;\n        // } else if (this.props.corners) {\n        //     viewStyle = propStyles.corners;\n        // } \n        }\n        if (this.props.noBackground) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {backgroundColor: 'clear'}}.style))\n        }\n        if (this.props.borderColor) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderColor: this.props.borderColor}}.style))\n        }\n        if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderTopWidth: 0}}.style))\n        }\n        if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderBottomWidth: 0}}.style))\n        }\n        if (this.props.noBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderWidth: 0}}.style))\n        }\n        if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderRadius:0}}.style))\n        }\n        // if (this.props.scroll) {\n        //     viewStyle = StyleSheet.compose(viewStyle, propStyles.scroll);   \n        //     return (\n        //         <ScrollView style={viewStyle}>\n        //             <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n        //         </ScrollView>\n        //     )\n        // }\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        {this.props.children}\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    {this.props.children}\n                </View>\n            )\n        }\n        \n    }\n};","\n\nexport default class StaticMusicBox {\n\n    playlist = null;\n    onStartSong = null;\n    onEndSong = null;\n    soundPlayer = null;\n\n    States = {\n        INITIAL: \"INITIAL\",\n        PLAYING: \"PLAYING\",\n        PAUSED: \"PAUSED\",\n        FINISHED: \"FINISHED\"\n    }\n\n    constructor(soundPlayer, playlist) {\n        this.playlist = playlist;\n        this.soundPlayer = soundPlayer;\n    }\n    \n    getSongIndex(songName) {\n        return this.playlist.findIndex((v) => v.name === songName);\n    }\n\n    async playPause(currentState, currentSongName, newSongName, songFinishCallback=(n)=>{}) {\n        \n        const index = this.getSongIndex(newSongName)\n        switch(currentState) {\n            case this.States.INITIAL:\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n                return this.States.PLAYING;\n\n            case this.States.PLAYING:\n                if (currentSongName === newSongName) {\n                    await this.soundPlayer.pauseAsync();\n                    return this.States.PAUSED;\n                }\n\n                await this.soundPlayer.unloadAsync();\n                \n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n\n                return this.States.PLAYING;\n            case this.States.PAUSED:\n                if (currentSongName === newSongName) {\n                    await this.soundPlayer.playAsync();\n                    return this.States.PLAYING;\n                }\n\n                await this.soundPlayer.unloadAsync();\n                // const index = this.getSongIndex(newSongName)\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n\n                return this.States.PLAYING;\n\n            case this.States.FINISHED:\n                console.log(\"Song Finished\");\n                return this.States.FINISHED;\n        }\n    }\n\n    async skipToSong(currentState, newSongName, songFinishCallback=(n)=>{}) {\n        const index = this.getSongIndex(newSongName)\n        switch(currentState) {\n            case this.States.INITIAL:\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n\n            case this.States.PLAYING:\n                await this.soundPlayer.unloadAsync();\n                // const index = this.getSongIndex(newSongName)\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n                return this.States.PLAYING;\n            case this.States.PAUSED:\n                await this.soundPlayer.unloadAsync();\n                // const index = this.getSongIndex(newSongName)\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n                return this.States.PLAYING;\n            case this.States.FINISHED:\n                console.log(\"Song Finished\");\n                return this.States.FINISHED;\n\n        }\n    }\n\n}","\nimport { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner\";\n// import MusicBox from \"../MusicBox\"\nimport StaticMusicBox from \"../StaticMusicBox\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\n\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    const copy = Object.entries(state).map(([key, value]) => ({[key]:OPACITY_STATE.PAUSE}));\n\n    copy[action.type] = action.payload  \n    return copy;\n}\n\n\nexport default class StyledMusicPlayer extends React.Component {\n\n    state = {\n        isNexting: false,\n        flatListRef: null,\n        isPlaying: false,\n        playbackInstance: null,\n        currentIndex: 0,\n        volume: 1.0,\n        isBuffering: false,\n        opacities: Object.assign({}, ...this.props.playlist.map((x)=>({[x.name]:OPACITY_STATE.PAUSE})))\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    onPlayPause_dispatchSideEffects = (isPlaying) => {\n        const { opacities } = this.state\n        const songName = this.props.playlist[this.state.currentIndex].name;\n        const opacityLevel = isPlaying? OPACITY_STATE.PLAY : OPACITY_STATE.PAUSE;\n        const newOpacities = songOpacityReducer(opacities, {type: songName, payload: opacityLevel});\n        this.state.flatListRef.scrollToIndex({animated: true, index: this.state.currentIndex});\n        this.setState({opacities: newOpacities});   \n    }\n\n    async loadAudio() {\n        const {currentIndex, isPlaying, volume} = this.state\n      \n        try {\n          const playbackInstance = new Audio.Sound()\n          const source = {\n            uri: this.props.playlist[currentIndex].track.uri\n          }\n      \n          const status = {\n            shouldPlay: isPlaying,\n            volume\n          }\n      \n          playbackInstance.setOnPlaybackStatusUpdate(this.onPlaybackStatusUpdate)     \n          await playbackInstance.loadAsync(source, status, false)\n          this.setState({playbackInstance})\n\n          } catch (e) {\n            console.log(e)\n          }\n    }\n\n    onPlaybackStatusUpdate = status => {\n        \n        this.setState({\n          isBuffering: status.isBuffering\n        })\n\n        if (status.didJustFinish) {\n            const {currentIndex} = this.state;\n            if (currentIndex === this.props.playlist.length - 1) {\n                this.handlePlayPause();\n                return;\n            }\n            this.handleNextTrack();\n        }\n    }\n\n    handleSongButton = async (songName) => {\n\n        const {currentIndex} = this.state;\n        if (songName === this.props.playlist[this.state.currentIndex]) {\n            await this.handlePlayPause();\n        } else if (currentIndex === this.props.playlist.length - 1) {\n            songName = this.props.playlist[0].name;\n        }\n        else {\n            var songIndex = this.props.playlist.findIndex((x)=>x.name===songName);\n            if (songIndex===-1){\n                console.warn(\"ERROR: SONG NOT FOUND: 103\");\n            }\n            try {\n                if(songIndex === -1) {songIndex = 0}\n                let { playbackInstance } = this.state\n                if (playbackInstance) {\n                await playbackInstance.unloadAsync()\n\n                this.setState({\n                    currentIndex: songIndex\n                })\n                this.setState({\n                    isPlaying: true\n                })\n                this.loadAudio()\n                }\n                this.onPlayPause_dispatchSideEffects(true);\n            }\n            catch (err) {\n                console.error(err);\n            }\n            \n        }\n    }\n\n    handlePlayPause = async () => {\n        const { isPlaying, playbackInstance } = this.state\n        isPlaying ? await playbackInstance.pauseAsync() : await playbackInstance.playAsync()\n    \n        this.onPlayPause_dispatchSideEffects(!isPlaying);\n\n        this.setState({\n          isPlaying: !isPlaying\n        })\n      }\n    \n    handlePreviousTrack = async () => {\n        let { playbackInstance, currentIndex, isPlaying } = this.state\n\n        if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (currentIndex === 0) {\n            return;\n        } else if (playbackInstance) {\n          await playbackInstance.unloadAsync()\n          currentIndex > 0 ? (currentIndex -= 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n          \n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n      }\n    \n    handleNextTrack = async () => {\n        \n        let { playbackInstance, currentIndex, isPlaying} = this.state\n\n        if (this.state.isNexting) {\n            return;\n        }\n        else if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (playbackInstance) {\n            this.state.isNexting = true;\n          await playbackInstance.unloadAsync()\n          currentIndex < this.props.playlist.length - 1 ? (currentIndex += 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n\n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n        this.state.isNexting = false;\n    }\n\n    async componentDidMount() {\n\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {this.state.playbackInstance.unloadAsync(); console.log(\"a\")});\n        // const initialOpacityState = this.props.playlist.map((element) => {\n        //     var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict\n        // });\n\n        try {\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n                shouldDuckAndroid: true,\n                staysActiveInBackground: false,\n                playThroughEarpieceAndroid: true\n            });\n            this.loadAudio();\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n    async componentWillUnmount() {\n        this.state.playbackInstance.unloadAsync();\n    }\n\n\n\n    render() {\n        return (\n            <ViewContainer color='clear' height='54.5454545%' width='50%' top='.6%' nudge>\n                <ViewContainer height='20%' width='50%'>\n                        <TextBanner \n                            noBottom \n                            height='100%' \n                            width='100%' \n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.subtitleFontSize}\n                            lineHeight={this.props.subtitleLineHeight}\n                        >{this.props.themeName}</TextBanner>\n                    </ViewContainer>\n                <Banner \n                        height='65%' \n                        width='100%'\n                        borderWidth={this.props.bannerBorderWidth}\n                        corners\n                        // noBackground\n                    >\n                        <FlatList\n                            ref={(ref) => {this.state.flatListRef = ref}}\n                            vertical\n                            showsHorizontalScrollIndicator={false}\n                            showsVerticalScrollIndicator={false}\n                            keyExtractor={(track) => track.name}\n                            data={this.props.playlist}\n                            renderItem={({item}) => {\n                                return (\n                                    <Banner \n                                        height='100%' \n                                        width='100%' \n                                        corners\n                                        noBorder\n                                        noBackground>\n                                            \n                                    <TouchableOpacity \n                                        onPress={() => {\n                                            this.handleSongButton(item.name)}}>\n                                        <View style={{opacity: this.state.opacities[item.name]}}>\n                                            <ScrollView  \n                                                style={{flexDirection: 'row'}}\n                                                horizontal\n                                                showsHorizontalScrollIndicator={false}\n                                                nestedScrollEnabled \n                                            >   \n                                                <View><Text style={this.props.fontStyle(this.props.subtitleFontSize, this.props.subtitleLineHeight, 'flex-start', this.props.subtitleFontSize/2, \"Tinos_400Regular\").style}\n                                                >{item.name} / {item.artist}</Text></View>\n                                               \n                                            </ScrollView>\n                                            <ScrollView>\n                                                <View><Text style={this.props.fontStyle(this.props.titleFontSize, this.props.titleLineHeight, 'center', 0, \"PressStart2P_400Regular\").style}\n                                                >--------------</Text></View>                                            \n                                            </ScrollView>\n                                            \n                                        </View>\n                                    </TouchableOpacity></Banner>\n                                )\n                            }}\n                        >\n                            \n                        </FlatList>\n                    </Banner >\n                    <ViewContainer color='clear' height='15%' width='100%'>\n                        <TextBanner \n                            noTop\n                            height='100%'\n                            width='100%'\n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.subtitleFontSize}\n                            lineHeight={this.props.subtitleLineHeight}\n                        >\n\n                            <TouchableOpacity\n                                onPress={this.handlePreviousTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-back-circle\"\n                                    size={this.props.titleFontSize} \n                                    color=\"white\"\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handlePlayPause}\n                            >\n                                {this.state.isPlaying ? (\n                                    <AntDesign name='pausecircle' size={this.props.titleFontSize} color=\"white\" />\n                                    ) : (\n                                    <AntDesign name='play' size={this.props.titleFontSize} color=\"white\" />\n                                )}\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handleNextTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-forward-circle\"\n                                    size={this.props.titleFontSize} \n                                    color=\"white\"\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n                        </TextBanner>\n                    </ViewContainer>\n            </ViewContainer>\n        )\n    }\n}","import { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner\";\n// import MusicBox from \"../MusicBox\"\nimport StaticMusicBox from \"../StaticMusicBox\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\nimport StyledMusicPlayer from \"../components/StyledMusicPlayer\";\n\nconst PLAYLIST = [\n    { name: 'Mario Coin', artist: \"Uhh\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Mario-coin-sound.mp3\"}},\n    { name: 'Linked Horizon', artist: \"Revo\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/LinkedHorizon.mp3\"}},\n    { name: 'Let Me Hear', artist: \"Fear and Loathing in Las Vegas\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/LetMeHear.mp3\"} },\n    { name: 'Heavenly Blue', artist: \"Hiroyuki Sawano\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/HeavenlyBlue.mp3\"}},\n    { name: 'The World', artist: \"Yutaka Yamada\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/TheWorld.mp3\"}},\n    { name: 'Sono Chi No Sadame', artist: \"Bluff\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/SonoChiNoSadame.mp3\"}},\n    { name: 'Unravel', artist: \"Toru Kitajima\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Unravel.mp3\"}},\n    { name: 'Magia', artist: \"Kalafina\", track: { uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/angryPuella.mp3\"}},\n    { name: 'Papermoon', artist: \"Tomoko Kawase\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Papermoon.mp3\"}},\n    { name: 'Clattanoia', artist: \"OxT\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Clattanoia.mp3\"}}\n];\n\n\n\n\n\nconst PLAY_PAUSE_STATE = {\n    PLAY: \"play\",\n    PAUSE: \"pausecircle\"\n}\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    \n    const copy = {...state};\n\n    if (copy[action.type] === OPACITY_STATE.PLAY) {\n        copy[action.type] = OPACITY_STATE.PAUSE;\n    }\n    else {\n        copy[action.type] = OPACITY_STATE.PLAY;\n    }\n    \n    return copy;\n}\n\nconst States = {\n    INITIAL: \"INITIAL\",\n    PLAYING: \"PLAYING\",\n    PAUSED: \"PAUSED\",\n    FINISHED: \"FINISHED\"\n}\n\n\nconst handleSkip = async (staticMusicBox, musicState, setMusicState,currentSongName, setCurrentSong, handleSongEnd=(n)=>{}) => {\n    switch(musicState) {\n        case States.INITIAL:\n            await handlePlayPause(staticMusicBox, musicState, setMusicState,currentSongName, setCurrentSong, handleSongEnd);\n            break;\n        case States.PLAYING: case States.PAUSED: case States.FINISHED:\n            var currentSongIndex = PLAYLIST.findIndex((v)=> v.name === currentSongName);\n            if (currentSongIndex === -1) {\n\n                console.warn(\"WARNING: did not find song\")\n                console.log(\"was looking for: \" + currentSongName)\n                console.log(\"from: \", PLAYLIST)\n                setMusicState(States.INITIAL);\n                break;\n            }\n\n            console.log((currentSongIndex+1)%PLAYLIST.length);\n            var newSongName = PLAYLIST[(currentSongIndex+1)%PLAYLIST.length].name;\n            setMusicState(States.INITIAL);\n            setMusicState(await staticMusicBox.skipToSong(States.INITIAL, currentSongName, newSongName,handleSongEnd));\n            break;\n\n    }\n}\n\n\nconst handlePlayPause = async (staticMusicBox, musicState, setMusicState,currentSongName, setCurrentSong, handleSongEnd=(n)=>{}) => {\n\n    switch(musicState) {\n        case States.INITIAL:\n            var newSongName = PLAYLIST[0].name\n            setCurrentSong(newSongName);\n            setMusicState(await staticMusicBox.playPause(musicState, currentSongName, newSongName,handleSongEnd));\n            break;\n        case States.PLAYING:\n            setMusicState(await staticMusicBox.playPause(musicState, currentSongName, currentSongName,handleSongEnd));\n            break;\n        case States.PAUSED:\n            setMusicState(await staticMusicBox.playPause(musicState, currentSongName, currentSongName,handleSongEnd));\n            break;\n        case States.FINISHED:\n            var currentSongIndex = PLAYLIST.findIndex((v)=> v.name === currentSongName);\n            if (currentSongIndex+1 >= PLAYLIST.length - 1) {\n                setMusicState(States.INITIAL);\n                break;\n            } \n            \n            var newSongName = PLAYLIST[currentSongIndex+1].name;\n            setCurrentSong(newSongName);\n            setMusicState(States.INITIAL);\n            setMusicState(await staticMusicBox.playPause(States.INITIAL, currentSongName, newSongName,handleSongEnd));\n            break;\n\n    }\n}\n\nconst PlaylistScreen = ({navigation}) => {\n\n    const THEME = navigation.getParam(\"themeName\");\n    let IMAGE;\n    let PLAYLIST;\n    console.log(AppConstants.themePlaylists);\n    switch(THEME) {\n        case AppConstants.themes.Beach:\n            IMAGE = AppConstants.themeImage[THEME];\n            PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Cloudy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Happy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Party:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Pumped:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Romantic:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Sad:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Icy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Space:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Weird:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        default:\n            IMAGE = AppConstants.HomeScreenImage;\n            PLAYLIST = AppConstants.themePlaylists.Anime;\n            break;\n    }\n    PLAYLIST = AppConstants.themePlaylists[\"Beach\"];\n    console.log(THEME)\n\n    // console.log();\n    const [soundPlayer, setSoundPlayer] = React.useState(new Audio.Sound);\n\n    const initialOpacityState = PLAYLIST.map((element) => {var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict})\n\n\n\n    const [opacityState, opacityDispatch] = React.useReducer(songOpacityReducer, initialOpacityState)\n\n    const opacityCallback = (i) => {\n            opacityDispatch({type: PLAYLIST[i].name})\n        }\n\n    // const createState = (x) => {React.useState(x)};\n\n    // const musicBox = new MusicBox(soundPlayer, PLAYLIST, React.useState, opacityCallback, opacityCallback);\n    \n    const [musicState, setMusicState] = useState(States.INITIAL);\n    const [currentSong, setCurrentSong] = useState(\"\");\n\n    const staticMusicBox = new StaticMusicBox(soundPlayer, PLAYLIST);\n    const [playPauseState, setPlayPauseState] = useState(PLAY_PAUSE_STATE.PLAY);\n\n    const onFinishSong = (nameOfSong) => {\n        console.log(`Finished: ${nameOfSong}`);\n        setCurrentSong(\"\");\n        setMusicState(States.FINISHED);\n\n        handlePlayPause(staticMusicBox, States.FINISHED,setMusicState,nameOfSong,setCurrentSong,onFinishSong)\n    }\n\n    const playPauseButton = () => {\n        handlePlayPause(staticMusicBox, musicState,setMusicState,currentSong,setCurrentSong,onFinishSong)\n    }\n    const skipButton = () => {\n        handleSkip(staticMusicBox, musicState,setMusicState,currentSong,setCurrentSong,onFinishSong)\n    }\n\n    const songButton = (nameOfSong) => {\n        setMusicState(States.PLAYING);\n        handlePlayPause(staticMusicBox, States.PLAYING,setMusicState,nameOfSong,setCurrentSong,onFinishSong)\n    }\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * 1.0;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.SUBTITLE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * 1.5;\n\n    const fontStyle = (fontSize, lineHeight, align, leftPad, fontStyle) => { \n        return StyleSheet.create(\n            {\n                style: {\n                    fontFamily: fontStyle,\n                    fontSize: fontSize,\n                    textAlign: \"left\",\n                    textAlignVertical: 'center',\n                    color: 'white',\n                    opacity: 1,\n                    lineHeight: lineHeight,\n                    paddingLeft: leftPad,\n                    alignSelf: align,\n                    alignContent: 'flex-start',\n                    alignItems: 'flex-start',\n                    \n                },\n            }\n        );\n    };\n\n    console.log(fontStyle(5,4))\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={IMAGE.src} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>   \n                    <StyledMusicPlayer\n                        navigation={navigation}\n                        themeName={navigation.getParam(\"themeName\")}\n                        playlist={PLAYLIST}\n                        opacityState={opacityState}\n                        fontStyle={fontStyle}\n                        subtitleFontSize={scaled_subtitleFontSize}\n                        subtitleLineHeight={scaled_subtitleLineHeight}\n                        titleFontSize={scaled_titleFontSize}\n                        titleLineHeight={scaled_titleLineHeight}\n                        playPauseState={playPauseState}\n                        bannerBorderWidth={scaledButtonBorderWidth}\n                    ></StyledMusicPlayer>\n            </StyledBackground>\n        </ViewContainer>\n    )\n\n}\n\n\n\nexport default PlaylistScreen; ","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\n\nclass FirstScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        console.log(this.props)\n    }\n    static navigationOptions = {\n      title: 'First',\n    }\n    componentDidMount(){\n    }\n    render() {\n      const {navigate} = this.props.props.navigation;\n      navigate('Home');\n\n      return (\n        <AppLoading />\n      );\n      \n    }\n  }\n\nconst RootScreen = (props) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n\n    return (\n        <View>\n            <FirstScreen props={props}></FirstScreen>\n        </View>\n    )\n}\n\nexport default RootScreen;\n","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useEffect, useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { Asset, useAssets } from 'expo-asset'\n\nconst HomeScreen = ({navigation}) => {\n    // navigation.navigate('Home')\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n\n    const icon_uris = Object.values(AppConstants.icons).map((element)=>element.uri)\n    const themeBackground_uris = Object.values(AppConstants.themeImage).map((element)=>element.src.uri);\n    const beachSong_uris = AppConstants.themePlaylists.Beach.map((element)=>element.track.uri);\n    // console.log(Object.keys(AppConstants.icons));\n    const [assets] = useAssets([\n        \n        AppConstants.HomeScreenImage.src.uri,\n        AppConstants.themeImage.Beach.src.uri,\n        ...icon_uris,\n        ...beachSong_uris,\n        ...themeBackground_uris\n      ]);\n    if (!fontsLoaded && !assets) {\n        return <ViewContainer color='black' height='100%' width='100%' >\n            <Image\n                source={require('../assets/loading.gif')}\n                style={{flex:1, aspectRatio: 2,height:'100%', width:'100%'}}\n                resizeMode='contain'\n            ></Image>\n        </ViewContainer>\n    }\n\n    \n\n\n    // function cacheImages(images) {\n    //     return images.map(image => {\n    //       if (typeof image === 'string') {\n    //         return Image.prefetch(image);\n    //       } else {\n    //         return Asset.fromModule(image).downloadAsync();\n    //       }\n    //     });\n    //   }\n\n    // const _loadAssets = async function () {\n    //     const imageAssets = cacheImages([\n    //         AppConstants.HomeScreenImage.src.uri,\n    //         AppConstants.themeImage.Beach.src.uri,\n    //         AppConstants.icons.Beach.src.uri\n    //     ])\n        \n\n    //     await Promise.all([...imageAssets, ...fontAssets]);\n    // }\n\n    // const [assetsDone, setAssetsDone] = useState(false);\n    // if (!assetsDone) {       \n    //     return <AppLoading\n    //         startAsync={_loadAssets} \n    //         onFinish={()=>setAssetsDone(true)}\n    //         // onError={console.warn}\n    //     />;\n    // }\n    // const [assets] = useAssets([Asset.loadAsync(AppConstants.HomeScreenImage.src.uri)]);\n    \n    //   if (!assets) {\n    //     return (\n    //       <AppLoading />\n    //     );\n    //   }\n\n      \n\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = AppConstants.BUTTON_BORDER_WIDTH * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = AppConstants.TILE_FONT_SIZE * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <StyledBackground \n                    image={AppConstants.HomeScreenImage.src} \n                    height={scaledImageDim.height}\n                    width={scaledImageDim.width}>\n                    <ViewContainer apart nudge color='clear' height='84.5%' width='50%' top='.6%'>\n\n                        <ViewContainer color='clear' height='36%' width='100%'>\n                            <TextBanner\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_titleFontSize}\n                                lineHeight={scaled_titleLineHeight}\n                                height='78%'\n                                width='100%'\n                                bottomCorners\n                            >Choose Your Own Audioventure!</TextBanner>\n                            <TextBanner\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_subtitleFontSize}\n                                lineHeight={scaled_subtitleLineHeight}\n                                height='22%'\n                                width='100%'\n                                noTop\n                            >Click anywhere to start!</TextBanner>\n                        </ViewContainer>\n\n                        <TextBanner\n                            borderWidth={scaledButtonBorderWidth}\n                            fontSize={scaled_subtitleFontSize}\n                            lineHeight={scaled_subtitleLineHeight}\n                            // text=\"Credits\"\n                            height='9%'\n                            width='33%'\n                            touchable\n                        >Credits</TextBanner>\n\n                    </ViewContainer>\n                </StyledBackground>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBrowserApp } from '@react-navigation/web'\nimport {createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen'\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen'\nimport PlaylistScreen from './src/screens/PlaylistScreen'\nimport RootScreen from './src/screens/RootScreen'\n\nimport {Platform } from 'react-native'\n\nimport HomeScreen from './src/screens/HomeScreen'\n\nconst navigator = createStackNavigator(\n\n  {\n    Root: RootScreen,\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Playlist: PlaylistScreen\n  },\n  {\n    initialRouteName: 'Root',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\n\nexport default Platform.select({\n  web: config => createBrowserApp(config, {history: 'hash'}),\n  default: config => createAppContainer(config)\n})(navigator);\n\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}