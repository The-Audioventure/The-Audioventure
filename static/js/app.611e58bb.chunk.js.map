{"version":3,"sources":["src/components/ViewContainer.js","src/components/StyledBackground.js","src/utilities.js","src/components/TextBanner.js","src/AppConstants.js","src/screens/ChooseMoodOrPlaceScreen.js","src/components/CircleButton.js","src/components/IconButton.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/components/Banner.js","src/StaticMusicBox.js","src/components/StyledMusicPlayer.js","src/screens/PlaylistScreen.js","src/screens/RootScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V3/index.js?f349"],"names":["ViewContainer","props","viewStyle","this","StyleSheet","create","style","justifyContent","backgroundColor","color","alignItems","height","width","nudge","compose","top","bottom","left","right","horizontal","flexDirection","apart","radius","borderRadius","round","onPress","children","View","React","Component","StyledBackground","resizeMode","overflow","ImageBackground","source","image","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","TextBanner","propStyles","scroll","flexWrap","showsVerticalScrollIndicato","default","borderWidth","borderColor","paddingHorizontal","justLeft","borderLeftWidth","noTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","noBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","bottomCorners","corners","justBorder","fontStyle","fontFamily","fontSize","textAlign","textAlignVertical","opacity","lineHeight","touchable","TouchableOpacity","Text","AppConstants","BACKGROUND_IMAGE","uri","BACKGROUND_IMAGE_HEIGHT","BACKGROUND_IMAGE_WIDTH","BUTTON_BORDER_WIDTH","GOOGLE_DOCS_TEXT_CONVERSION_RATIO","TILE_FONT_SIZE","SUBTITLE_FONT_SIZE","CLICK_FONT_SIZE","LINE_SPACING","ChooseMoodOrPlace","navigation","useState","Dimensions","get","setWindow","window","addEventListener","useFonts","PressStart2P_400Regular","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","navigate","CircleButton","fillRectangle","iteration","starting","barHeight","fillRectangleHeight","roundedRadius","Math","ceil","y","size","sqrt","pow","verticalLocation","location","key","baseRectangleStyle","renderLines","Array","numberOfRectangles","map","_","index","fillRectangles","Fragment","circleDiameter","position","zIndex","elevation","localStyles","styles","container","activeOpacity","button","alignContent","IconButton","centerHeight","displaceRadius","sin","angle","centerWidth","cos","iconSize","Image","ICONS","Back","name","Pumped","Lazy","Happy","Weird","Sad","Romantic","Random","THEMES","MatchMyMoodScreen","CENTER_SCREEN_HEIGHT","CENTER_SCREEN_WIDTH","ICONS_SCREEN_RADIUS","icons","elem","indx","PI","themeName","Home","Cloudy","Beach","Party","Icy","Space","TakeMeSomewhere","Banner","noBackground","noBorder","StaticMusicBox","soundPlayer","playlist","onStartSong","onEndSong","States","INITIAL","PLAYING","PAUSED","FINISHED","songName","findIndex","v","currentState","currentSongName","newSongName","a","async","songFinishCallback","n","getSongIndex","loadAsync","track","playAsync","_onPlaybackStatusUpdate","status","didJustFinish","unloadAsync","pauseAsync","console","log","OPACITY_STATE","StyledMusicPlayer","state","isNexting","flatListRef","isPlaying","playbackInstance","currentIndex","volume","isBuffering","opacities","Object","assign","x","onPlayPause_dispatchSideEffects","newOpacities","action","copy","entries","type","payload","songOpacityReducer","scrollToIndex","animated","setState","onPlaybackStatusUpdate","length","handlePlayPause","handleNextTrack","handleSongButton","songIndex","warn","loadAudio","error","handlePreviousTrack","Audio","Sound","shouldPlay","setOnPlaybackStatusUpdate","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","shouldDuckAndroid","staysActiveInBackground","playThroughEarpieceAndroid","bannerBorderWidth","subtitleFontSize","subtitleLineHeight","ref","vertical","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","data","renderItem","item","ScrollView","nestedScrollEnabled","artist","titleFontSize","titleLineHeight","Ionicons","AntDesign","PLAYLIST","PLAY_PAUSE_STATE","PlaylistScreen","initialOpacityState","element","dict","useReducer","opacityState","playPauseState","scaled_subtitleFontSize","scaled_subtitleLineHeight","align","leftPad","paddingLeft","alignSelf","getParam","FirstScreen","navigationOptions","title","RootScreen","HomeScreen","navigator","createStackNavigator","Root","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhereScreen","Playlist","initialRouteName","headerMode","defaultNavigationOptions","cardStyle","Platform","select","web","config","createBrowserApp","history","createAppContainer","registerRootComponent","App"],"mappings":"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","file":"static/js/app.611e58bb.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS } from 'react-native';\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        backgroundColor: props.color,\n        alignItems: 'center',\n        height: props.height,\n        width: props.width\n    }\n\n});\n\nconst nudge = (props) => StyleSheet.create({\n    style: {\n        top: props.top,\n        bottom: props.bottom,\n        left: props.left,\n        right: props.right\n    }\n})\n\nconst horizontal = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'flex-start',\n        flexDirection: 'row'\n    }\n})\n\nconst apart = (props) => StyleSheet.create({\n    style: {\n        justifyContent: \"space-between\"\n    }\n})\n\nconst round = (props) => StyleSheet.create({\n    style: {\n        borderRadius: props.radius\n    }\n})\n\nexport default class ViewContainer extends React.Component {\n    render() {\n        var viewStyle = styles(this.props).style;\n            // console.log(this.props)\n            if (this.props.nudge){\n                // console.log('nudge!')\n                viewStyle = StyleSheet.compose(viewStyle, nudge(this.props).style);\n            }\n            if (this.props.horizontal) {\n                viewStyle = StyleSheet.compose(viewStyle, horizontal(this.props).style);\n            }\n            if (this.props.apart) {\n                viewStyle = StyleSheet.compose(viewStyle, apart(this.props).style);\n            }\n            if (this.props.radius) {\n                viewStyle = StyleSheet.compose(viewStyle, round(this.props).style);\n            }\n\n        if (this.props.onPress) {\n            return (<TouchableOpacity onPress={this.props.onPress} style={viewStyle}>{this.props.children}</TouchableOpacity>)\n        } else {\n            return (<View style={viewStyle}>{this.props.children}</View>)\n        }\n        \n    }\n};","import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: props.height,\n        width: props.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        overflow: 'hidden',\n    }\n});\n\nexport default class StyledBackground extends React.Component {\n    render() {\n        var style = styles(this.props);\n        // console.log(this.props);\n\n        return (\n            <ImageBackground style={style.style} source={this.props.image}> \n                {this.props.children}\n            </ImageBackground>\n        )\n    }\n};","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        paddingHorizontal: '3%',\n        alignItems: 'center',\n\n        \n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    fontStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: props.fontSize,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: props.lineHeight\n    }\n});\n\nexport default class TextBanner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        // console.log(this.props);\n        if (this.props.justLeft) {\n            viewStyle = propStyles.justLeft;\n        } else if (this.props.noTop) {\n            viewStyle = propStyles.noTop;\n        } else if (this.props.noBottom) {\n            viewStyle = propStyles.noBottom;\n        } else if (this.props.bottomCorners) {\n            viewStyle = propStyles.bottomCorners;\n        } else if (this.props.justBorder) {\n            viewStyle = propStyles.justBorder;\n        } else if (this.props.corners) {\n            viewStyle = propStyles.corners;\n        } \n\n        // if (this.props.scroll) {\n        //     viewStyle = StyleSheet.compose(viewStyle, propStyles.scroll);   \n        //     return (\n        //         <ScrollView style={viewStyle}>\n        //             <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n        //         </ScrollView>\n        //     )\n        // }\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                </View>\n            )\n        }\n        \n    }\n};","const GOOGLE_DOCS_TEXT_CONVERSION_RATIO =  2.14285714;\n\nconst AppConstants = {\n    BACKGROUND_IMAGE: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/backgroundBanner.gif\" },\n    BACKGROUND_IMAGE_HEIGHT: 867,\n    BACKGROUND_IMAGE_WIDTH: 1542,\n    BUTTON_BORDER_WIDTH: 7,\n    GOOGLE_DOCS_TEXT_CONVERSION_RATIO: GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    TILE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    SUBTITLE_FONT_SIZE: 21 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLICK_FONT_SIZE: 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    LINE_SPACING: 1.15\n};\n\nexport default AppConstants;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\nconst ChooseMoodOrPlace = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n    \n\n    return (\n        <ViewContainer color='white' height='100%' width='100%' horizontal >\n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('MatchMyMood')}}\n                style={{backgroundColor: 'rgb(238,238,238)', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Match My<br></br>Mood!]</TextBanner>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('TakeMeSomewhere')}}\n                style={{backgroundColor: '#8e7cc3c6', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Take Me<br></br>Somewhere!]</TextBanner>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n\n}\n\nexport default ChooseMoodOrPlace;\n","import React from 'react';\nimport {View, StyleSheet, TouchableOpacity } from 'react-native';\n\nexport default class CircleButton extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.numberOfRectangles = 15\n    this.radius = this.props.circleDiameter / 2\n\n    // base the height of each bars on the circle radius.\n    // Add 1 to the value b/c we will subtract one down below to get rid of the zero index\n    this.fillRectangleHeight = this.radius / (this.numberOfRectangles + 1)\n\n    // The style used for the rectangles\n    // the zIndex and elevation of 10 puts the rectangles in front of the clickable button\n    this.baseRectangleStyle = {\n      position: 'absolute',\n      zIndex: 10,\n      elevation: 10,\n    }\n  }\n\n  fillRectangle = (iteration, starting) => {\n    const barHeight = this.fillRectangleHeight\n    const roundedRadius = Math.ceil(this.radius)\n    const y = (barHeight * iteration)\n\n    const x = Math.ceil(Math.sqrt(Math.pow(this.radius, 2) - Math.pow(y, 2)))\n\n    let width = roundedRadius - x\n\n    // The bar dimensions\n    const size = {\n      width: width,\n      height: barHeight\n    };\n\n    const verticalLocation = y + roundedRadius\n\n    let location = {}\n    if(starting === 'topLeft'){\n      location = {\n        left: 0,\n        bottom: verticalLocation,\n      };\n    }else if(starting === 'bottomLeft'){\n      location = {\n        left: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'topRight'){\n      location = {\n        right: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'bottomRight'){\n      location = {\n        right: 0,\n        bottom: verticalLocation,\n      }\n    };\n\n    // Create a unique key to identify the element\n    let key = \"\" + iteration + starting\n\n    return(\n      <View key={key} style={{...this.baseRectangleStyle, ...size, ...location}}></View>\n    )\n  };\n\n  renderLines = (starting) => {\n    //start with index+1 b/c 0 will be a width of zero, so no point in doing that math\n    return [...Array(this.numberOfRectangles)].map((_, index) => this.fillRectangle(index+1, starting))\n  }\n\n  fillRectangles = () => {\n    return(\n      <React.Fragment>\n        {this.renderLines('topLeft')}\n        {this.renderLines('bottomLeft')}\n        {this.renderLines('topRight')}\n        {this.renderLines('bottomRight')}\n      </React.Fragment>\n     )\n   };\n\n  render(){\n    let localStyles = styles(this.props)\n\n    return (\n      <View style={localStyles.container}>\n        <TouchableOpacity\n          activeOpacity={.2}\n          style = {localStyles.button}\n          onPress = {this.props.onPress}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n\n        {this.fillRectangles()}\n      </View>\n    )\n  }\n}\n\nconst styles = (props) => StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 0,\n  },\n  button: {\n    backgroundColor: 'clear',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderRadius: (props.circleDiameter / 2),\n    width: props.circleDiameter,\n    height: props.circleDiameter,\n\n    top: props.top,\n    bottom: props.bottom,\n    right: props.right,\n    left: props.left\n  },\n});","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\n\n\nexport default class IconButton extends React.Component {\n    render() {\n        return (\n            <View \n                style={{bottom: this.props.centerHeight + this.props.displaceRadius * Math.sin(this.props.angle), \n                        left: this.props.centerWidth + this.props.displaceRadius * Math.cos(this.props.angle), \n                        position: 'absolute'}}>\n                <CircleButton  \n                        circleDiameter={this.props.iconSize} \n                        onPress={this.props.onPress}\n                        >\n                        <Image \n                            style={{ height: this.props.iconSize, width: this.props.iconSize, borderRadius: 100 }} \n                            source={this.props.image}>\n                        </Image>\n                    </CircleButton>\n            </View>\n        )\n    }\n}","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Pumped: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/pumped.png\", name: \"Pumped\"},\n    Lazy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/lazy.png\", name: \"Lazy\"},\n    Happy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/happy.png\", name: \"Happy\"},\n    Weird: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/weird.png\", name: \"Weird\"},\n    Sad: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/sad.png\", name: \"Sad\"},\n    Romantic: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/romance.png\", name: \"Romantic\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Pumped\",\n    \"Lazy\",\n    \"Happy\",\n    \"Weird\",\n    \"Sad\",\n    \"Romantic\",\n    \"Random\"\n]\n\n\n\nconst MatchMyMoodScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.BACKGROUND_IMAGE} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default MatchMyMoodScreen;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\nimport { StackActions }from '@react-navigation/web'\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n    Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n    Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n    Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n    Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n    Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Home\",\n    \"Cloudy\",\n    \"Beach\",\n    \"Party\",\n    \"Icy\",\n    \"Space\",\n    \"Random\"\n]\n\n\n\nconst TakeMeSomewhere = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.BACKGROUND_IMAGE} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default TakeMeSomewhere;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        // justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        // paddingHorizontal: '3%',\n        // alignItems: 'center',\n        // alignContent: 'center',\n\n        // justifyContent: 'center',\n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n});\n\nexport default class Banner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        if (this.props.justLeft) {\n            viewStyle = propStyles.justLeft;\n        // } else if (this.props.noTop) {\n        //     viewStyle = propStyles.noTop;\n        // } else if (this.props.noBottom) {\n        //     viewStyle = propStyles.noBottom;\n        } else if (this.props.bottomCorners) {\n            viewStyle = propStyles.bottomCorners;\n        } else if (this.props.justBorder) {\n            viewStyle = propStyles.justBorder;\n        // } else if (this.props.corners) {\n        //     viewStyle = propStyles.corners;\n        // } \n        }\n        if (this.props.noBackground) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {backgroundColor: 'clear'}}.style))\n        }\n        if (this.props.borderColor) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderColor: this.props.borderColor}}.style))\n        }\n        if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderTopWidth: 0}}.style))\n        }\n        if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderBottomWidth: 0}}.style))\n        }\n        if (this.props.noBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderWidth: 0}}.style))\n        }\n        if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderRadius:0}}.style))\n        }\n        // if (this.props.scroll) {\n        //     viewStyle = StyleSheet.compose(viewStyle, propStyles.scroll);   \n        //     return (\n        //         <ScrollView style={viewStyle}>\n        //             <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n        //         </ScrollView>\n        //     )\n        // }\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        {this.props.children}\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    {this.props.children}\n                </View>\n            )\n        }\n        \n    }\n};","\n\nexport default class StaticMusicBox {\n\n    playlist = null;\n    onStartSong = null;\n    onEndSong = null;\n    soundPlayer = null;\n\n    States = {\n        INITIAL: \"INITIAL\",\n        PLAYING: \"PLAYING\",\n        PAUSED: \"PAUSED\",\n        FINISHED: \"FINISHED\"\n    }\n\n    constructor(soundPlayer, playlist) {\n        this.playlist = playlist;\n        this.soundPlayer = soundPlayer;\n    }\n    \n    getSongIndex(songName) {\n        return this.playlist.findIndex((v) => v.name === songName);\n    }\n\n    async playPause(currentState, currentSongName, newSongName, songFinishCallback=(n)=>{}) {\n        \n        const index = this.getSongIndex(newSongName)\n        switch(currentState) {\n            case this.States.INITIAL:\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n                return this.States.PLAYING;\n\n            case this.States.PLAYING:\n                if (currentSongName === newSongName) {\n                    await this.soundPlayer.pauseAsync();\n                    return this.States.PAUSED;\n                }\n\n                await this.soundPlayer.unloadAsync();\n                \n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n\n                return this.States.PLAYING;\n            case this.States.PAUSED:\n                if (currentSongName === newSongName) {\n                    await this.soundPlayer.playAsync();\n                    return this.States.PLAYING;\n                }\n\n                await this.soundPlayer.unloadAsync();\n                // const index = this.getSongIndex(newSongName)\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n\n                return this.States.PLAYING;\n\n            case this.States.FINISHED:\n                console.log(\"Song Finished\");\n                return this.States.FINISHED;\n        }\n    }\n\n    async skipToSong(currentState, newSongName, songFinishCallback=(n)=>{}) {\n        const index = this.getSongIndex(newSongName)\n        switch(currentState) {\n            case this.States.INITIAL:\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n\n            case this.States.PLAYING:\n                await this.soundPlayer.unloadAsync();\n                // const index = this.getSongIndex(newSongName)\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n                return this.States.PLAYING;\n            case this.States.PAUSED:\n                await this.soundPlayer.unloadAsync();\n                // const index = this.getSongIndex(newSongName)\n                await this.soundPlayer.loadAsync(this.playlist[index].track)\n                await this.soundPlayer.playAsync();\n                this.soundPlayer._onPlaybackStatusUpdate = (async (status) => {\n                    if (status.didJustFinish === true) {\n                        await this.soundPlayer.unloadAsync();\n                        songFinishCallback(newSongName);\n                    }\n                });\n                return this.States.PLAYING;\n            case this.States.FINISHED:\n                console.log(\"Song Finished\");\n                return this.States.FINISHED;\n\n        }\n    }\n\n}","\nimport { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner\";\n// import MusicBox from \"../MusicBox\"\nimport StaticMusicBox from \"../StaticMusicBox\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\n\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    const copy = Object.entries(state).map(([key, value]) => ({[key]:OPACITY_STATE.PAUSE}));\n\n    copy[action.type] = action.payload  \n    return copy;\n}\n\n\nexport default class StyledMusicPlayer extends React.Component {\n\n    state = {\n        isNexting: false,\n        flatListRef: null,\n        isPlaying: false,\n        playbackInstance: null,\n        currentIndex: 0,\n        volume: 1.0,\n        isBuffering: false,\n        opacities: Object.assign({}, ...this.props.playlist.map((x)=>({[x.name]:OPACITY_STATE.PAUSE})))\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    onPlayPause_dispatchSideEffects = (isPlaying) => {\n        const { opacities } = this.state\n        const songName = this.props.playlist[this.state.currentIndex].name;\n        const opacityLevel = isPlaying? OPACITY_STATE.PLAY : OPACITY_STATE.PAUSE;\n        const newOpacities = songOpacityReducer(opacities, {type: songName, payload: opacityLevel});\n        this.state.flatListRef.scrollToIndex({animated: true, index: this.state.currentIndex});\n        this.setState({opacities: newOpacities});   \n    }\n\n    async loadAudio() {\n        const {currentIndex, isPlaying, volume} = this.state\n      \n        try {\n          const playbackInstance = new Audio.Sound()\n          const source = {\n            uri: this.props.playlist[currentIndex].track.uri\n          }\n      \n          const status = {\n            shouldPlay: isPlaying,\n            volume\n          }\n      \n          playbackInstance.setOnPlaybackStatusUpdate(this.onPlaybackStatusUpdate)     \n          await playbackInstance.loadAsync(source, status, false)\n          this.setState({playbackInstance})\n\n          } catch (e) {\n            console.log(e)\n          }\n    }\n\n    onPlaybackStatusUpdate = status => {\n        \n        this.setState({\n          isBuffering: status.isBuffering\n        })\n\n        if (status.didJustFinish) {\n            const {currentIndex} = this.state;\n            if (currentIndex === this.props.playlist.length - 1) {\n                this.handlePlayPause();\n                return;\n            }\n            this.handleNextTrack();\n        }\n    }\n\n    handleSongButton = async (songName) => {\n\n        const {currentIndex} = this.state;\n        if (songName === this.props.playlist[this.state.currentIndex]) {\n            await this.handlePlayPause();\n        } else if (currentIndex === this.props.playlist.length - 1) {\n            songName = this.props.playlist[0].name;\n        }\n        else {\n            var songIndex = this.props.playlist.findIndex((x)=>x.name===songName);\n            if (songIndex===-1){\n                console.warn(\"ERROR: SONG NOT FOUND: 103\");\n            }\n            try {\n                if(songIndex === -1) {songIndex = 0}\n                let { playbackInstance } = this.state\n                if (playbackInstance) {\n                await playbackInstance.unloadAsync()\n\n                this.setState({\n                    currentIndex: songIndex\n                })\n                this.setState({\n                    isPlaying: true\n                })\n                this.loadAudio()\n                }\n                this.onPlayPause_dispatchSideEffects(true);\n            }\n            catch (err) {\n                console.error(err);\n            }\n            \n        }\n    }\n\n    handlePlayPause = async () => {\n        const { isPlaying, playbackInstance } = this.state\n        isPlaying ? await playbackInstance.pauseAsync() : await playbackInstance.playAsync()\n    \n        this.onPlayPause_dispatchSideEffects(!isPlaying);\n\n        this.setState({\n          isPlaying: !isPlaying\n        })\n      }\n    \n    handlePreviousTrack = async () => {\n        let { playbackInstance, currentIndex, isPlaying } = this.state\n\n        if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (currentIndex === 0) {\n            return;\n        } else if (playbackInstance) {\n          await playbackInstance.unloadAsync()\n          currentIndex < this.props.playlist.length - 1 ? (currentIndex -= 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n          \n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n      }\n    \n    handleNextTrack = async () => {\n        \n        let { playbackInstance, currentIndex, isPlaying} = this.state\n\n        if (this.state.isNexting) {\n            return;\n        }\n        else if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (playbackInstance) {\n            this.state.isNexting = true;\n          await playbackInstance.unloadAsync()\n          currentIndex < this.props.playlist.length - 1 ? (currentIndex += 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n\n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n        this.state.isNexting = false;\n    }\n\n    async componentDidMount() {\n\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {this.state.playbackInstance.unloadAsync(); console.log(\"a\")});\n        // const initialOpacityState = this.props.playlist.map((element) => {\n        //     var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict\n        // });\n\n        try {\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n                shouldDuckAndroid: true,\n                staysActiveInBackground: false,\n                playThroughEarpieceAndroid: true\n            });\n            this.loadAudio();\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n    async componentWillUnmount() {\n        this.state.playbackInstance.unloadAsync();\n    }\n\n\n\n    render() {\n        return (\n            <ViewContainer color='clear' height='54.5454545%' width='50%' top='.6%' nudge>\n                <ViewContainer height='20%' width='50%'>\n                        <TextBanner \n                            noBottom \n                            height='100%' \n                            width='100%' \n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.subtitleFontSize}\n                            lineHeight={this.props.subtitleLineHeight}\n                        >{this.props.themeName}</TextBanner>\n                    </ViewContainer>\n                <Banner \n                        height='65%' \n                        width='100%'\n                        borderWidth={this.props.bannerBorderWidth}\n                        corners\n                        noBackground\n                    >\n                        <FlatList\n                            ref={(ref) => {this.state.flatListRef = ref}}\n                            vertical\n                            showsHorizontalScrollIndicator={false}\n                            showsVerticalScrollIndicator={false}\n                            keyExtractor={(track) => track.name}\n                            data={this.props.playlist}\n                            renderItem={({item}) => {\n                                return (\n                                    <Banner \n                                        height='100%' \n                                        width='100%' \n                                        corners\n                                        noBorder>\n                                    <TouchableOpacity \n                                        onPress={() => {\n                                            this.handleSongButton(item.name)}}>\n                                        <View style={{opacity: this.state.opacities[item.name]}}>\n                                            <ScrollView  \n                                                style={{flexDirection: 'row'}}\n                                                horizontal\n                                                showsHorizontalScrollIndicator={false}\n                                                nestedScrollEnabled \n                                            >   \n                                                <View><Text style={this.props.fontStyle(this.props.subtitleFontSize, this.props.subtitleLineHeight, 'flex-start', this.props.subtitleFontSize/2).style}\n                                                >{item.name} / {item.artist}</Text></View>\n                                               \n                                            </ScrollView>\n                                            <ScrollView>\n                                                <View><Text style={this.props.fontStyle(this.props.titleFontSize, this.props.titleLineHeight, 'center', 0).style}\n                                                >--------------</Text></View>                                            \n                                            </ScrollView>\n                                            \n                                        </View>\n                                    </TouchableOpacity></Banner>\n                                )\n                            }}\n                        >\n                            \n                        </FlatList>\n                    </Banner >\n                    <ViewContainer color='clear' height='15%' width='100%'>\n                        <TextBanner \n                            noTop\n                            height='100%'\n                            width='100%'\n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.subtitleFontSize}\n                            lineHeight={this.props.subtitleLineHeight}\n                        >\n\n                            <TouchableOpacity\n                                onPress={this.handlePreviousTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-back-circle\"\n                                    size={this.props.titleFontSize} \n                                    color=\"white\"\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handlePlayPause}\n                            >\n                                {this.state.isPlaying ? (\n                                    <AntDesign name='pausecircle' size={this.props.titleFontSize} color=\"white\" />\n                                    ) : (\n                                    <AntDesign name='play' size={this.props.titleFontSize} color=\"white\" />\n                                )}\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handleNextTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-forward-circle\"\n                                    size={this.props.titleFontSize} \n                                    color=\"white\"\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n                        </TextBanner>\n                    </ViewContainer>\n            </ViewContainer>\n        )\n    }\n}","import { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner\";\n// import MusicBox from \"../MusicBox\"\nimport StaticMusicBox from \"../StaticMusicBox\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\nimport StyledMusicPlayer from \"../components/StyledMusicPlayer\";\n\nconst PLAYLIST = [\n    { name: 'Mario Coin', artist: \"Uhh\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Mario-coin-sound.mp3\"}},\n    { name: 'Linked Horizon', artist: \"Revo\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/LinkedHorizon.mp3\"}},\n    { name: 'Let Me Hear', artist: \"Fear and Loathing in Las Vegas\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/LetMeHear.mp3\"} },\n    { name: 'Heavenly Blue', artist: \"Hiroyuki Sawano\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/HeavenlyBlue.mp3\"}},\n    { name: 'The World', artist: \"Yutaka Yamada\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/TheWorld.mp3\"}},\n    { name: 'Sono Chi No Sadame', artist: \"Bluff\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/SonoChiNoSadame.mp3\"}},\n    { name: 'Unravel', artist: \"Toru Kitajima\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Unravel.mp3\"}},\n    { name: 'Magia', artist: \"Kalafina\", track: { uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/angryPuella.mp3\"}},\n    { name: 'Papermoon', artist: \"Tomoko Kawase\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Papermoon.mp3\"}},\n    { name: 'Clattanoia', artist: \"OxT\", track: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/Clattanoia.mp3\"}}\n];\n\n\n\n\n\nconst PLAY_PAUSE_STATE = {\n    PLAY: \"play\",\n    PAUSE: \"pausecircle\"\n}\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    \n    const copy = {...state};\n\n    if (copy[action.type] === OPACITY_STATE.PLAY) {\n        copy[action.type] = OPACITY_STATE.PAUSE;\n    }\n    else {\n        copy[action.type] = OPACITY_STATE.PLAY;\n    }\n    \n    return copy;\n}\n\nconst States = {\n    INITIAL: \"INITIAL\",\n    PLAYING: \"PLAYING\",\n    PAUSED: \"PAUSED\",\n    FINISHED: \"FINISHED\"\n}\n\n\nconst handleSkip = async (staticMusicBox, musicState, setMusicState,currentSongName, setCurrentSong, handleSongEnd=(n)=>{}) => {\n    switch(musicState) {\n        case States.INITIAL:\n            await handlePlayPause(staticMusicBox, musicState, setMusicState,currentSongName, setCurrentSong, handleSongEnd);\n            break;\n        case States.PLAYING: case States.PAUSED: case States.FINISHED:\n            var currentSongIndex = PLAYLIST.findIndex((v)=> v.name === currentSongName);\n            if (currentSongIndex === -1) {\n\n                console.warn(\"WARNING: did not find song\")\n                console.log(\"was looking for: \" + currentSongName)\n                console.log(\"from: \", PLAYLIST)\n                setMusicState(States.INITIAL);\n                break;\n            }\n\n            console.log((currentSongIndex+1)%PLAYLIST.length);\n            var newSongName = PLAYLIST[(currentSongIndex+1)%PLAYLIST.length].name;\n            setMusicState(States.INITIAL);\n            setMusicState(await staticMusicBox.skipToSong(States.INITIAL, currentSongName, newSongName,handleSongEnd));\n            break;\n\n    }\n}\n\n\nconst handlePlayPause = async (staticMusicBox, musicState, setMusicState,currentSongName, setCurrentSong, handleSongEnd=(n)=>{}) => {\n\n    switch(musicState) {\n        case States.INITIAL:\n            var newSongName = PLAYLIST[0].name\n            setCurrentSong(newSongName);\n            setMusicState(await staticMusicBox.playPause(musicState, currentSongName, newSongName,handleSongEnd));\n            break;\n        case States.PLAYING:\n            setMusicState(await staticMusicBox.playPause(musicState, currentSongName, currentSongName,handleSongEnd));\n            break;\n        case States.PAUSED:\n            setMusicState(await staticMusicBox.playPause(musicState, currentSongName, currentSongName,handleSongEnd));\n            break;\n        case States.FINISHED:\n            var currentSongIndex = PLAYLIST.findIndex((v)=> v.name === currentSongName);\n            if (currentSongIndex+1 >= PLAYLIST.length - 1) {\n                setMusicState(States.INITIAL);\n                break;\n            } \n            \n            var newSongName = PLAYLIST[currentSongIndex+1].name;\n            setCurrentSong(newSongName);\n            setMusicState(States.INITIAL);\n            setMusicState(await staticMusicBox.playPause(States.INITIAL, currentSongName, newSongName,handleSongEnd));\n            break;\n\n    }\n}\n\nconst PlaylistScreen = ({navigation}) => {\n\n\n    // console.log();\n    const [soundPlayer, setSoundPlayer] = React.useState(new Audio.Sound);\n\n    const initialOpacityState = PLAYLIST.map((element) => {var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict})\n\n\n\n    const [opacityState, opacityDispatch] = React.useReducer(songOpacityReducer, initialOpacityState)\n\n    const opacityCallback = (i) => {\n            opacityDispatch({type: PLAYLIST[i].name})\n        }\n\n    // const createState = (x) => {React.useState(x)};\n\n    // const musicBox = new MusicBox(soundPlayer, PLAYLIST, React.useState, opacityCallback, opacityCallback);\n    \n    const [musicState, setMusicState] = useState(States.INITIAL);\n    const [currentSong, setCurrentSong] = useState(\"\");\n\n    const staticMusicBox = new StaticMusicBox(soundPlayer, PLAYLIST);\n    const [playPauseState, setPlayPauseState] = useState(PLAY_PAUSE_STATE.PLAY);\n\n    const onFinishSong = (nameOfSong) => {\n        console.log(`Finished: ${nameOfSong}`);\n        setCurrentSong(\"\");\n        setMusicState(States.FINISHED);\n\n        handlePlayPause(staticMusicBox, States.FINISHED,setMusicState,nameOfSong,setCurrentSong,onFinishSong)\n    }\n\n    const playPauseButton = () => {\n        handlePlayPause(staticMusicBox, musicState,setMusicState,currentSong,setCurrentSong,onFinishSong)\n    }\n    const skipButton = () => {\n        handleSkip(staticMusicBox, musicState,setMusicState,currentSong,setCurrentSong,onFinishSong)\n    }\n\n    const songButton = (nameOfSong) => {\n        setMusicState(States.PLAYING);\n        handlePlayPause(staticMusicBox, States.PLAYING,setMusicState,nameOfSong,setCurrentSong,onFinishSong)\n    }\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    \n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * 1.0;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.SUBTITLE_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * 1.5;\n\n    const fontStyle = (fontSize, lineHeight, align, leftPad) => { \n        return StyleSheet.create(\n            {\n                style: {\n                    fontFamily: 'PressStart2P_400Regular',\n                    fontSize: fontSize,\n                    textAlign: \"left\",\n                    textAlignVertical: 'center',\n                    color: 'white',\n                    opacity: 1,\n                    lineHeight: lineHeight,\n                    paddingLeft: leftPad,\n                    alignSelf: align,\n                    alignContent: 'flex-start',\n                    alignItems: 'flex-start',\n                    \n                },\n            }\n        );\n    };\n\n    console.log(fontStyle(5,4))\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.BACKGROUND_IMAGE} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>   \n                    <StyledMusicPlayer\n                        navigation={navigation}\n                        themeName={navigation.getParam(\"themeName\")}\n                        playlist={PLAYLIST}\n                        opacityState={opacityState}\n                        fontStyle={fontStyle}\n                        subtitleFontSize={scaled_subtitleFontSize}\n                        subtitleLineHeight={scaled_subtitleLineHeight}\n                        titleFontSize={scaled_titleFontSize}\n                        titleLineHeight={scaled_titleLineHeight}\n                        playPauseState={playPauseState}\n                        bannerBorderWidth={scaledButtonBorderWidth}\n                    ></StyledMusicPlayer>\n            </StyledBackground>\n        </ViewContainer>\n    )\n\n}\n\n\n\nexport default PlaylistScreen; ","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\nclass FirstScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        console.log(this.props)\n    }\n    static navigationOptions = {\n      title: 'First',\n    }\n    componentDidMount(){\n        // console.log(this.props.props.navigation)\n      const {navigate} = this.props.props.navigation;\n      navigate('Home');\n    //   fetch('http://apiserver').then( (response) => {\n    //     navigate('Second');\n    //   });\n    }\n    render() {\n      return (\n        <AppLoading />\n      );\n    }\n  }\n\nconst RootScreen = (props) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n\n    return (\n        <View>\n            <FirstScreen props={props}></FirstScreen>\n        </View>\n    )\n}\n\nexport default RootScreen;\n","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\nconst HomeScreen = ({navigation}) => {\n    // navigation.navigate('Home')\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <StyledBackground \n                    image={AppConstants.BACKGROUND_IMAGE} \n                    height={scaledImageDim.height}\n                    width={scaledImageDim.width}>\n                    <ViewContainer apart nudge color='clear' height='84.5%' width='50%' top='.6%'>\n\n                        <ViewContainer color='clear' height='36%' width='100%'>\n                            <TextBanner\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_titleFontSize}\n                                lineHeight={scaled_titleLineHeight}\n                                height='78%'\n                                width='100%'\n                                bottomCorners\n                            >Choose Your Own Audioventure!</TextBanner>\n                            <TextBanner\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_subtitleFontSize}\n                                lineHeight={scaled_subtitleLineHeight}\n                                height='22%'\n                                width='100%'\n                                noTop\n                            >Click anywhere to start!</TextBanner>\n                        </ViewContainer>\n\n                        <TextBanner\n                            borderWidth={scaledButtonBorderWidth}\n                            fontSize={scaled_subtitleFontSize}\n                            lineHeight={scaled_subtitleLineHeight}\n                            // text=\"Credits\"\n                            height='9%'\n                            width='33%'\n                            touchable\n                        >Credits</TextBanner>\n\n                    </ViewContainer>\n                </StyledBackground>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBrowserApp } from '@react-navigation/web'\nimport {createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen'\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen'\nimport PlaylistScreen from './src/screens/PlaylistScreen'\nimport RootScreen from './src/screens/RootScreen'\n\nimport {Platform } from 'react-native'\n\nimport HomeScreen from './src/screens/HomeScreen'\n\nconst navigator = createStackNavigator(\n\n  {\n    Root: RootScreen,\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Playlist: PlaylistScreen\n  },\n  {\n    initialRouteName: 'Root',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\n\nexport default Platform.select({\n  web: config => createBrowserApp(config, {history: 'hash'}),\n  default: config => createAppContainer(config)\n})(navigator);\n\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}