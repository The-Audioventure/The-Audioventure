{"version":3,"sources":["src/components/ViewContainer.js","src/components/StyledBackground.js","src/utilities.js","src/components/TextBanner.js","src/AppConstants.js","src/screens/ChooseMoodOrPlaceScreen.js","src/components/CircleButton.js","src/components/IconButton.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/components/Banner.js","src/components/StyledMusicPlayer.js","src/screens/PlaylistScreen.js","src/screens/RootScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V3/index.js?f349"],"names":["ViewContainer","props","viewStyle","this","StyleSheet","create","style","justifyContent","backgroundColor","color","alignItems","height","width","nudge","compose","top","bottom","left","right","horizontal","flexDirection","apart","radius","borderRadius","round","onPress","children","View","React","Component","StyledBackground","state","fadeAnimation","Animated","Value","fadeIn","timing","toValue","duration","start","fadeOut","imageStyle","resizeMode","overflow","styles","fadingContainer","opacity","ImageBackground","source","image","onLoad","container","flex","paddingVertical","paddingHorizontal","fadingText","fontSize","textAlign","margin","buttonRow","marginVertical","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","TextBanner","propStyles","scroll","flexWrap","showsVerticalScrollIndicato","default","borderWidth","borderColor","justLeft","borderLeftWidth","noTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","noBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","bottomCorners","corners","justBorder","fontStyle","fontFamily","textAlignVertical","lineHeight","touchable","TouchableOpacity","Text","getUri","fileName","uri","AppConstants","HomeScreenImage","src","themeImage","Sad","Pumped","Cloudy","Romantic","Icy","Party","Beach","Weird","Home","Space","Happy","themes","icons","Back","name","Random","themePlaylists","artist","track","BACKGROUND_IMAGE_HEIGHT","BACKGROUND_IMAGE_WIDTH","BUTTON_BORDER_WIDTH","GOOGLE_DOCS_TEXT_CONVERSION_RATIO","TILE_FONT_SIZE","SUBTITLE_FONT_SIZE","CLICK_FONT_SIZE","LINE_SPACING","ChooseMoodOrPlace","navigation","useState","Dimensions","get","setWindow","window","addEventListener","useFonts","PressStart2P_400Regular","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","navigate","CircleButton","fillRectangle","iteration","starting","barHeight","fillRectangleHeight","roundedRadius","Math","ceil","y","size","sqrt","pow","verticalLocation","location","key","baseRectangleStyle","renderLines","Array","numberOfRectangles","map","_","index","fillRectangles","Fragment","circleDiameter","position","zIndex","elevation","localStyles","activeOpacity","button","alignContent","IconButton","centerHeight","displaceRadius","sin","angle","centerWidth","cos","iconSize","Image","ICONS","Lazy","THEMES","MatchMyMoodScreen","CENTER_SCREEN_HEIGHT","CENTER_SCREEN_WIDTH","ICONS_SCREEN_RADIUS","elem","indx","PI","themeName","TakeMeSomewhere","Banner","noBackground","noBorder","OPACITY_STATE","StyledMusicPlayer","isNexting","flatListRef","isPlaying","playbackInstance","currentIndex","volume","isBuffering","opacities","Object","assign","playlist","x","onPlayPause_dispatchSideEffects","newOpacities","action","copy","entries","type","payload","songOpacityReducer","scrollToIndex","animated","setState","onPlaybackStatusUpdate","status","didJustFinish","length","handlePlayPause","handleNextTrack","handleSongButton","songName","a","async","songIndex","findIndex","console","warn","unloadAsync","loadAudio","error","pauseAsync","playAsync","handlePreviousTrack","Audio","Sound","shouldPlay","setOnPlaybackStatusUpdate","loadAsync","log","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","shouldDuckAndroid","staysActiveInBackground","playThroughEarpieceAndroid","bannerBorderWidth","subtitleFontSize","subtitleLineHeight","ref","vertical","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","data","renderItem","item","ScrollView","nestedScrollEnabled","contentContainerStyle","titleFontSize","titleLineHeight","Ionicons","AntDesign","PlaylistScreen","IMAGE","PLAYLIST","THEME","getParam","Tinos_400Regular","HEIGHT","WIDTH","MAGIC_SCALING_FACTOR","scaled_subtitleFontSize","scaled_subtitleLineHeight","align","leftPad","alignSelf","FirstScreen","navigationOptions","title","RootScreen","HomeScreen","fontsLoaded","icon_uris","values","element","themeBackground_uris","beachSong_uris","useAssets","assets","navigator","createStackNavigator","Root","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhereScreen","Playlist","initialRouteName","headerMode","defaultNavigationOptions","cardStyle","Platform","select","web","config","createBrowserApp","history","createAppContainer","registerRootComponent","App"],"mappings":"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","file":"static/js/app.81196729.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS } from 'react-native';\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        backgroundColor: props.color,\n        alignItems: 'center',\n        height: props.height,\n        width: props.width\n    }\n\n});\n\nconst nudge = (props) => StyleSheet.create({\n    style: {\n        top: props.top,\n        bottom: props.bottom,\n        left: props.left,\n        right: props.right\n    }\n})\n\nconst horizontal = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'flex-start',\n        flexDirection: 'row'\n    }\n})\n\nconst apart = (props) => StyleSheet.create({\n    style: {\n        justifyContent: \"space-between\"\n    }\n})\n\nconst round = (props) => StyleSheet.create({\n    style: {\n        borderRadius: props.radius\n    }\n})\n\nexport default class ViewContainer extends React.Component {\n    render() {\n        var viewStyle = styles(this.props).style;\n            // console.log(this.props)\n            if (this.props.nudge){\n                // console.log('nudge!')\n                viewStyle = StyleSheet.compose(viewStyle, nudge(this.props).style);\n            }\n            if (this.props.horizontal) {\n                viewStyle = StyleSheet.compose(viewStyle, horizontal(this.props).style);\n            }\n            if (this.props.apart) {\n                viewStyle = StyleSheet.compose(viewStyle, apart(this.props).style);\n            }\n            if (this.props.radius) {\n                viewStyle = StyleSheet.compose(viewStyle, round(this.props).style);\n            }\n\n        if (this.props.onPress) {\n            return (<TouchableOpacity onPress={this.props.onPress} style={viewStyle}>{this.props.children}</TouchableOpacity>)\n        } else {\n            return (<View style={viewStyle}>{this.props.children}</View>)\n        }\n        \n    }\n};","import React from 'react';\nimport { Animated, View, Text, StyleSheet, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\n// import Animated from 'react-native-reanimated';\n\n\nconst imageStyles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: props.height,\n        width: props.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        overflow: 'hidden',\n         \n    }\n});\n\nexport default class StyledBackground extends React.Component {\n\n    state = {\n        fadeAnimation: new Animated.Value(0)\n    };\n    fadeIn = () => {\n        Animated.timing(this.state.fadeAnimation, {\n          toValue: 1,\n          duration: 500\n        }).start();\n    };\n\n    fadeOut = () => {\n        Animated.timing(this.state.fadeAnimation, {\n          toValue: 0,\n          duration: 500\n        }).start();\n    };\n\n    render() {\n        var imageStyle = imageStyles(this.props);\n        // console.log(this.props);\n\n        return (\n            <Animated.View\n                style={[\n                    styles.fadingContainer,\n                    {\n                    opacity: this.state.fadeAnimation\n                    }\n                ]}\n            >\n                <ImageBackground  resizeMode='contain' style={imageStyle.style} source={this.props.image} onLoad={this.fadeIn}>\n                    {this.props.children}\n                </ImageBackground>\n            </Animated.View>\n        )\n    }\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    fadingContainer: {\n      paddingVertical: 5,\n      paddingHorizontal: 25,\n      backgroundColor: \"black\"\n    },\n    fadingText: {\n      fontSize: 28,\n      textAlign: \"center\",\n      margin: 10,\n      color : \"#fff\"\n    },\n    buttonRow: {\n      flexDirection: \"row\",\n      marginVertical: 16\n    }\n  });","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        paddingHorizontal: '3%',\n        alignItems: 'center',\n\n        \n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    fontStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: props.fontSize,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: props.lineHeight\n    }\n});\n\nexport default class TextBanner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        // console.log(this.props);\n        if (this.props.justLeft) {\n            viewStyle = propStyles.justLeft;\n        } else if (this.props.noTop) {\n            viewStyle = propStyles.noTop;\n        } else if (this.props.noBottom) {\n            viewStyle = propStyles.noBottom;\n        } else if (this.props.bottomCorners) {\n            viewStyle = propStyles.bottomCorners;\n        } else if (this.props.justBorder) {\n            viewStyle = propStyles.justBorder;\n        } else if (this.props.corners) {\n            viewStyle = propStyles.corners;\n        } \n\n        // if (this.props.scroll) {\n        //     viewStyle = StyleSheet.compose(viewStyle, propStyles.scroll);   \n        //     return (\n        //         <ScrollView style={viewStyle}>\n        //             <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n        //         </ScrollView>\n        //     )\n        // }\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                </View>\n            )\n        }\n        \n    }\n};","const GOOGLE_DOCS_TEXT_CONVERSION_RATIO =  2.14285714;\n\nconst getUri = function(fileName) {\n    \n    return {uri: `https://yahtzeerage.github.io/CYOA-Assets/assets/${fileName}`}\n}\n\nconst AppConstants = {\n\n    // HomeScreenImage: {height: 2880, width: 5120, src: getUri(\"031_cover_noword.png\")},\n    HomeScreenImage: {height: 2880, width: 5120, src: {uri: \"https://raw.githubusercontent.com/YahtzeeRage/CYOA-Assets/master/assets/031_cover_noword.png?token=AIGD4GKSBNO4H24F2L7M2JDALJC2Y\"}},\n    // HomeScreenImage: {height: 2880, width: 5120, src: {uri: require('./assets/031_cover_noword.png')}},\n    themeImage: {\n        Sad: {height: 2880, width: 5120, src: getUri(\"028_sad1.png\")},\n        Pumped: {height: 2880, width: 5120, src: getUri(\"032_pumped.png\")},\n        Cloudy: {height: 2880, width: 5120, src: getUri(\"034_cloud.png\")},\n        Romantic: {height: 2880, width: 5120, src: getUri(\"036_romantic.png\")},\n        Icy: {height: 2880, width: 5120, src: getUri(\"038_snow.png\")},\n        Party: {height: 2880, width: 5120, src: getUri(\"039_party.png\")},\n        Beach: {height: 2880, width: 5120, src: getUri(\"042_beach.png\")},\n        Weird: {height: 2880, width: 5120, src: getUri(\"043_weirdagain.png\")},\n        Home: {height: 2880, width: 5120, src: getUri(\"044_home.png\")},\n        Space: {height: 2880, width: 5120, src: getUri(\"045_space.png\")},\n        Happy: {height: 2880, width: 5120, src: getUri(\"046_happy.png\")},\n    },\n\n    themes: {\n        Sad: \"Sad\",\n        Pumped: \"Pumped\",\n        Cloudy: \"Cloudy\",\n        Romantic: \"Romantic\",\n        Icy: \"Icy\",\n        Party: \"Party\",\n        Beach: \"Beach\",\n        Weird: \"Weird\",\n        Home: \"Home\",\n        Space: \"Space\",\n        Happy: \"Happy\"\n    },\n\n    icons: {\n        Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n        Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n        Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n        Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n        Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n        Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n        Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n        Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n    \n    },\n\n    themePlaylists: {\n        Beach: [\n            { name: 'Limonada Fria', artist: \"FutureYou\", track: getUri(\"FutureYou_Limonada%20Fria.wav\")},\n            { name: 'Verano En Playa Azul', artist: \"Michelle Lugo\", track: getUri(\"Michelle_VeranoEnPlayaAzul.wav\")},\n            { name: 'By the Bay', artist: \"Raydee99\", track: getUri(\"BytheBay.wav\")}\n        ]\n\n\n    },\n\n\n    BACKGROUND_IMAGE_HEIGHT: 867,\n    BACKGROUND_IMAGE_WIDTH: 1542,\n    BUTTON_BORDER_WIDTH: 7,\n    GOOGLE_DOCS_TEXT_CONVERSION_RATIO: GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    TILE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    SUBTITLE_FONT_SIZE: 21 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLICK_FONT_SIZE: 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    LINE_SPACING: 1.15\n};\n\nexport default AppConstants;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\nconst ChooseMoodOrPlace = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n    \n\n    return (\n        <ViewContainer color='white' height='100%' width='100%' horizontal >\n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('MatchMyMood')}}\n                style={{backgroundColor: 'rgb(238,238,238)', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Match My<br></br>Mood!]</TextBanner>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('TakeMeSomewhere')}}\n                style={{backgroundColor: '#8e7cc3c6', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Take Me<br></br>Somewhere!]</TextBanner>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n\n}\n\nexport default ChooseMoodOrPlace;\n","import React from 'react';\nimport {View, StyleSheet, TouchableOpacity } from 'react-native';\n\nexport default class CircleButton extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.numberOfRectangles = 15\n    this.radius = this.props.circleDiameter / 2\n\n    // base the height of each bars on the circle radius.\n    // Add 1 to the value b/c we will subtract one down below to get rid of the zero index\n    this.fillRectangleHeight = this.radius / (this.numberOfRectangles + 1)\n\n    // The style used for the rectangles\n    // the zIndex and elevation of 10 puts the rectangles in front of the clickable button\n    this.baseRectangleStyle = {\n      position: 'absolute',\n      zIndex: 10,\n      elevation: 10,\n    }\n  }\n\n  fillRectangle = (iteration, starting) => {\n    const barHeight = this.fillRectangleHeight\n    const roundedRadius = Math.ceil(this.radius)\n    const y = (barHeight * iteration)\n\n    const x = Math.ceil(Math.sqrt(Math.pow(this.radius, 2) - Math.pow(y, 2)))\n\n    let width = roundedRadius - x\n\n    // The bar dimensions\n    const size = {\n      width: width,\n      height: barHeight\n    };\n\n    const verticalLocation = y + roundedRadius\n\n    let location = {}\n    if(starting === 'topLeft'){\n      location = {\n        left: 0,\n        bottom: verticalLocation,\n      };\n    }else if(starting === 'bottomLeft'){\n      location = {\n        left: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'topRight'){\n      location = {\n        right: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'bottomRight'){\n      location = {\n        right: 0,\n        bottom: verticalLocation,\n      }\n    };\n\n    // Create a unique key to identify the element\n    let key = \"\" + iteration + starting\n\n    return(\n      <View key={key} style={{...this.baseRectangleStyle, ...size, ...location}}></View>\n    )\n  };\n\n  renderLines = (starting) => {\n    //start with index+1 b/c 0 will be a width of zero, so no point in doing that math\n    return [...Array(this.numberOfRectangles)].map((_, index) => this.fillRectangle(index+1, starting))\n  }\n\n  fillRectangles = () => {\n    return(\n      <React.Fragment>\n        {this.renderLines('topLeft')}\n        {this.renderLines('bottomLeft')}\n        {this.renderLines('topRight')}\n        {this.renderLines('bottomRight')}\n      </React.Fragment>\n     )\n   };\n\n  render(){\n    let localStyles = styles(this.props)\n\n    return (\n      <View style={localStyles.container}>\n        <TouchableOpacity\n          activeOpacity={.2}\n          style = {localStyles.button}\n          onPress = {this.props.onPress}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n\n        {this.fillRectangles()}\n      </View>\n    )\n  }\n}\n\nconst styles = (props) => StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 0,\n  },\n  button: {\n    backgroundColor: 'clear',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderRadius: (props.circleDiameter / 2),\n    width: props.circleDiameter,\n    height: props.circleDiameter,\n\n    top: props.top,\n    bottom: props.bottom,\n    right: props.right,\n    left: props.left\n  },\n});","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\n\n\nexport default class IconButton extends React.Component {\n    render() {\n        return (\n            <View \n                style={{bottom: this.props.centerHeight + this.props.displaceRadius * Math.sin(this.props.angle), \n                        left: this.props.centerWidth + this.props.displaceRadius * Math.cos(this.props.angle), \n                        position: 'absolute'}}>\n                <CircleButton  \n                        circleDiameter={this.props.iconSize} \n                        onPress={this.props.onPress}\n                        >\n                        <Image \n                            style={{ height: this.props.iconSize, width: this.props.iconSize, borderRadius: 100 }} \n                            source={this.props.image}>\n                        </Image>\n                    </CircleButton>\n            </View>\n        )\n    }\n}","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Pumped: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/pumped.png\", name: \"Pumped\"},\n    Lazy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/lazy.png\", name: \"Lazy\"},\n    Happy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/happy.png\", name: \"Happy\"},\n    Weird: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/weird.png\", name: \"Weird\"},\n    Sad: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/sad.png\", name: \"Sad\"},\n    Romantic: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/romance.png\", name: \"Romantic\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Pumped\",\n    \"Lazy\",\n    \"Happy\",\n    \"Weird\",\n    \"Sad\",\n    \"Romantic\",\n    \"Random\"\n]\n\n\n\nconst MatchMyMoodScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    \n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.HomeScreenImage.src.uri} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default MatchMyMoodScreen;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\nimport { StackActions }from '@react-navigation/web'\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n    Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n    Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n    Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n    Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n    Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Home\",\n    \"Cloudy\",\n    \"Beach\",\n    \"Party\",\n    \"Icy\",\n    \"Space\",\n    \"Random\"\n]\n\n\n\nconst TakeMeSomewhere = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.HomeScreenImage.src.uri} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default TakeMeSomewhere;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        // justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        // paddingHorizontal: '3%',\n        // alignItems: 'center',\n        // alignContent: 'center',\n\n        // justifyContent: 'center',\n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n});\n\nexport default class Banner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        if (this.props.justLeft) {\n            viewStyle = propStyles.justLeft;\n        // } else if (this.props.noTop) {\n        //     viewStyle = propStyles.noTop;\n        // } else if (this.props.noBottom) {\n        //     viewStyle = propStyles.noBottom;\n        } else if (this.props.bottomCorners) {\n            viewStyle = propStyles.bottomCorners;\n        } else if (this.props.justBorder) {\n            viewStyle = propStyles.justBorder;\n        // } else if (this.props.corners) {\n        //     viewStyle = propStyles.corners;\n        // } \n        }\n        if (this.props.noBackground) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {backgroundColor: 'clear'}}.style))\n        }\n        if (this.props.borderColor) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderColor: this.props.borderColor}}.style))\n        }\n        if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderTopWidth: 0}}.style))\n        }\n        if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderBottomWidth: 0}}.style))\n        }\n        if (this.props.noBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderWidth: 0}}.style))\n        }\n        if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderRadius:0}}.style))\n        }\n        // if (this.props.scroll) {\n        //     viewStyle = StyleSheet.compose(viewStyle, propStyles.scroll);   \n        //     return (\n        //         <ScrollView style={viewStyle}>\n        //             <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n        //         </ScrollView>\n        //     )\n        // }\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        {this.props.children}\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    {this.props.children}\n                </View>\n            )\n        }\n        \n    }\n};","\nimport { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner\";\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\n\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    const copy = Object.entries(state).map(([key, value]) => ({[key]:OPACITY_STATE.PAUSE}));\n\n    copy[action.type] = action.payload  \n    return copy;\n}\n\n\nexport default class StyledMusicPlayer extends React.Component {\n\n    state = {\n        isNexting: false,\n        flatListRef: null,\n        isPlaying: false,\n        playbackInstance: null,\n        currentIndex: 0,\n        volume: 1.0,\n        isBuffering: false,\n        opacities: Object.assign({}, ...this.props.playlist.map((x)=>({[x.name]:OPACITY_STATE.PAUSE})))\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    onPlayPause_dispatchSideEffects = (isPlaying) => {\n        const { opacities } = this.state\n        const songName = this.props.playlist[this.state.currentIndex].name;\n        const opacityLevel = isPlaying? OPACITY_STATE.PLAY : OPACITY_STATE.PAUSE;\n        const newOpacities = songOpacityReducer(opacities, {type: songName, payload: opacityLevel});\n        this.state.flatListRef.scrollToIndex({animated: true, index: this.state.currentIndex});\n        this.setState({opacities: newOpacities});   \n    }\n\n    async loadAudio() {\n        const {currentIndex, isPlaying, volume} = this.state\n      \n        try {\n          const playbackInstance = new Audio.Sound()\n          const source = {\n            uri: this.props.playlist[currentIndex].track.uri\n          }\n      \n          const status = {\n            shouldPlay: isPlaying,\n            volume\n          }\n      \n          playbackInstance.setOnPlaybackStatusUpdate(this.onPlaybackStatusUpdate)     \n          await playbackInstance.loadAsync(source, status, false)\n          this.setState({playbackInstance})\n\n          } catch (e) {\n            console.log(e)\n          }\n    }\n\n    onPlaybackStatusUpdate = status => {\n        \n        this.setState({\n          isBuffering: status.isBuffering\n        })\n\n        if (status.didJustFinish) {\n            const {currentIndex} = this.state;\n            if (currentIndex === this.props.playlist.length - 1) {\n                this.handlePlayPause();\n                return;\n            }\n            this.handleNextTrack();\n        }\n    }\n\n    handleSongButton = async (songName) => {\n\n        const {currentIndex} = this.state;\n        if (songName === this.props.playlist[this.state.currentIndex]) {\n            await this.handlePlayPause();\n        } else if (currentIndex === this.props.playlist.length - 1) {\n            songName = this.props.playlist[0].name;\n        }\n        else {\n            var songIndex = this.props.playlist.findIndex((x)=>x.name===songName);\n            if (songIndex===-1){\n                console.warn(\"ERROR: SONG NOT FOUND: 103\");\n            }\n            try {\n                if(songIndex === -1) {songIndex = 0}\n                let { playbackInstance } = this.state\n                if (playbackInstance) {\n                await playbackInstance.unloadAsync()\n\n                this.setState({\n                    currentIndex: songIndex\n                })\n                this.setState({\n                    isPlaying: true\n                })\n                this.loadAudio()\n                }\n                this.onPlayPause_dispatchSideEffects(true);\n            }\n            catch (err) {\n                console.error(err);\n            }\n            \n        }\n    }\n\n    handlePlayPause = async () => {\n        const { isPlaying, playbackInstance } = this.state\n        isPlaying ? await playbackInstance.pauseAsync() : await playbackInstance.playAsync()\n    \n        this.onPlayPause_dispatchSideEffects(!isPlaying);\n\n        this.setState({\n          isPlaying: !isPlaying\n        })\n      }\n    \n    handlePreviousTrack = async () => {\n        let { playbackInstance, currentIndex, isPlaying } = this.state\n\n        if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (currentIndex === 0) {\n            return;\n        } else if (playbackInstance) {\n          await playbackInstance.unloadAsync()\n          currentIndex > 0 ? (currentIndex -= 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n          \n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n      }\n    \n\n    handleNextTrack = async () => {\n        \n        let { playbackInstance, currentIndex, isPlaying} = this.state\n\n        if (this.state.isNexting) {\n            return;\n        }\n        else if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (playbackInstance) {\n            this.state.isNexting = true;\n          await playbackInstance.unloadAsync()\n          currentIndex < this.props.playlist.length - 1 ? (currentIndex += 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n\n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n        this.state.isNexting = false;\n    }\n\n    async componentDidMount() {\n\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {this.state.playbackInstance.unloadAsync(); console.log(\"a\")});\n        // const initialOpacityState = this.props.playlist.map((element) => {\n        //     var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict\n        // });\n\n        try {\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n                shouldDuckAndroid: true,\n                staysActiveInBackground: false,\n                playThroughEarpieceAndroid: true\n            });\n            this.loadAudio();\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n    async componentWillUnmount() {\n        this.state.playbackInstance.unloadAsync();\n    }\n\n\n\n    render() {\n        return (\n            <ViewContainer color='clear' height='54.5454545%' width='50%' top='.6%' nudge>\n                <ViewContainer height='20%' width='50%'>\n                        <TextBanner \n                            noBottom \n                            height='100%' \n                            width='100%' \n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.subtitleFontSize}\n                            lineHeight={this.props.subtitleLineHeight}\n                        >{this.props.themeName}</TextBanner>\n                    </ViewContainer>\n                <Banner \n                        height='65%' \n                        width='100%'\n                        borderWidth={this.props.bannerBorderWidth}\n                        corners\n                        // noBackground\n                    >\n                        <FlatList\n                            ref={(ref) => {this.state.flatListRef = ref}}\n                            vertical\n                            showsHorizontalScrollIndicator={false}\n                            showsVerticalScrollIndicator={false}\n                            keyExtractor={(track) => track.name}\n                            data={this.props.playlist}\n                            renderItem={({item}) => {\n                                return (\n                                    <Banner \n                                        height='100%' \n                                        width='100%' \n                                        corners\n                                        noBorder\n                                        noBackground>\n                                            \n                                    <TouchableOpacity \n                                        onPress={() => {\n                                            this.handleSongButton(item.name)}}>\n                                        <View style={{opacity: this.state.opacities[item.name]}}>\n                                            <ScrollView  \n                                                style={{flexDirection: 'row'}}\n                                                horizontal\n                                                showsHorizontalScrollIndicator={false}\n                                                nestedScrollEnabled \n                                                contentContainerStyle={{backgroundColor: 'clear'}}\n                                                \n                                                \n                                            >   \n                                                <View><Text style={this.props.fontStyle(this.props.subtitleFontSize, this.props.subtitleLineHeight, 'flex-start', this.props.subtitleFontSize/2, \"Tinos_400Regular\").style}\n                                                >{item.name} / {item.artist}</Text></View>\n                                               \n                                            </ScrollView>\n                                            <ScrollView>\n                                                <View><Text style={this.props.fontStyle(this.props.titleFontSize, this.props.titleLineHeight, 'center', 0, \"PressStart2P_400Regular\").style}\n                                                >--------------</Text></View>                                            \n                                            </ScrollView>\n                                            \n                                        </View>\n                                    </TouchableOpacity></Banner>\n                                )\n                            }}\n                        >\n                            \n                        </FlatList>\n                    </Banner >\n                    <ViewContainer color='clear' height='15%' width='100%'>\n                        <TextBanner \n                            noTop\n                            height='100%'\n                            width='100%'\n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.subtitleFontSize}\n                            lineHeight={this.props.subtitleLineHeight}\n                        >\n\n                            <TouchableOpacity\n                                onPress={this.handlePreviousTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-back-circle\"\n                                    size={this.props.titleFontSize} \n                                    color=\"white\"\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handlePlayPause}\n                            >\n                                {this.state.isPlaying ? (\n                                    <AntDesign name='pausecircle' size={this.props.titleFontSize} color=\"white\" />\n                                    ) : (\n                                    <AntDesign name='play' size={this.props.titleFontSize} color=\"white\" />\n                                )}\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handleNextTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-forward-circle\"\n                                    size={this.props.titleFontSize} \n                                    color=\"white\"\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n                        </TextBanner>\n                    </ViewContainer>\n            </ViewContainer>\n        )\n    }\n}","import { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\n\nimport AppConstants from \"../AppConstants\"\n\nimport StyledMusicPlayer from \"../components/StyledMusicPlayer\";\n\nconst PlaylistScreen = ({navigation}) => {\n\n    const THEME = navigation.getParam(\"themeName\");\n    let IMAGE;\n    let PLAYLIST;\n    console.log(AppConstants.themePlaylists);\n    switch(THEME) {\n        case AppConstants.themes.Beach:\n            IMAGE = AppConstants.themeImage[THEME];\n            PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Cloudy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Happy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Party:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Pumped:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Romantic:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Sad:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Icy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Space:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Weird:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        default:\n            console.warn(\"No Theme Found For Image\")\n            break;\n    }\n    PLAYLIST = AppConstants.themePlaylists[\"Beach\"];\n    \n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * 1.0;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.SUBTITLE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * 1.5;\n\n    const fontStyle = (fontSize, lineHeight, align, leftPad, fontStyle) => { \n        return StyleSheet.create(\n            {\n                style: {\n                    fontFamily: fontStyle,\n                    fontSize: fontSize,\n                    textAlign: \"center\",\n                    textAlignVertical: 'center',\n                    color: 'white',\n                    opacity: 1,\n                    lineHeight: lineHeight,\n                    alignSelf: align,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    \n                },\n            }\n        );\n    };\n\n    console.log(fontStyle(5,4))\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={IMAGE.src} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>   \n                    <StyledMusicPlayer\n                        navigation={navigation}\n                        themeName={navigation.getParam(\"themeName\")}\n                        playlist={PLAYLIST}\n                        fontStyle={fontStyle}\n                        subtitleFontSize={scaled_subtitleFontSize}\n                        subtitleLineHeight={scaled_subtitleLineHeight}\n                        titleFontSize={scaled_titleFontSize}\n                        titleLineHeight={scaled_titleLineHeight}\n                        bannerBorderWidth={scaledButtonBorderWidth}\n                    ></StyledMusicPlayer>\n            </StyledBackground>\n        </ViewContainer>\n    )\n\n}\n\n\n\nexport default PlaylistScreen; ","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\n\nclass FirstScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        console.log(this.props)\n    }\n    static navigationOptions = {\n      title: 'First',\n    }\n    componentDidMount(){\n    }\n    render() {\n      const {navigate} = this.props.props.navigation;\n      navigate('Home');\n\n      return (\n        <AppLoading />\n      );\n      \n    }\n  }\n\nconst RootScreen = (props) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n\n    return (\n        <View>\n            <FirstScreen props={props}></FirstScreen>\n        </View>\n    )\n}\n\nexport default RootScreen;\n","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useEffect, useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { Asset, useAssets } from 'expo-asset'\n\nconst HomeScreen = ({navigation}) => {\n    // navigation.navigate('Home')\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n\n    const icon_uris = Object.values(AppConstants.icons).map((element)=>element.uri)\n    const themeBackground_uris = Object.values(AppConstants.themeImage).map((element)=>element.src.uri);\n    const beachSong_uris = AppConstants.themePlaylists.Beach.map((element)=>element.track.uri);\n    // console.log(Object.keys(AppConstants.icons));\n    const [assets] = useAssets([\n        \n        // AppConstants.HomeScreenImage.src.uri,\n        AppConstants.themeImage.Beach.src.uri,\n        ...icon_uris,\n        ...beachSong_uris,\n        ...themeBackground_uris\n      ]);\n    if (!fontsLoaded && !assets) {\n        return <ViewContainer color='black' height='100%' width='100%' >\n            {/* <Image\n                source={require('../assets/loading.gif')}\n                style={{flex:1, aspectRatio: 2,height:'100%', width:'100%'}}\n                resizeMode='contain'\n            ></Image> */}\n        </ViewContainer>\n    }\n\n    \n\n\n      \n\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = AppConstants.BUTTON_BORDER_WIDTH * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = AppConstants.TILE_FONT_SIZE * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <StyledBackground \n                    image={AppConstants.HomeScreenImage.src.uri} \n                    height={scaledImageDim.height}\n                    width={scaledImageDim.width}>\n                    <ViewContainer apart nudge color='clear' height='84.5%' width='50%' top='.6%'>\n\n                        <ViewContainer color='clear' height='36%' width='100%'>\n                            <TextBanner\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_titleFontSize}\n                                lineHeight={scaled_titleLineHeight}\n                                height='78%'\n                                width='100%'\n                                bottomCorners\n                            >Choose Your Own Audioventure!</TextBanner>\n                            <TextBanner\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_subtitleFontSize}\n                                lineHeight={scaled_subtitleLineHeight}\n                                height='22%'\n                                width='100%'\n                                noTop\n                            >Click anywhere to start!</TextBanner>\n                        </ViewContainer>\n\n                        <TextBanner\n                            borderWidth={scaledButtonBorderWidth}\n                            fontSize={scaled_subtitleFontSize}\n                            lineHeight={scaled_subtitleLineHeight}\n                            // text=\"Credits\"\n                            height='9%'\n                            width='33%'\n                            touchable\n                        >Credits</TextBanner>\n\n                    </ViewContainer>\n                </StyledBackground>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBrowserApp } from '@react-navigation/web'\nimport {createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen'\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen'\nimport PlaylistScreen from './src/screens/PlaylistScreen'\nimport RootScreen from './src/screens/RootScreen'\n\nimport {Platform } from 'react-native'\n\nimport HomeScreen from './src/screens/HomeScreen'\n\nconst navigator = createStackNavigator(\n\n  {\n    Root: RootScreen,\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Playlist: PlaylistScreen\n  },\n  {\n    initialRouteName: 'Root',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\n\nexport default Platform.select({\n  web: config => createBrowserApp(config, {history: 'hash'}),\n  default: config => createAppContainer(config)\n})(navigator);\n\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}