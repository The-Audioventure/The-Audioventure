{"version":3,"sources":["src/screens/FirstChoiceScreen.tsx","src/styles/styles.tsx","src/screens/HomeScreen.tsx","src/screens/MatchMyMoodScreen.tsx","src/screens/TakeMeSomewhereScreen.tsx","App.tsx","webpack:////home/yhussain/Native_apps/Choose-Your-Own-Audioventure/index.js?cf9f","assets/backgroundBanner.gif"],"names":["stylefactory","backgroundHeight","backgroundWidth","buttonBorderWidth","FONT_SIZE","LINE_HEIGHT","StyleSheet","create","viewStyle","justifyContent","backgroundColor","alignItems","imageStyle","height","width","resizeMode","flexDirection","overflow","left_buttonStyle","borderWidth","borderColor","borderRadius","marginRight","right_buttonStyle","marginLeft","textStyle","fontFamily","fontSize","textAlign","color","opacity","lineHeight","FirstChoiceScreen","navigation","useState","Dimensions","get","windowDim","setWindow","window","addEventListener","RATIO","useFonts","PressStart2P_400Regular","styles","View","style","ImageBackground","source","require","TouchableOpacity","onPress","navigate","Text","buttonStyle","HomeScreen","contentViewStyle","top","titleViewStyle","flex","titleBanner","title_textStyle","optionsViewStyle","apart_optionLineViewStyle","even_optionLineViewStyle","option_buttonStyle","option_textStyle","parentViewStyle","MatchMyMoodScreen","props","Linking","openURL","value","displayType","prefix","TakeMeSomewhereScreen","navigator","createStackNavigator","Home","FirstChoice","MatchMyMood","TakeMeSomewhere","initialRouteName","headerMode","defaultNavigationOptions","title","cardStyle","createAppContainer","container","registerRootComponent","App","module","exports"],"mappings":"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","file":"static/js/app.bf5066da.chunk.js","sourcesContent":["\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport Navigation from 'react-navigation'\n// import stylefactory from '../styles/styles'\n\nconst FirstChoiceScreen = ({navigation}:any) => {\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 54*RATIO;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 54*RATIO;\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 54*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.viewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n\n            <TouchableOpacity \n                style={styles.left_buttonStyle}\n                onPress={() => {navigation.navigate('MatchMyMood')}}>\n                <Text style={styles.textStyle} >[Match My Mood!]</Text>                \n            </TouchableOpacity>\n            <TouchableOpacity \n                style={styles.right_buttonStyle}\n                onPress={() => {navigation.navigate('TakeMeSomewhere')}}>\n                <Text style={styles.textStyle} >[Take Me Somewhere!]</Text>                \n            </TouchableOpacity>\n\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight:number, backgroundWidth:number, buttonBorderWidth:number, FONT_SIZE:number, LINE_HEIGHT:number) => StyleSheet.create({\n\n    viewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    },\n    left_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '42%',\n        height: '17%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        marginRight: '1%'\n    },\n    right_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '42%',\n        height: '17%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        marginLeft: '1%'\n\n    },\n    textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    }\n})\n\n\nexport default FirstChoiceScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\n\n\n\n\nconst stylefactory = (backgroundHeight:number, backgroundWidth:number, buttonBorderWidth:number, FONT_SIZE:number, LINE_HEIGHT:number) => StyleSheet.create({\n\n    viewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden'\n    },\n    buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '50%',\n        height: '25%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    }\n})\n\nexport default stylefactory;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport stylefactory from '../styles/styles'\n\nconst HomeScreen = ({navigation}:any) => {\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 54*RATIO;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 54*RATIO;\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 54*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.viewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n\n            <TouchableOpacity \n                style={styles.buttonStyle}\n                onPress={() => {navigation.navigate('FirstChoice')}}>\n                <Text style={styles.textStyle} >Choose Your Own Audioventure!</Text>                \n            </TouchableOpacity>\n\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n  \n\n\nexport default HomeScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport NumberFormat from 'react-number-format'\n// import stylefactory from '../styles/styles'\n\nconst MatchMyMoodScreen = (props:React.Component) => {\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Match My<br></br>Mood!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Angry</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Pumped<br></br>Up!</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Lazy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Happy!</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Weird~</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >A Little<br></br>Sad...</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Romantic<br></br><NumberFormat value={3} displayType={'text'} prefix={'<'}></NumberFormat></Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight:number, backgroundWidth:number, buttonBorderWidth:number, FONT_SIZE:number, LINE_HEIGHT:number) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (3.9/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .295*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default MatchMyMoodScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport NumberFormat from 'react-number-format'\n// import stylefactory from '../styles/styles'\n\nconst TakeMeSomewhereScreen = (props:React.Component) => {\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Take Me<br></br>Somewhere!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >To the<br></br>Beach</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Through<br></br>the Clouds</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Somewhere<br></br>Icy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Home</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >To A<br></br>Party!</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >The<br></br>Jungle</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => {Linking.openURL(\"https://youtu.be/VxiNrALDQhk\")}}>\n                            <Text style={styles.option_textStyle} >Into a<br></br>Volcano</Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight:number, backgroundWidth:number, buttonBorderWidth:number, FONT_SIZE:number, LINE_HEIGHT:number) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (4.25/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .298*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default TakeMeSomewhereScreen;\n\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation'\nimport {createStackNavigator} from 'react-navigation-stack'\nimport FirstChoiceScreen from './src/screens/FirstChoiceScreen';\n\nimport HomeScreen from './src/screens/HomeScreen'\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen';\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen';\n\n\n\nconst navigator = createStackNavigator(\n\n  {\n    Home: HomeScreen,\n    FirstChoice: FirstChoiceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n  },\n  {\n    initialRouteName: 'Home',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\nexport default createAppContainer(navigator);\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","module.exports = __webpack_public_path__ + \"static/media/backgroundBanner.e17a0abf.gif\";"],"sourceRoot":""}