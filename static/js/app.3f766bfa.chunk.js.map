{"version":3,"sources":["src/components/ViewContainer.js","src/AppConstants.js","src/components/StyledBackground.js","src/utilities.js","src/components/TextBanner.js","src/screens/ChooseMoodOrPlaceScreen.js","src/components/CircleButton.js","src/components/IconButton.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/components/Banner2.js","src/components/StyledMusicPlayer.js","src/screens/PlaylistScreen.js","src/screens/RootScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V3/index.js?f349"],"names":["ViewContainer","props","viewStyle","this","StyleSheet","create","style","justifyContent","backgroundColor","color","alignItems","height","width","nudge","compose","top","bottom","left","right","horizontal","flexDirection","apart","radius","borderRadius","round","onPress","children","View","React","Component","getUri","fileName","uri","getUrl","createColorTheme","textColor","borderColor","text","border","background","AppConstants","HomeScreenImage","src","themeImage","Sad","Pumped","Cloudy","Romantic","Icy","Party","Beach","Weird","Home","Space","Happy","Lazy","themeColors","themeTitleNames","themeTitleBoxSize","moodThemes","placeThemes","themes","icons","Back","name","Random","themePlaylists","artist","track","BACKGROUND_IMAGE_HEIGHT","BACKGROUND_IMAGE_WIDTH","BUTTON_BORDER_WIDTH","GOOGLE_DOCS_TEXT_CONVERSION_RATIO","TILE_FONT_SIZE","SUBTITLE_FONT_SIZE","CLOUDS_TITLE_FONT_SIZE","CLICK_FONT_SIZE","ENTRY_FONT_SIZE","LINE_SPACING","StyledBackground","state","fadeAnimation","Animated","Value","cycleIndex","fadeIn","timing","toValue","duration","start","finished","cycling","fadeOut","Math","floor","cycleOffset","random","delay","cycleTheme","themes_array","Object","keys","console","error","rand_index","length","THEME","log","setBackground","setState","imageStyle","resizeMode","overflow","styles","fadingContainer","opacity","ImageBackground","source","image","onLoad","container","flex","paddingVertical","paddingHorizontal","fadingText","fontSize","textAlign","margin","buttonRow","marginVertical","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","TextBanner","propStyles","scroll","flexWrap","showsVerticalScrollIndicato","default","borderWidth","justLeft","borderLeftWidth","noTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","noBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","bottomCorners","corners","justBorder","fontStyle","fontFamily","textAlignVertical","fontColor","lineHeight","touchable","TouchableOpacity","Text","ChooseMoodOrPlace","navigation","useState","Dimensions","get","setWindow","window","addEventListener","placeThemes_array","moodThemes_array","place_rand_index","mood_rand_index","moodBackground","setMoodBackground","placeBackground","setPlaceBackground","useFonts","PressStart2P_400Regular","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","navigate","CircleButton","fillRectangle","iteration","starting","barHeight","fillRectangleHeight","roundedRadius","ceil","y","size","sqrt","pow","verticalLocation","location","key","baseRectangleStyle","renderLines","Array","numberOfRectangles","map","_","index","fillRectangles","Fragment","circleDiameter","position","zIndex","elevation","localStyles","activeOpacity","button","alignContent","IconButton","centerHeight","displaceRadius","sin","angle","centerWidth","cos","iconSize","Image","ICONS","THEMES","MatchMyMoodScreen","fontsLoaded","icon_uris","values","element","useAssets","assets","CENTER_SCREEN_HEIGHT","CENTER_SCREEN_WIDTH","ICONS_SCREEN_RADIUS","elem","indx","PI","themeName","themeType","TakeMeSomewhere","Banner2","noBackground","noBorder","OPACITY_STATE","StyledMusicPlayer","isNexting","flatListRef","isPlaying","playbackInstance","currentIndex","volume","isBuffering","opacities","assign","playlist","x","onPlayPause_dispatchSideEffects","newOpacities","action","copy","entries","type","payload","songOpacityReducer","scrollToIndex","animated","onPlaybackStatusUpdate","status","didJustFinish","handlePlayPause","handleNextTrack","handleSongButton","songName","a","async","songIndex","findIndex","warn","unloadAsync","loadAudio","pauseAsync","playAsync","handlePreviousTrack","Audio","Sound","shouldPlay","setOnPlaybackStatusUpdate","loadAsync","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","shouldDuckAndroid","staysActiveInBackground","playThroughEarpieceAndroid","bannerBorderWidth","cloudTitleFontSize","subtitleFontSize","cloudLineHeight","subtitleLineHeight","themeTitle","ref","vertical","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","data","renderItem","item","ScrollView","nestedScrollEnabled","contentContainerStyle","titleFontSize","titleLineHeight","entryFontSize","entryLineHeight","Ionicons","AntDesign","PlaylistScreen","THEME_PARAM","getParam","IMAGE","PLAYLIST","THEME_NAME","Tinos_400Regular","HEIGHT","WIDTH","MAGIC_SCALING_FACTOR","scaled_subtitleFontSize","scaled_subtitleLineHeight","scaled_entryFontSize","scaled_entryLineHeight","scaled_cloudTitleLineHeight","align","leftPad","alignSelf","FirstScreen","navigationOptions","title","RootScreen","HomeScreen","themeBackground_uris","beachSong_uris","navigator","createStackNavigator","Root","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhereScreen","Playlist","initialRouteName","headerMode","defaultNavigationOptions","cardStyle","cardStyleInterpolator","CardStyleInterpolators","forNoAnimation","Platform","select","web","config","createBrowserApp","history","createAppContainer","registerRootComponent","App"],"mappings":"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","file":"static/js/app.3f766bfa.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS } from 'react-native';\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        backgroundColor: props.color,\n        alignItems: 'center',\n        height: props.height,\n        width: props.width\n    }\n\n});\n\nconst nudge = (props) => StyleSheet.create({\n    style: {\n        top: props.top,\n        bottom: props.bottom,\n        left: props.left,\n        right: props.right\n    }\n})\n\nconst horizontal = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'flex-start',\n        flexDirection: 'row'\n    }\n})\n\nconst apart = (props) => StyleSheet.create({\n    style: {\n        justifyContent: \"space-between\"\n    }\n})\n\nconst round = (props) => StyleSheet.create({\n    style: {\n        borderRadius: props.radius\n    }\n})\n\nexport default class ViewContainer extends React.Component {\n    render() {\n        var viewStyle = styles(this.props).style;\n            // console.log(this.props)\n            if (this.props.nudge){\n                // console.log('nudge!')\n                viewStyle = StyleSheet.compose(viewStyle, nudge(this.props).style);\n            }\n            if (this.props.horizontal) {\n                viewStyle = StyleSheet.compose(viewStyle, horizontal(this.props).style);\n            }\n            if (this.props.apart) {\n                viewStyle = StyleSheet.compose(viewStyle, apart(this.props).style);\n            }\n            if (this.props.radius) {\n                viewStyle = StyleSheet.compose(viewStyle, round(this.props).style);\n            }\n\n        if (this.props.onPress) {\n            return (<TouchableOpacity onPress={this.props.onPress} style={viewStyle}>{this.props.children}</TouchableOpacity>)\n        } else {\n            return (<View style={viewStyle}>{this.props.children}</View>)\n        }\n        \n    }\n};","const GOOGLE_DOCS_TEXT_CONVERSION_RATIO =  2;\n\nconst getUri = function(fileName) {\n    \n    return {uri: `https://yahtzeerage.github.io/CYOA-Assets/assets/${fileName}`}\n}\nconst getUrl = function(fileName) {\n    \n    return `https://yahtzeerage.github.io/CYOA-Assets/assets/${fileName}`\n}\n\n\nconst getRawUri = function(fileName) {\n    return {uri: `https://raw.githubusercontent.com/YahtzeeRage/CYOA-Assets/master/assets/${fileName}?token=AIGD4GLECBA4H6NRZGA2ZB3AL2CYQ`}\n}\n\nconst getRawurl = function(fileName) {\n    return `https://raw.githubusercontent.com/YahtzeeRage/CYOA-Assets/master/assets/${fileName}?token=AIGD4GLECBA4H6NRZGA2ZB3AL2CYQ`\n}\n\nconst createColorTheme = function(textColor, borderColor, backgroundColor) {\n    return {text: textColor, border: borderColor, background: backgroundColor};\n}\n\nconst AppConstants = {\n\n    // HomeScreenImage: {height: 2880, width: 5120, src: getUri(\"031_cover_noword.png\")},\n    HomeScreenImage: {height: 2880, width: 5120, src: {uri: \"https://raw.githubusercontent.com/YahtzeeRage/CYOA-Assets/master/assets/031_cover_noword.png?token=AIGD4GKSBNO4H24F2L7M2JDALJC2Y\"}},\n    // HomeScreenImage: {height: 2880, width: 5120, src: {uri: require('./assets/031_cover_noword.png')}},\n    themeImage: {\n        Sad: {height: 2880, width: 5120, src: getUri(\"028_sad_nosign.png\")},\n        Pumped: {height: 2880, width: 5120, src: getUri(\"032_pumped_nosign.png\")},\n        Cloudy: {height: 2880, width: 5120, src: getUri(\"034_cloud_nosign.png\")},\n        Romantic: {height: 2880, width: 5120, src: getUri(\"036_romantic_nosign.png\")},\n        Icy: {height: 2880, width: 5120, src: getUri(\"038_snow_nosign.png\")},\n        Party: {height: 2880, width: 5120, src: getUri(\"039_party_nosign.png\")},\n        Beach: {height: 2880, width: 5120, src: getUri(\"042_beach_nosign.png\")},\n        Weird: {height: 2880, width: 5120, src: getUri(\"043_weird_nosign.png\")},\n        Home: {height: 2880, width: 5120, src: getUri(\"044_home_nosign.png\")},\n        Space: {height: 2880, width: 5120, src: getUri(\"045_space_nosign.png\")},\n        Happy: {height: 2880, width: 5120, src: getUri(\"046_happy_nosign.png\")},\n        Lazy: {height: 2880, width: 5120, src: getUri(\"047_lazy_nosign.png\")},\n    },\n    themeColors: {\n        Home: createColorTheme(\"#ffffff\", \"#b4a7d6\", \"#8e7cc380\"),\n        Pumped: createColorTheme(\"#ead1dc\", \"#d5a6bd\", \"#4c11305f\"),\n        Lazy: createColorTheme(\"#d9ead3\", \"#b6d7a8\", \"#274e135e\"),\n        Happy: createColorTheme(\"#fff2cc\", \"#ffe599\", \"#7f60005c\"),\n        Weird: createColorTheme(\"#ead1dc\", \"#d5a6bd\", \"#4c11305f\"),\n        Sad: createColorTheme(\"#f3f3f3\", \"#efefef\", \"#6666665e\" ),\n        Romantic: createColorTheme(\"#ead1dc\", \"#d5a6bd\", \"#4c11305f\"),\n        Home: createColorTheme(\"#fce5cd\", \"#f9cb9c\", \"#783f045e\"),\n        Cloudy: createColorTheme(\"#c9daf8\", \"#a4c2f4\", \"#1c458760\"),\n        Beach: createColorTheme(\"#cfe2f3\", \"#9fc5e8\", \"#0737635e\"),\n        Party: createColorTheme(\"#d9d2e9\", \"#b4a7d6\", \"#20124d5f\"),\n        Icy: createColorTheme(\"#d9d2e9\", \"#b4a7d6\", \"#20124d5f\"),\n        Space: createColorTheme(\"#d9d2e9\", \"#b4a7d6\", \"#20124d5f\")\n    },\n\n    themeTitleNames: {\n        Pumped: \"Pumped!\",\n        Lazy: \"Lazy...\",\n        Happy: \"Happy!\",\n        Weird: \"~ Weird ~\",\n        Sad: \"A Little Sad...\",\n        Romantic: \"Romantic\",\n        Home: \"Home\",\n        Cloudy: \"Through the Clouds\",\n        Beach: \"The Beach\",\n        Party: \"To A Party!\",\n        Icy: \"Somewhere Icy\",\n        Space: \"Outer Space\"\n    },\n\n    themeTitleBoxSize: {\n        Pumped: \"60%\",\n        Lazy: \"60%\",\n        Happy: \"50%\",\n        Weird: \"70%\",\n        Sad: \"100%\",\n        Romantic: \"60%\",\n        Home: \"40%\",\n        Cloudy: \"100%\",\n        Beach: \"70%\",\n        Party: \"80%\",\n        Icy: \"100%\",\n        Space: \"80%\"\n    }\n\n    ,\n\n    moodThemes: {\n        Sad: \"Sad\",\n        Pumped: \"Pumped\",\n        Romantic: \"Romantic\",\n        Weird: \"Weird\",\n        Happy: \"Happy\",\n        Lazy: \"Lazy\"\n    },\n\n    placeThemes: {\n        Cloudy: \"Cloudy\",\n        Icy: \"Icy\",\n        Party: \"Party\",\n        Beach: \"Beach\",\n        Home: \"Home\",\n        Space: \"Space\",\n    },\n\n    themes: {\n        Sad: \"Sad\",\n        Pumped: \"Pumped\",\n        Cloudy: \"Cloudy\",\n        Romantic: \"Romantic\",\n        Icy: \"Icy\",\n        Party: \"Party\",\n        Beach: \"Beach\",\n        Weird: \"Weird\",\n        Home: \"Home\",\n        Space: \"Space\",\n        Happy: \"Happy\",\n        Lazy: \"Lazy\"\n    },\n\n    icons: {\n        Back: {uri: getUrl(\"back.png\"), name: \"Back\"},\n        Home: {uri: getUrl(\"home.png\"), name: \"Home\"},\n        Cloudy: {uri: getUrl(\"clouds.png\"), name: \"Cloudy\"},\n        Beach: {uri: getUrl(\"beach.png\"), name: \"Beach\"},\n        Party: {uri: getUrl(\"party.png\"), name: \"Party\"},\n        Icy: {uri: getUrl(\"cold%20updated.png\"), name: \"Icy\"},\n        Space: {uri: getUrl(\"space.png\"), name: \"Space\"},\n        Random: {uri: getUrl(\"random.png\"), name: \"Random\"},\n        Weird: {uri: getUrl(\"weird.png\"), name: \"Random\"},\n        Lazy: {uri: getUrl(\"lazy.png\"), name: \"Lazy\"}\n    },\n\n    themePlaylists: {\n        Beach: [\n            { name: 'Limonada Fria', artist: \"FutureYou\", track: getUri(\"FutureYou_Limonada%20Fria.wav\")},\n            { name: 'Verano En Playa Azul', artist: \"Michelle Lugo\", track: getUri(\"Michelle_VeranoEnPlayaAzul.wav\")},\n            { name: 'By the Bay', artist: \"Raydee99\", track: getUri(\"BytheBay.wav\")}\n        ]\n\n\n    },\n\n\n    BACKGROUND_IMAGE_HEIGHT: 867,\n    BACKGROUND_IMAGE_WIDTH: 1542,\n    BUTTON_BORDER_WIDTH: 7,\n    GOOGLE_DOCS_TEXT_CONVERSION_RATIO: GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    TILE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    SUBTITLE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLOUDS_TITLE_FONT_SIZE: 19 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLICK_FONT_SIZE: 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    ENTRY_FONT_SIZE: 21 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    LINE_SPACING: 1.15\n};\n\nexport default AppConstants;","import React from 'react';\nimport { Animated, View, Text, StyleSheet, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\n// import Animated from 'react-native-reanimated';\nimport PropTypes from 'prop-types';\nimport AppConstants from '../AppConstants'\nimport { random } from 'underscore';\n\nconst imageStyles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: props.height,\n        width: props.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        overflow: 'hidden',\n         \n    }\n});\n\nexport default class StyledBackground extends React.Component {\n\n    \n\n    state = {\n        fadeAnimation: new Animated.Value(0),\n        cycleIndex: 0\n    };\n\n\n\n    fadeIn = () => {\n        Animated.timing(this.state.fadeAnimation, {\n          toValue: 1,\n          duration: 500\n        }).start(({finished})=>{\n          if (finished && this.props.cycling) {\n            this.fadeOut(4000 + Math.floor(this.props.cycleOffset*Math.random()));\n          }\n        });\n\n        \n    };\n\n    fadeOut = (delay=0) => {\n        Animated.timing(this.state.fadeAnimation, {\n          toValue: 0,\n          delay: delay,\n          duration: 500\n        }).start(({finished })=>{\n          if (finished && this.props.cycling) {\n            if (this.props.cycleTheme === \"Mood\") {\n              var themes_array = Object.keys(AppConstants.moodThemes);\n            }\n            else if (this.props.cycleTheme === \"Place\"){\n              var themes_array = Object.keys(AppConstants.placeThemes);\n            } else {\n              console.error(\"cycle theme not found\")\n              return;\n            }\n            \n            var rand_index = Math.floor(Math.random()*themes_array.length);\n            if (rand_index === this.state.cycleIndex) {\n              rand_index = Math.floor(Math.random()*themes_array.length);\n              if (rand_index === this.state.cycleIndex) {\n                rand_index = Math.floor(Math.random()*themes_array.length);\n              }\n            }\n\n            \n            const THEME = themes_array[rand_index];\n            console.log(AppConstants.themeImage, THEME, themes_array, rand_index)\n            \n            this.props.setBackground(AppConstants.themeImage[THEME].src.uri)\n            this.fadeIn();\n            this.setState({cycleIndex: rand_index})\n          }\n        });\n    };\n\n    render() {\n        var imageStyle = imageStyles(this.props);\n        // console.log(this.props);\n\n        return (\n            <Animated.View\n                style={[\n                    styles.fadingContainer,\n                    {\n                    opacity: this.state.fadeAnimation\n                    }\n                ]}\n            >\n                <ImageBackground  resizeMode='center' style={imageStyle.style} source={this.props.image} onLoad={this.fadeIn}>\n                    {this.props.children}\n                </ImageBackground>\n            </Animated.View>\n        )\n    }\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    fadingContainer: {\n      paddingVertical: 5,\n      paddingHorizontal: 25,\n      backgroundColor: \"black\"\n    },\n    fadingText: {\n      fontSize: 28,\n      textAlign: \"center\",\n      margin: 10,\n      color : \"#fff\"\n    },\n    buttonRow: {\n      flexDirection: \"row\",\n      marginVertical: 16\n    }\n  });","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        \n        borderWidth: props.borderWidth,\n        borderColor: props.borderColor,\n        backgroundColor: props.backgroundColor,\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        // paddingHorizontal: '3%',\n        alignItems: 'center',\n        opacity: 1,\n\n        \n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        // borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    fontStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: props.fontSize,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        color: props.fontColor,\n        opacity: 1,\n        lineHeight: props.lineHeight\n    }\n});\n\nexport default class TextBanner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        // console.log(this.props);\n        if (this.props.justLeft) {\n            viewStyle = StyleSheet.compose(viewStyle,propStyles.justLeft);\n        } else if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.noTop);\n        } else if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.noBottom);\n        } else if (this.props.bottomCorners) {\n            viewStyle = StyleSheet.compose(viewStyle,propStyles.bottomCorners);\n        } else if (this.props.justBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.justBorder);\n        } else if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.corners);\n        } \n\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                </View>\n            )\n        }\n        \n    }\n};","import { Animated,Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport random from \"underscore\"\n// import { SliderBox } from \"react-native-image-slider-box\";\nconst ChooseMoodOrPlace = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n\n    const placeThemes_array = Object.keys(AppConstants.moodThemes);\n\n    const moodThemes_array = Object.keys(AppConstants.placeThemes);\n              \n    \n    const place_rand_index = Math.floor(Math.random()*placeThemes_array.length);\n    const mood_rand_index = Math.floor(Math.random()*moodThemes_array.length);\n            \n\n\n    const [moodBackground, setMoodBackground] = useState(AppConstants.themeImage[placeThemes_array[place_rand_index]].src.uri);\n    const [placeBackground, setPlaceBackground] = useState(AppConstants.themeImage[moodThemes_array[mood_rand_index]].src.uri);\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    \n    \n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n    \n\n    return (\n        <ViewContainer color='white' height='100%' width='100%' horizontal >\n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('MatchMyMood')}}\n                style={{overflow:\"hidden\", backgroundColor: 'rgb(238,238,238)', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <StyledBackground \n                image={moodBackground} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}\n                cycling\n                cycleTheme=\"Mood\"\n                setBackground={setMoodBackground}\n                cycleOffset={2000}\n                >\n                    <TextBanner \n                            borderWidth={scaledButtonBorderWidth}\n                            fontColor=\"#ffffff\"\n                            borderColor='#b4a7d6'\n                            backgroundColor='#8e7cc3c6'\n                            fontSize={scaled_titleFontSize}\n                            lineHeight={scaled_titleLineHeight}\n                            height='20%'\n                            width='80%'\n                        >[Match My<br></br>Mood!]</TextBanner>\n                </StyledBackground>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('TakeMeSomewhere')}}\n                style={{overflow:\"hidden\",backgroundColor: '#8e7cc3c6', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <StyledBackground \n                image={placeBackground} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}\n                cycling\n                cycleTheme=\"Place\"\n                setBackground={setPlaceBackground}\n                cycleOffset={1000}\n                >\n                    <TextBanner \n                        fontColor=\"#ffffff\"\n                        borderColor='#b4a7d6'\n                        backgroundColor='#8e7cc3c6'\n                        borderWidth={scaledButtonBorderWidth}\n                        fontSize={scaled_titleFontSize}\n                        lineHeight={scaled_titleLineHeight}\n                        height='20%'\n                        width='80%'\n                    >[Take Me<br></br>Somewhere!]</TextBanner>\n                </StyledBackground>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n\n}\n\nexport default ChooseMoodOrPlace;\n","import React from 'react';\nimport {View, StyleSheet, TouchableOpacity } from 'react-native';\n\nexport default class CircleButton extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.numberOfRectangles = 15\n    this.radius = this.props.circleDiameter / 2\n\n    // base the height of each bars on the circle radius.\n    // Add 1 to the value b/c we will subtract one down below to get rid of the zero index\n    this.fillRectangleHeight = this.radius / (this.numberOfRectangles + 1)\n\n    // The style used for the rectangles\n    // the zIndex and elevation of 10 puts the rectangles in front of the clickable button\n    this.baseRectangleStyle = {\n      position: 'absolute',\n      zIndex: 10,\n      elevation: 10,\n    }\n  }\n\n  fillRectangle = (iteration, starting) => {\n    const barHeight = this.fillRectangleHeight\n    const roundedRadius = Math.ceil(this.radius)\n    const y = (barHeight * iteration)\n\n    const x = Math.ceil(Math.sqrt(Math.pow(this.radius, 2) - Math.pow(y, 2)))\n\n    let width = roundedRadius - x\n\n    // The bar dimensions\n    const size = {\n      width: width,\n      height: barHeight\n    };\n\n    const verticalLocation = y + roundedRadius\n\n    let location = {}\n    if(starting === 'topLeft'){\n      location = {\n        left: 0,\n        bottom: verticalLocation,\n      };\n    }else if(starting === 'bottomLeft'){\n      location = {\n        left: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'topRight'){\n      location = {\n        right: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'bottomRight'){\n      location = {\n        right: 0,\n        bottom: verticalLocation,\n      }\n    };\n\n    // Create a unique key to identify the element\n    let key = \"\" + iteration + starting\n\n    return(\n      <View key={key} style={{...this.baseRectangleStyle, ...size, ...location}}></View>\n    )\n  };\n\n  renderLines = (starting) => {\n    //start with index+1 b/c 0 will be a width of zero, so no point in doing that math\n    return [...Array(this.numberOfRectangles)].map((_, index) => this.fillRectangle(index+1, starting))\n  }\n\n  fillRectangles = () => {\n    return(\n      <React.Fragment>\n        {this.renderLines('topLeft')}\n        {this.renderLines('bottomLeft')}\n        {this.renderLines('topRight')}\n        {this.renderLines('bottomRight')}\n      </React.Fragment>\n     )\n   };\n\n  render(){\n    let localStyles = styles(this.props)\n\n    return (\n      <View style={localStyles.container}>\n        <TouchableOpacity\n          activeOpacity={.2}\n          style = {localStyles.button}\n          onPress = {this.props.onPress}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n\n        {this.fillRectangles()}\n      </View>\n    )\n  }\n}\n\nconst styles = (props) => StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 0,\n  },\n  button: {\n    backgroundColor: 'clear',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderRadius: (props.circleDiameter / 2),\n    width: props.circleDiameter,\n    height: props.circleDiameter,\n\n    top: props.top,\n    bottom: props.bottom,\n    right: props.right,\n    left: props.left\n  },\n});","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\n// import FastImage from 'react-native-fast-image'\n\nexport default class IconButton extends React.Component {\n    render() {\n        return (\n            <View \n                style={{bottom: this.props.centerHeight + this.props.displaceRadius * Math.sin(this.props.angle), \n                        left: this.props.centerWidth + this.props.displaceRadius * Math.cos(this.props.angle), \n                        position: 'absolute'}}>\n                <CircleButton  \n                        circleDiameter={this.props.iconSize} \n                        onPress={this.props.onPress}\n                        >\n                        <Image \n                            style={{ height: this.props.iconSize, width: this.props.iconSize, borderRadius: 100 }} \n                            source={this.props.image}>\n                        </Image>\n                    </CircleButton>\n            </View>\n        )\n    }\n}","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\nimport { Asset, useAssets } from 'expo-asset'\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Pumped: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/pumped.png\", name: \"Pumped\"},\n    Lazy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/lazy.png\", name: \"Lazy\"},\n    Happy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/happy.png\", name: \"Happy\"},\n    Weird: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/weird.png\", name: \"Weird\"},\n    Sad: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/sad.png\", name: \"Sad\"},\n    Romantic: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/romance.png\", name: \"Romantic\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Pumped\",\n    \"Lazy\",\n    \"Happy\",\n    \"Weird\",\n    \"Sad\",\n    \"Romantic\",\n    \"Random\"\n]\n\n\n\nconst MatchMyMoodScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    const icon_uris = Object.values(AppConstants.icons).map((element)=>element.uri)\n    const [assets] = useAssets([\n        ...icon_uris,\n      ]);\n    if (!fontsLoaded || !assets) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    \n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem, themeType: \"Mood\"})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.HomeScreenImage.src.uri} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default MatchMyMoodScreen;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\nimport { StackActions }from '@react-navigation/web'\nimport { Asset, useAssets } from 'expo-asset'\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n    Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n    Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n    Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n    Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n    Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Home\",\n    \"Cloudy\",\n    \"Beach\",\n    \"Party\",\n    \"Icy\",\n    \"Space\",\n    \"Random\"\n]\n\n\n\nconst TakeMeSomewhere = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    const icon_uris = Object.values(AppConstants.icons).map((element)=>element.uri)\n    const [assets] = useAssets([\n        ...icon_uris,\n      ]);\n    if (!fontsLoaded || !assets) {\n    return <AppLoading />;\n    }\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem, themeType: \"Place\"})}}\n            />\n        }\n\n\n        \n    })\n    \n    \n    return (\n\n        \n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.HomeScreenImage.src.uri} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default TakeMeSomewhere;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n   default: {\n        borderColor: props.borderColor,\n        backgroundColor: props.backgroundColor,\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        borderWidth: props.borderWidth,\n   }\n});\n\nexport default class Banner2 extends React.Component {\n\n    \n\n    render() {\n\n        var viewStyle = styles(this.props).default;\n        if (this.props.noBackground) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {backgroundColor: 'clear'}}.style))\n        }\n        \n        if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderTopWidth: 0}}.style))\n        }\n        if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderBottomWidth: 0}}.style))\n        }\n        if (this.props.noBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderWidth: 0}}.style))\n        }\n        if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderRadius:0}}.style))\n        }\n\n\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        {this.props.children}\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    {this.props.children}\n                </View>\n            )\n        }\n        \n    }\n};","\nimport { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner2\";\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\n\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    const copy = Object.entries(state).map(([key, value]) => ({[key]:OPACITY_STATE.PAUSE}));\n\n    copy[action.type] = action.payload  \n    return copy;\n}\n\n\nexport default class StyledMusicPlayer extends React.Component {\n\n    state = {\n        isNexting: false,\n        flatListRef: null,\n        isPlaying: false,\n        playbackInstance: null,\n        currentIndex: 0,\n        volume: 1.0,\n        isBuffering: false,\n        opacities: Object.assign({}, ...this.props.playlist.map((x)=>({[x.name]:OPACITY_STATE.PAUSE})))\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    onPlayPause_dispatchSideEffects = (isPlaying) => {\n        const { opacities } = this.state\n        const songName = this.props.playlist[this.state.currentIndex].name;\n        const opacityLevel = isPlaying? OPACITY_STATE.PLAY : OPACITY_STATE.PAUSE;\n        const newOpacities = songOpacityReducer(opacities, {type: songName, payload: opacityLevel});\n        this.state.flatListRef.scrollToIndex({animated: true, index: this.state.currentIndex});\n        this.setState({opacities: newOpacities});   \n    }\n\n    async loadAudio() {\n        const {currentIndex, isPlaying, volume} = this.state\n      \n        try {\n          const playbackInstance = new Audio.Sound()\n          const source = {\n            uri: this.props.playlist[currentIndex].track.uri\n          }\n      \n          const status = {\n            shouldPlay: isPlaying,\n            volume\n          }\n      \n          playbackInstance.setOnPlaybackStatusUpdate(this.onPlaybackStatusUpdate)     \n          await playbackInstance.loadAsync(source, status, false)\n          this.setState({playbackInstance})\n\n          } catch (e) {\n            console.log(e)\n          }\n    }\n\n    onPlaybackStatusUpdate = status => {\n        \n        this.setState({\n          isBuffering: status.isBuffering\n        })\n\n        if (status.didJustFinish) {\n            const {currentIndex} = this.state;\n            if (currentIndex === this.props.playlist.length - 1) {\n                this.handlePlayPause();\n                return;\n            }\n            this.handleNextTrack();\n        }\n    }\n\n    handleSongButton = async (songName) => {\n        console.log(\"song button\", songName);\n        console.log(this.props.playlist[this.state.currentIndex])\n        const {currentIndex} = this.state;\n        if (songName === this.props.playlist[this.state.currentIndex].name) {\n            console.log(\"try to pause\",songName )\n            await this.handlePlayPause();\n        } \n        else {\n            var songIndex = this.props.playlist.findIndex((x)=>x.name===songName);\n            if (songIndex===-1){\n                console.warn(\"ERROR: SONG NOT FOUND: 103\");\n            }\n            try {\n                if(songIndex === -1) {songIndex = 0}\n                let { playbackInstance } = this.state\n                if (playbackInstance) {\n                await playbackInstance.unloadAsync()\n\n                this.setState({\n                    currentIndex: songIndex\n                })\n                this.setState({\n                    isPlaying: true\n                })\n                this.loadAudio()\n                }\n                this.onPlayPause_dispatchSideEffects(true);\n            }\n            catch (err) {\n                console.error(err);\n            }\n            \n        }\n    }\n\n    handlePlayPause = async () => {\n        const { isPlaying, playbackInstance } = this.state\n        isPlaying ? await playbackInstance.pauseAsync() : await playbackInstance.playAsync()\n    \n        this.onPlayPause_dispatchSideEffects(!isPlaying);\n\n        this.setState({\n          isPlaying: !isPlaying\n        })\n      }\n    \n    handlePreviousTrack = async () => {\n        let { playbackInstance, currentIndex, isPlaying } = this.state\n\n        if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (currentIndex === 0) {\n            return;\n        } else if (playbackInstance) {\n          await playbackInstance.unloadAsync()\n          currentIndex > 0 ? (currentIndex -= 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n          \n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n      }\n    \n\n    handleNextTrack = async () => {\n        \n        let { playbackInstance, currentIndex, isPlaying} = this.state\n\n        if (this.state.isNexting) {\n            return;\n        }\n        else if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (playbackInstance) {\n            this.state.isNexting = true;\n          await playbackInstance.unloadAsync()\n          currentIndex < this.props.playlist.length - 1 ? (currentIndex += 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n\n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n        this.state.isNexting = false;\n    }\n\n    async componentDidMount() {\n\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {this.state.playbackInstance.unloadAsync(); console.log(\"a\")});\n        // const initialOpacityState = this.props.playlist.map((element) => {\n        //     var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict\n        // });\n\n        try {\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n                shouldDuckAndroid: true,\n                staysActiveInBackground: false,\n                playThroughEarpieceAndroid: true\n            });\n            await this.loadAudio();\n            this.handlePlayPause();\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n    async componentWillUnmount() {\n        this.state.playbackInstance.unloadAsync();\n    }\n\n\n\n    render() {\n\n        \n        return (\n            <ViewContainer color='clear' height='54.5454545%' width='50%'  nudge>\n                <ViewContainer height='17%' width={AppConstants.themeTitleBoxSize[this.props.themeName]}>\n                        <TextBanner \n                            borderColor={AppConstants.themeColors[this.props.themeName].border}\n                            backgroundColor={AppConstants.themeColors[this.props.themeName].background}\n                            fontColor={AppConstants.themeColors[this.props.themeName].text}\n                            noBottom \n                            height='100%' \n                            width='100%' \n                            borderWidth={this.props.bannerBorderWidth}\n                            \n                            fontSize={(this.props.themeName===AppConstants.themes.Cloudy)? this.props.cloudTitleFontSize : this.props.subtitleFontSize}\n                            lineHeight={(this.props.themeName===AppConstants.themes.Cloudy)? this.props.cloudLineHeight : this.props.subtitleLineHeight}\n                        >{this.props.themeTitle}</TextBanner>\n                    </ViewContainer>\n                <Banner \n                        borderColor={AppConstants.themeColors[this.props.themeName].border}\n                        backgroundColor={AppConstants.themeColors[this.props.themeName].background}\n                        height='69%' \n                        width='100%'\n                        borderWidth={this.props.bannerBorderWidth}\n                        corners\n                        // noBackground\n                    >\n                        <FlatList\n                            ref={(ref) => {this.state.flatListRef = ref}}\n                            vertical\n                            showsHorizontalScrollIndicator={false}\n                            showsVerticalScrollIndicator={false}\n                            keyExtractor={(track) => track.name}\n                            data={this.props.playlist}\n                            renderItem={({item}) => {\n                                return (\n                                    <Banner \n                                        \n                                        height='100%' \n                                        width='100%' \n                                        corners\n                                        noBorder\n                                        noBackground>\n                                            \n                                    <TouchableOpacity \n                                        onPress={() => {\n                                            this.handleSongButton(item.name)}}>\n                                        <View style={{opacity: this.state.opacities[item.name]}}>\n                                            <ScrollView  \n                                                style={{flexDirection: 'row'}}\n                                                horizontal\n                                                showsHorizontalScrollIndicator={false}\n                                                nestedScrollEnabled \n                                                contentContainerStyle={{ width: '100%'}}\n                                                \n                                                \n                                            >   \n                                                <View style={{width: '100%'}}><Text style={this.props.fontStyle(this.props.subtitleFontSize, this.props.subtitleLineHeight, 'center', this.props.subtitleFontSize/2, \"Tinos_400Regular\").style}\n                                                >{item.name} / {item.artist}</Text></View>\n                                               \n                                            </ScrollView>\n                                            <ScrollView>\n                                                <View><Text style={this.props.fontStyle(this.props.titleFontSize, this.props.titleLineHeight, 'center', 0, \"PressStart2P_400Regular\").style}\n                                                >--------------</Text></View>                                            \n                                            </ScrollView>\n                                            \n                                        </View>\n                                    </TouchableOpacity></Banner>\n                                )\n                            }}\n                        >\n                            \n                        </FlatList>\n                    </Banner >\n                    <ViewContainer color='clear' height='13%' width='100%'>\n                        <TextBanner \n                            noTop\n                            borderColor={AppConstants.themeColors[this.props.themeName].border}\n                            backgroundColor={AppConstants.themeColors[this.props.themeName].background}\n                            fontColor={AppConstants.themeColors[this.props.themeName].text}\n                            height='100%'\n                            width='100%'\n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.entryFontSize}\n                            lineHeight={this.props.entryLineHeight}\n                        >\n\n                            <TouchableOpacity\n                                onPress={this.handlePreviousTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-back-circle\"color=\"white\"\n                                    size={this.props.titleFontSize} \n                                    color={AppConstants.themeColors[this.props.themeName].border}\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handlePlayPause}\n                            >\n                                {this.state.isPlaying ? (\n                                    <AntDesign name='pausecircle' size={this.props.titleFontSize} color={AppConstants.themeColors[this.props.themeName].border} />\n                                    ) : (\n                                    <AntDesign name='play' size={this.props.titleFontSize} color={AppConstants.themeColors[this.props.themeName].border} />\n                                )}\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handleNextTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-forward-circle\"\n                                    size={this.props.titleFontSize} \n                                    color={AppConstants.themeColors[this.props.themeName].border}\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n                        </TextBanner>\n                    </ViewContainer>\n            </ViewContainer>\n        )\n    }\n}","import { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\n\nimport AppConstants from \"../AppConstants\"\n\nimport StyledMusicPlayer from \"../components/StyledMusicPlayer\";\nimport { random } from \"underscore\";\n\nconst PlaylistScreen = ({navigation}) => {\n\n    const THEME_PARAM = navigation.getParam(\"themeName\");\n    var THEME = THEME_PARAM;\n    if (THEME_PARAM === \"Random\") {\n        var themes_array = null;\n        if (navigation.getParam(\"themeType\") === \"Mood\") {\n            themes_array = Object.keys(AppConstants.moodThemes);\n        }\n        else if (navigation.getParam(\"themeType\") === \"Place\"){\n            themes_array = Object.keys(AppConstants.placeThemes);\n        } else {\n            console.error(\"no theme type found that matches: \" + navigation.getParam(\"themeType\"));\n        }\n        \n        const rand_index = Math.floor(random(themes_array.length));\n        THEME = themes_array[rand_index];\n    }\n    \n\n\n    const THEME_NAME = AppConstants.themeTitleNames[THEME];\n    let IMAGE;\n    let PLAYLIST;\n    switch(THEME) {\n        case AppConstants.themes.Beach:\n            IMAGE = AppConstants.themeImage[THEME];\n            PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Cloudy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Happy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Party:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Pumped:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Romantic:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Sad:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Icy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Space:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Weird:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Lazy:\n            IMAGE = AppConstants.themeImage[THEME];\n        default:\n            console.warn(\"No Theme Found For Image\")\n            break;\n    }\n    PLAYLIST = AppConstants.themePlaylists[\"Beach\"];\n    \n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * 1.0;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.SUBTITLE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * 1.5;\n\n    const scaled_entryFontSize = scaledImageDim.scalingRatio * AppConstants.ENTRY_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_entryLineHeight = scaled_entryFontSize * 1.15;\n\n    // hack\n    const scaled_cloudTitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLOUDS_TITLE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_cloudTitleLineHeight = scaled_cloudTitleFontSize;\n\n    const fontStyle = (fontSize, lineHeight, align, leftPad, fontStyle) => { \n        return StyleSheet.create(\n            {\n                style: {\n                    fontFamily: fontStyle,\n                    fontSize: fontSize,\n                    textAlign: \"center\",\n                    textAlignVertical: 'center',\n                    color: AppConstants.themeColors[THEME].text,\n                    opacity: 1,\n                    lineHeight: lineHeight,\n                    alignSelf: align,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    \n                },\n            }\n        );\n    };\n\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={IMAGE.src} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>   \n                    <StyledMusicPlayer\n                        navigation={navigation}\n                        themeName={THEME}\n                        themeTitle={THEME_NAME}\n                        playlist={PLAYLIST}\n                        fontStyle={fontStyle}\n                        subtitleFontSize={scaled_subtitleFontSize}\n                        subtitleLineHeight={scaled_subtitleLineHeight}\n                        titleFontSize={scaled_titleFontSize}\n                        titleLineHeight={scaled_titleLineHeight}\n                        bannerBorderWidth={scaledButtonBorderWidth}\n                        entryFontSize={scaled_entryFontSize}\n                        entryLineHeight={scaled_entryLineHeight}\n                        //hack\n                        cloudTitleFontSize={scaled_cloudTitleLineHeight}\n                        cloudLineHeight={scaled_cloudTitleLineHeight}\n                    ></StyledMusicPlayer>\n            </StyledBackground>\n        </ViewContainer>\n    )\n\n}\n\n\n\nexport default PlaylistScreen; ","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\n\nclass FirstScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        console.log(this.props)\n    }\n    static navigationOptions = {\n      title: 'First',\n    }\n    componentDidMount(){\n    }\n    render() {\n      const {navigate} = this.props.props.navigation;\n      navigate('Home');\n\n      return (\n        <AppLoading />\n      );\n      \n    }\n  }\n\nconst RootScreen = (props) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n\n    return (\n        <View>\n            <FirstScreen props={props}></FirstScreen>\n        </View>\n    )\n}\n\nexport default RootScreen;\n","import { Text, Image, StyleSheet, View, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useEffect, useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { Asset, useAssets } from 'expo-asset'\n\nimport { Button } from 'react-native-paper';\n\nconst HomeScreen = ({navigation}) => {\n    // navigation.navigate('Home')\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n\n    const icon_uris = Object.values(AppConstants.icons).map((element)=>element.uri)\n    const themeBackground_uris = Object.values(AppConstants.themeImage).map((element)=>element.src.uri);\n    const beachSong_uris = AppConstants.themePlaylists.Beach.map((element)=>element.track.uri);\n    // console.log(Object.keys(AppConstants.icons));\n    const [assets] = useAssets([\n        \n        // AppConstants.HomeScreenImage.src.uri,\n        AppConstants.themeImage.Beach.src.uri,\n        ...icon_uris,\n        ...beachSong_uris,\n        ...themeBackground_uris\n      ]);\n    if (!fontsLoaded && !assets) {\n        return <ViewContainer color='black' height='100%' width='100%' >\n            {/* <Image\n                source={require('../assets/loading.gif')}\n                style={{flex:1, aspectRatio: 2,height:'100%', width:'100%'}}\n                resizeMode='contain'\n            ></Image> */}\n        </ViewContainer>\n    }\n\n    \n\n\n      \n\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = AppConstants.BUTTON_BORDER_WIDTH * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = AppConstants.TILE_FONT_SIZE * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            {/* <Button contentStyle={false} style={{padding: 0, width:'100%', height:'100%'}} compact={true} uppercase={false} color=\"#FFC0CB\" onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}> */}\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <StyledBackground \n                    image={AppConstants.HomeScreenImage.src.uri} \n                    height={scaledImageDim.height}\n                    width={scaledImageDim.width}>\n                    <ViewContainer apart nudge color='clear' height='84.5%' width='50%' top='.6%'>\n\n                        <ViewContainer color='clear' height='36%' width='100%'>\n                            <TextBanner\n                                fontColor=\"#ffffff\"\n                                borderColor=\"#b4a7d6\"\n                                backgroundColor=\"#8e7cc380\"\n                                fontColor=\"#ffffff\"\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_titleFontSize}\n                                lineHeight={scaled_titleLineHeight}\n                                height='78%'\n                                width='100%'\n                                bottomCorners\n                            >Choose Your <br></br>Own<br></br>Audioventure!</TextBanner>\n                            <TextBanner\n\n                                fontColor=\"#ffffff\"\n                                borderColor=\"#b4a7d6\"\n                                backgroundColor=\"#8e7cc380\"\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_subtitleFontSize}\n                                lineHeight={scaled_subtitleLineHeight}\n                                height='22%'\n                                width='100%'\n                                noTop\n                            >Click anywhere to start!</TextBanner>\n                        </ViewContainer>\n\n                        <TextBanner\n                            fontColor=\"#ffffff\"\n                            borderColor=\"#b4a7d6\"\n                            backgroundColor=\"#8e7cc380\"\n                            borderWidth={scaledButtonBorderWidth}\n                            fontSize={scaled_subtitleFontSize}\n                            lineHeight={scaled_subtitleLineHeight}\n                            // text=\"Credits\"\n                            height='9%'\n                            width='33%'\n                            touchable\n                        >Credits</TextBanner>\n\n                    </ViewContainer>\n                </StyledBackground>\n            </TouchableOpacity>\n            {/* </Button> */}\n        </ViewContainer>\n    )\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBrowserApp } from '@react-navigation/web'\nimport {CardStyleInterpolators, createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen'\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen'\nimport PlaylistScreen from './src/screens/PlaylistScreen'\nimport RootScreen from './src/screens/RootScreen'\n\nimport {Platform } from 'react-native'\n\nimport HomeScreen from './src/screens/HomeScreen'\n\nconst navigator = createStackNavigator(\n\n  {\n    Root: RootScreen,\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Playlist: PlaylistScreen\n  },\n  {\n    initialRouteName: 'Root',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black'},\n      cardStyleInterpolator: CardStyleInterpolators.forNoAnimation\n    },\n  }\n);\n\n\nexport default Platform.select({\n  web: config => createBrowserApp(config, {history: 'hash'}),\n  default: config => createAppContainer(config)\n})(navigator);\n\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}