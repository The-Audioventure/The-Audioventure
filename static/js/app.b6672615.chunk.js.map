{"version":3,"sources":["src/components/ViewContainer.js","src/components/StyledBackground.js","src/utilities.js","src/components/TextBanner.js","src/AppConstants.js","src/screens/ChooseMoodOrPlaceScreen.js","src/components/CircleButton.js","src/components/IconButton.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/components/Banner2.js","src/components/StyledMusicPlayer.js","src/screens/PlaylistScreen.js","src/screens/RootScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V3/index.js?f349"],"names":["ViewContainer","props","viewStyle","this","StyleSheet","create","style","justifyContent","backgroundColor","color","alignItems","height","width","nudge","compose","top","bottom","left","right","horizontal","flexDirection","apart","radius","borderRadius","round","onPress","children","View","React","Component","StyledBackground","state","fadeAnimation","Animated","Value","fadeIn","timing","toValue","duration","start","fadeOut","imageStyle","resizeMode","overflow","styles","fadingContainer","opacity","ImageBackground","source","image","onLoad","container","flex","paddingVertical","paddingHorizontal","fadingText","fontSize","textAlign","margin","buttonRow","marginVertical","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","TextBanner","propStyles","scroll","flexWrap","showsVerticalScrollIndicato","default","borderWidth","borderColor","justLeft","borderLeftWidth","noTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","noBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","bottomCorners","corners","justBorder","fontStyle","fontFamily","textAlignVertical","fontColor","lineHeight","touchable","TouchableOpacity","Text","getUri","fileName","uri","createColorTheme","textColor","text","border","background","AppConstants","HomeScreenImage","src","themeImage","Sad","Pumped","Cloudy","Romantic","Icy","Party","Beach","Weird","Home","Space","Happy","themeColors","Lazy","themeTitleNames","themeTitleBoxSize","themes","icons","Back","name","Random","themePlaylists","artist","track","BACKGROUND_IMAGE_HEIGHT","BACKGROUND_IMAGE_WIDTH","BUTTON_BORDER_WIDTH","GOOGLE_DOCS_TEXT_CONVERSION_RATIO","TILE_FONT_SIZE","SUBTITLE_FONT_SIZE","CLOUDS_TITLE_FONT_SIZE","CLICK_FONT_SIZE","ENTRY_FONT_SIZE","LINE_SPACING","ChooseMoodOrPlace","navigation","useState","Dimensions","get","setWindow","window","addEventListener","useFonts","PressStart2P_400Regular","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","navigate","CircleButton","fillRectangle","iteration","starting","barHeight","fillRectangleHeight","roundedRadius","Math","ceil","y","size","sqrt","pow","verticalLocation","location","key","baseRectangleStyle","renderLines","Array","numberOfRectangles","map","_","index","fillRectangles","Fragment","circleDiameter","position","zIndex","elevation","localStyles","activeOpacity","button","alignContent","IconButton","centerHeight","displaceRadius","sin","angle","centerWidth","cos","iconSize","Image","ICONS","THEMES","MatchMyMoodScreen","CENTER_SCREEN_HEIGHT","CENTER_SCREEN_WIDTH","ICONS_SCREEN_RADIUS","elem","indx","PI","themeName","TakeMeSomewhere","Banner2","noBackground","noBorder","OPACITY_STATE","StyledMusicPlayer","isNexting","flatListRef","isPlaying","playbackInstance","currentIndex","volume","isBuffering","opacities","Object","assign","playlist","x","onPlayPause_dispatchSideEffects","newOpacities","action","copy","entries","type","payload","songOpacityReducer","scrollToIndex","animated","setState","onPlaybackStatusUpdate","status","didJustFinish","length","handlePlayPause","handleNextTrack","handleSongButton","songName","a","async","console","log","songIndex","findIndex","warn","unloadAsync","loadAudio","error","pauseAsync","playAsync","handlePreviousTrack","Audio","Sound","shouldPlay","setOnPlaybackStatusUpdate","loadAsync","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","shouldDuckAndroid","staysActiveInBackground","playThroughEarpieceAndroid","bannerBorderWidth","cloudTitleFontSize","subtitleFontSize","cloudLineHeight","subtitleLineHeight","themeTitle","ref","vertical","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","data","renderItem","item","ScrollView","nestedScrollEnabled","contentContainerStyle","titleFontSize","titleLineHeight","entryFontSize","entryLineHeight","Ionicons","AntDesign","PlaylistScreen","THEME_PARAM","getParam","THEME","themes_array","keys","floor","random","IMAGE","PLAYLIST","THEME_NAME","Tinos_400Regular","HEIGHT","WIDTH","MAGIC_SCALING_FACTOR","scaled_subtitleFontSize","scaled_subtitleLineHeight","scaled_entryFontSize","scaled_entryLineHeight","scaled_cloudTitleLineHeight","align","leftPad","alignSelf","FirstScreen","navigationOptions","title","RootScreen","HomeScreen","fontsLoaded","icon_uris","values","element","themeBackground_uris","beachSong_uris","useAssets","assets","navigator","createStackNavigator","Root","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhereScreen","Playlist","initialRouteName","headerMode","defaultNavigationOptions","cardStyle","Platform","select","web","config","createBrowserApp","history","createAppContainer","registerRootComponent","App"],"mappings":"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","file":"static/js/app.b6672615.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image, ShadowPropTypesIOS } from 'react-native';\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\n\n\nconst styles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        backgroundColor: props.color,\n        alignItems: 'center',\n        height: props.height,\n        width: props.width\n    }\n\n});\n\nconst nudge = (props) => StyleSheet.create({\n    style: {\n        top: props.top,\n        bottom: props.bottom,\n        left: props.left,\n        right: props.right\n    }\n})\n\nconst horizontal = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'flex-start',\n        flexDirection: 'row'\n    }\n})\n\nconst apart = (props) => StyleSheet.create({\n    style: {\n        justifyContent: \"space-between\"\n    }\n})\n\nconst round = (props) => StyleSheet.create({\n    style: {\n        borderRadius: props.radius\n    }\n})\n\nexport default class ViewContainer extends React.Component {\n    render() {\n        var viewStyle = styles(this.props).style;\n            // console.log(this.props)\n            if (this.props.nudge){\n                // console.log('nudge!')\n                viewStyle = StyleSheet.compose(viewStyle, nudge(this.props).style);\n            }\n            if (this.props.horizontal) {\n                viewStyle = StyleSheet.compose(viewStyle, horizontal(this.props).style);\n            }\n            if (this.props.apart) {\n                viewStyle = StyleSheet.compose(viewStyle, apart(this.props).style);\n            }\n            if (this.props.radius) {\n                viewStyle = StyleSheet.compose(viewStyle, round(this.props).style);\n            }\n\n        if (this.props.onPress) {\n            return (<TouchableOpacity onPress={this.props.onPress} style={viewStyle}>{this.props.children}</TouchableOpacity>)\n        } else {\n            return (<View style={viewStyle}>{this.props.children}</View>)\n        }\n        \n    }\n};","import React from 'react';\nimport { Animated, View, Text, StyleSheet, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\n// import Animated from 'react-native-reanimated';\n\n\nconst imageStyles = (props) => StyleSheet.create({\n    style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: props.height,\n        width: props.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        overflow: 'hidden',\n         \n    }\n});\n\nexport default class StyledBackground extends React.Component {\n\n    state = {\n        fadeAnimation: new Animated.Value(0)\n    };\n    fadeIn = () => {\n        Animated.timing(this.state.fadeAnimation, {\n          toValue: 1,\n          duration: 500\n        }).start();\n    };\n\n    fadeOut = () => {\n        Animated.timing(this.state.fadeAnimation, {\n          toValue: 0,\n          duration: 500\n        }).start();\n    };\n\n    render() {\n        var imageStyle = imageStyles(this.props);\n        // console.log(this.props);\n\n        return (\n            <Animated.View\n                style={[\n                    styles.fadingContainer,\n                    {\n                    opacity: this.state.fadeAnimation\n                    }\n                ]}\n            >\n                <ImageBackground  resizeMode='contain' style={imageStyle.style} source={this.props.image} onLoad={this.fadeIn}>\n                    {this.props.children}\n                </ImageBackground>\n            </Animated.View>\n        )\n    }\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    fadingContainer: {\n      paddingVertical: 5,\n      paddingHorizontal: 25,\n      backgroundColor: \"black\"\n    },\n    fadingText: {\n      fontSize: 28,\n      textAlign: \"center\",\n      margin: 10,\n      color : \"#fff\"\n    },\n    buttonRow: {\n      flexDirection: \"row\",\n      marginVertical: 16\n    }\n  });","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n    scroll: {\n        flexWrap: 'wrap',\n        overflow: 'scroll',\n        showsVerticalScrollIndicato: false\n    },\n    default: {\n        \n        borderWidth: props.borderWidth,\n        borderColor: props.borderColor,\n        backgroundColor: props.backgroundColor,\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        // paddingHorizontal: '3%',\n        alignItems: 'center',\n\n        \n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: props.borderWidth,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: props.borderWidth,\n        borderTopWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: props.borderWidth,\n        borderBottomWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n    },\n    corners: {\n        borderWidth: props.borderWidth,\n        // borderTopWidth: 0,\n        // borderBottomWidth: 0,\n        // borderColor: '#b4a7d6',\n        // backgroundColor: '#8e7cc3c6',\n        width: props.width,\n        height: props.height,\n        borderRadius:0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    justBorder: {\n        borderWidth: props.borderWidth,\n        // borderColor: '#b4a7d6',\n        width: props.width,\n        height: props.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    fontStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: props.fontSize,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        color: props.fontColor,\n        opacity: 1,\n        lineHeight: props.lineHeight\n    }\n});\n\nexport default class TextBanner extends React.Component {\n    render() {\n\n        var propStyles = styles(this.props);\n        var viewStyle = propStyles.default;\n        // console.log(this.props);\n        if (this.props.justLeft) {\n            viewStyle = StyleSheet.compose(viewStyle,propStyles.justLeft);\n        } else if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.noTop);\n        } else if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.noBottom);\n        } else if (this.props.bottomCorners) {\n            viewStyle = StyleSheet.compose(viewStyle,propStyles.bottomCorners);\n        } else if (this.props.justBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.justBorder);\n        } else if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, propStyles.corners);\n        } \n\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    <Text style={propStyles.fontStyle}>{this.props.children}</Text>\n                </View>\n            )\n        }\n        \n    }\n};","const GOOGLE_DOCS_TEXT_CONVERSION_RATIO =  2;\n\nconst getUri = function(fileName) {\n    \n    return {uri: `https://yahtzeerage.github.io/CYOA-Assets/assets/${fileName}`}\n}\n\nconst createColorTheme = function(textColor, borderColor, backgroundColor) {\n    return {text: textColor, border: borderColor, background: backgroundColor};\n}\n\nconst AppConstants = {\n\n    // HomeScreenImage: {height: 2880, width: 5120, src: getUri(\"031_cover_noword.png\")},\n    HomeScreenImage: {height: 2880, width: 5120, src: {uri: \"https://raw.githubusercontent.com/YahtzeeRage/CYOA-Assets/master/assets/031_cover_noword.png?token=AIGD4GKSBNO4H24F2L7M2JDALJC2Y\"}},\n    // HomeScreenImage: {height: 2880, width: 5120, src: {uri: require('./assets/031_cover_noword.png')}},\n    themeImage: {\n        Sad: {height: 2880, width: 5120, src: getUri(\"028_sad1.png\")},\n        Pumped: {height: 2880, width: 5120, src: getUri(\"032_pumped.png\")},\n        Cloudy: {height: 2880, width: 5120, src: getUri(\"034_cloud.png\")},\n        Romantic: {height: 2880, width: 5120, src: getUri(\"036_romantic.png\")},\n        Icy: {height: 2880, width: 5120, src: getUri(\"038_snow.png\")},\n        Party: {height: 2880, width: 5120, src: getUri(\"039_party.png\")},\n        Beach: {height: 2880, width: 5120, src: getUri(\"042_beach.png\")},\n        Weird: {height: 2880, width: 5120, src: getUri(\"043_weirdagain.png\")},\n        Home: {height: 2880, width: 5120, src: getUri(\"044_home.png\")},\n        Space: {height: 2880, width: 5120, src: getUri(\"045_space.png\")},\n        Happy: {height: 2880, width: 5120, src: getUri(\"046_happy.png\")},\n    },\n    themeColors: {\n        Home: createColorTheme(\"#ffffff\", \"#b4a7d6\", \"#8e7cc380\"),\n        Pumped: createColorTheme(\"#ead1dc\", \"#d5a6bd\", \"#4c11305f\"),\n        Lazy: createColorTheme(\"#d9ead3\", \"#b6d7a8\", \"#274e135e\"),\n        Happy: createColorTheme(\"#fff2cc\", \"#ffe599\", \"#7f60005c\"),\n        Weird: createColorTheme(\"#ead1dc\", \"#d5a6bd\", \"#4c11305f\"),\n        Sad: createColorTheme(\"#f3f3f3\", \"#efefef\", \"#6666665e\" ),\n        Romantic: createColorTheme(\"#ead1dc\", \"#d5a6bd\", \"#4c11305f\"),\n        Home: createColorTheme(\"#fce5cd\", \"#f9cb9c\", \"#783f045e\"),\n        Cloudy: createColorTheme(\"#c9daf8\", \"#a4c2f4\", \"#1c458760\"),\n        Beach: createColorTheme(\"#cfe2f3\", \"#9fc5e8\", \"#0737635e\"),\n        Party: createColorTheme(\"#d9d2e9\", \"#b4a7d6\", \"#20124d5f\"),\n        Icy: createColorTheme(\"#d9d2e9\", \"#b4a7d6\", \"#20124d5f\"),\n        Space: createColorTheme(\"#d9d2e9\", \"#b4a7d6\", \"#20124d5f\")\n    },\n\n    themeTitleNames: {\n        Pumped: \"Pumped!\",\n        Lazy: \"Lazy...\",\n        Happy: \"Happy!\",\n        Weird: \"~ Weird ~\",\n        Sad: \"A Little Sad...\",\n        Romantic: \"Romantic\",\n        Home: \"Home\",\n        Cloudy: \"Through the Clouds\",\n        Beach: \"The Beach\",\n        Party: \"To A Party!\",\n        Icy: \"Somewhere Icy\",\n        Space: \"Outer Space\"\n    },\n\n    themeTitleBoxSize: {\n        Pumped: \"60%\",\n        Lazy: \"60%\",\n        Happy: \"50%\",\n        Weird: \"70%\",\n        Sad: \"100%\",\n        Romantic: \"60%\",\n        Home: \"40%\",\n        Cloudy: \"100%\",\n        Beach: \"70%\",\n        Party: \"80%\",\n        Icy: \"100%\",\n        Space: \"80%\"\n    }\n\n    ,\n\n    themes: {\n        Sad: \"Sad\",\n        Pumped: \"Pumped\",\n        Cloudy: \"Cloudy\",\n        Romantic: \"Romantic\",\n        Icy: \"Icy\",\n        Party: \"Party\",\n        Beach: \"Beach\",\n        Weird: \"Weird\",\n        Home: \"Home\",\n        Space: \"Space\",\n        Happy: \"Happy\"\n    },\n\n    icons: {\n        Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n        Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n        Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n        Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n        Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n        Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n        Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n        Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n    },\n\n    themePlaylists: {\n        Beach: [\n            { name: 'Limonada Fria', artist: \"FutureYou\", track: getUri(\"FutureYou_Limonada%20Fria.wav\")},\n            { name: 'Verano En Playa Azul', artist: \"Michelle Lugo\", track: getUri(\"Michelle_VeranoEnPlayaAzul.wav\")},\n            { name: 'By the Bay', artist: \"Raydee99\", track: getUri(\"BytheBay.wav\")}\n        ]\n\n\n    },\n\n\n    BACKGROUND_IMAGE_HEIGHT: 867,\n    BACKGROUND_IMAGE_WIDTH: 1542,\n    BUTTON_BORDER_WIDTH: 7,\n    GOOGLE_DOCS_TEXT_CONVERSION_RATIO: GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    TILE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    SUBTITLE_FONT_SIZE: 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLOUDS_TITLE_FONT_SIZE: 19 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    CLICK_FONT_SIZE: 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    ENTRY_FONT_SIZE: 21 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO,\n    LINE_SPACING: 1.15\n};\n\nexport default AppConstants;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\nconst ChooseMoodOrPlace = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n    \n\n    return (\n        <ViewContainer color='white' height='100%' width='100%' horizontal >\n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('MatchMyMood')}}\n                style={{backgroundColor: 'rgb(238,238,238)', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    borderWidth={scaledButtonBorderWidth}\n                    fontColor=\"#ffffff\"\n                    borderColor='#b4a7d6'\n                    backgroundColor='#8e7cc3c6'\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Match My<br></br>Mood!]</TextBanner>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n                onPress={()=>{navigation.navigate('TakeMeSomewhere')}}\n                style={{backgroundColor: '#8e7cc3c6', height: '100%', width: '50%', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <TextBanner \n                    fontColor=\"#ffffff\"\n                    borderColor='#b4a7d6'\n                    backgroundColor='#8e7cc3c6'\n                    borderWidth={scaledButtonBorderWidth}\n                    fontSize={scaled_titleFontSize}\n                    lineHeight={scaled_titleLineHeight}\n                    height='20%'\n                    width='80%'\n                >[Take Me<br></br>Somewhere!]</TextBanner>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n\n}\n\nexport default ChooseMoodOrPlace;\n","import React from 'react';\nimport {View, StyleSheet, TouchableOpacity } from 'react-native';\n\nexport default class CircleButton extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.numberOfRectangles = 15\n    this.radius = this.props.circleDiameter / 2\n\n    // base the height of each bars on the circle radius.\n    // Add 1 to the value b/c we will subtract one down below to get rid of the zero index\n    this.fillRectangleHeight = this.radius / (this.numberOfRectangles + 1)\n\n    // The style used for the rectangles\n    // the zIndex and elevation of 10 puts the rectangles in front of the clickable button\n    this.baseRectangleStyle = {\n      position: 'absolute',\n      zIndex: 10,\n      elevation: 10,\n    }\n  }\n\n  fillRectangle = (iteration, starting) => {\n    const barHeight = this.fillRectangleHeight\n    const roundedRadius = Math.ceil(this.radius)\n    const y = (barHeight * iteration)\n\n    const x = Math.ceil(Math.sqrt(Math.pow(this.radius, 2) - Math.pow(y, 2)))\n\n    let width = roundedRadius - x\n\n    // The bar dimensions\n    const size = {\n      width: width,\n      height: barHeight\n    };\n\n    const verticalLocation = y + roundedRadius\n\n    let location = {}\n    if(starting === 'topLeft'){\n      location = {\n        left: 0,\n        bottom: verticalLocation,\n      };\n    }else if(starting === 'bottomLeft'){\n      location = {\n        left: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'topRight'){\n      location = {\n        right: 0,\n        top: verticalLocation,\n      }\n    }else if(starting === 'bottomRight'){\n      location = {\n        right: 0,\n        bottom: verticalLocation,\n      }\n    };\n\n    // Create a unique key to identify the element\n    let key = \"\" + iteration + starting\n\n    return(\n      <View key={key} style={{...this.baseRectangleStyle, ...size, ...location}}></View>\n    )\n  };\n\n  renderLines = (starting) => {\n    //start with index+1 b/c 0 will be a width of zero, so no point in doing that math\n    return [...Array(this.numberOfRectangles)].map((_, index) => this.fillRectangle(index+1, starting))\n  }\n\n  fillRectangles = () => {\n    return(\n      <React.Fragment>\n        {this.renderLines('topLeft')}\n        {this.renderLines('bottomLeft')}\n        {this.renderLines('topRight')}\n        {this.renderLines('bottomRight')}\n      </React.Fragment>\n     )\n   };\n\n  render(){\n    let localStyles = styles(this.props)\n\n    return (\n      <View style={localStyles.container}>\n        <TouchableOpacity\n          activeOpacity={.2}\n          style = {localStyles.button}\n          onPress = {this.props.onPress}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n\n        {this.fillRectangles()}\n      </View>\n    )\n  }\n}\n\nconst styles = (props) => StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 0,\n  },\n  button: {\n    backgroundColor: 'clear',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderRadius: (props.circleDiameter / 2),\n    width: props.circleDiameter,\n    height: props.circleDiameter,\n\n    top: props.top,\n    bottom: props.bottom,\n    right: props.right,\n    left: props.left\n  },\n});","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\n\n\nexport default class IconButton extends React.Component {\n    render() {\n        return (\n            <View \n                style={{bottom: this.props.centerHeight + this.props.displaceRadius * Math.sin(this.props.angle), \n                        left: this.props.centerWidth + this.props.displaceRadius * Math.cos(this.props.angle), \n                        position: 'absolute'}}>\n                <CircleButton  \n                        circleDiameter={this.props.iconSize} \n                        onPress={this.props.onPress}\n                        >\n                        <Image \n                            style={{ height: this.props.iconSize, width: this.props.iconSize, borderRadius: 100 }} \n                            source={this.props.image}>\n                        </Image>\n                    </CircleButton>\n            </View>\n        )\n    }\n}","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Pumped: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/pumped.png\", name: \"Pumped\"},\n    Lazy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/lazy.png\", name: \"Lazy\"},\n    Happy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/happy.png\", name: \"Happy\"},\n    Weird: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/weird.png\", name: \"Weird\"},\n    Sad: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/sad.png\", name: \"Sad\"},\n    Romantic: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/romance.png\", name: \"Romantic\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Pumped\",\n    \"Lazy\",\n    \"Happy\",\n    \"Weird\",\n    \"Sad\",\n    \"Romantic\",\n    \"Random\"\n]\n\n\n\nconst MatchMyMoodScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const ICON_SIZE = 180;\n\n    \n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.HomeScreenImage.src.uri} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default MatchMyMoodScreen;","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport CircleButton from \"../components/CircleButton\";\nimport IconButton from \"../components/IconButton\";\nimport { StackActions }from '@react-navigation/web'\n\nconst ICONS = {\n    Back: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/back.png\", name: \"Back\"},\n    Home: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/home.png\", name: \"Home\"},\n    Cloudy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/clouds.png\", name: \"cloudy\"},\n    Beach: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/beach.png\", name: \"Beach\"},\n    Party: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/party.png\", name: \"Party\"},\n    Icy: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/cold%20updated.png\", name: \"Icy\"},\n    Space: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/space.png\", name: \"Space\"},\n    Random: {uri: \"https://yahtzeerage.github.io/CYOA-Assets/assets/random.png\", name: \"Random\"}\n\n}\n\nconst THEMES = [\n    \"Back\",\n    \"Home\",\n    \"Cloudy\",\n    \"Beach\",\n    \"Party\",\n    \"Icy\",\n    \"Space\",\n    \"Random\"\n]\n\n\n\nconst TakeMeSomewhere = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const ICON_SIZE = 180;\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    const CENTER_SCREEN_HEIGHT = scaledImageDim.height/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const CENTER_SCREEN_WIDTH = scaledImageDim.width/2 - ICON_SIZE*scaledImageDim.scalingRatio/2;\n    const ICONS_SCREEN_RADIUS = 320*scaledImageDim.scalingRatio;\n\n    const icons = THEMES.map((elem,indx) => {\n        if (elem === 'Back') {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{\n                    navigation.navigate('ChooseMoodOrPlace');\n                }}\n            />\n        } else {\n            return <IconButton\n                key={elem}\n                centerHeight={CENTER_SCREEN_HEIGHT}\n                centerWidth={CENTER_SCREEN_WIDTH}\n                displaceRadius={ICONS_SCREEN_RADIUS}\n                image={ICONS[elem]}\n                angle={Math.PI/2+(Math.PI/4)*indx}\n                iconSize={ICON_SIZE*scaledImageDim.scalingRatio}\n                onPress={()=>{navigation.navigate('Playlist', {themeName: elem})}}\n            />\n        }\n\n\n        \n    })\n    \n    \n    return (\n\n        \n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={AppConstants.HomeScreenImage.src.uri} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>\n                {icons}\n            </StyledBackground>\n        </ViewContainer>\n    )\n}\n\nexport default TakeMeSomewhere;","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet,TouchableOpacity, Image, ShadowPropTypesIOS, ImageBackground } from 'react-native';\nimport ViewContainer from \"../components/ViewContainer\";\n\nconst styles = (props) => StyleSheet.create({\n   default: {\n        borderColor: props.borderColor,\n        backgroundColor: props.backgroundColor,\n        width: props.width,\n        height: props.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        borderWidth: props.borderWidth,\n   }\n});\n\nexport default class Banner2 extends React.Component {\n\n    \n\n    render() {\n\n        var viewStyle = styles(this.props).default;\n        if (this.props.noBackground) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {backgroundColor: 'clear'}}.style))\n        }\n        \n        if (this.props.noTop) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderTopWidth: 0}}.style))\n        }\n        if (this.props.noBottom) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderBottomWidth: 0}}.style))\n        }\n        if (this.props.noBorder) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderWidth: 0}}.style))\n        }\n        if (this.props.corners) {\n            viewStyle = StyleSheet.compose(viewStyle, StyleSheet.create({style: {borderRadius:0}}.style))\n        }\n\n\n        if (this.props.touchable) {\n            return (\n                <TouchableOpacity style={viewStyle}>\n                    <ViewContainer height='100%' width='100%'>\n                        {this.props.children}\n                    </ViewContainer>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View style={viewStyle}>\n                    {this.props.children}\n                </View>\n            )\n        }\n        \n    }\n};","\nimport { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Banner from \"../components/Banner2\";\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\n\n\nconst OPACITY_STATE = {\n    PLAY: 0.5,\n    PAUSE: 1\n}\n\nconst songOpacityReducer = (state, action) => {\n    const copy = Object.entries(state).map(([key, value]) => ({[key]:OPACITY_STATE.PAUSE}));\n\n    copy[action.type] = action.payload  \n    return copy;\n}\n\n\nexport default class StyledMusicPlayer extends React.Component {\n\n    state = {\n        isNexting: false,\n        flatListRef: null,\n        isPlaying: false,\n        playbackInstance: null,\n        currentIndex: 0,\n        volume: 1.0,\n        isBuffering: false,\n        opacities: Object.assign({}, ...this.props.playlist.map((x)=>({[x.name]:OPACITY_STATE.PAUSE})))\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    onPlayPause_dispatchSideEffects = (isPlaying) => {\n        const { opacities } = this.state\n        const songName = this.props.playlist[this.state.currentIndex].name;\n        const opacityLevel = isPlaying? OPACITY_STATE.PLAY : OPACITY_STATE.PAUSE;\n        const newOpacities = songOpacityReducer(opacities, {type: songName, payload: opacityLevel});\n        this.state.flatListRef.scrollToIndex({animated: true, index: this.state.currentIndex});\n        this.setState({opacities: newOpacities});   \n    }\n\n    async loadAudio() {\n        const {currentIndex, isPlaying, volume} = this.state\n      \n        try {\n          const playbackInstance = new Audio.Sound()\n          const source = {\n            uri: this.props.playlist[currentIndex].track.uri\n          }\n      \n          const status = {\n            shouldPlay: isPlaying,\n            volume\n          }\n      \n          playbackInstance.setOnPlaybackStatusUpdate(this.onPlaybackStatusUpdate)     \n          await playbackInstance.loadAsync(source, status, false)\n          this.setState({playbackInstance})\n\n          } catch (e) {\n            console.log(e)\n          }\n    }\n\n    onPlaybackStatusUpdate = status => {\n        \n        this.setState({\n          isBuffering: status.isBuffering\n        })\n\n        if (status.didJustFinish) {\n            const {currentIndex} = this.state;\n            if (currentIndex === this.props.playlist.length - 1) {\n                this.handlePlayPause();\n                return;\n            }\n            this.handleNextTrack();\n        }\n    }\n\n    handleSongButton = async (songName) => {\n        console.log(\"song button\", songName);\n        console.log(this.props.playlist[this.state.currentIndex])\n        const {currentIndex} = this.state;\n        if (songName === this.props.playlist[this.state.currentIndex].name) {\n            console.log(\"try to pause\",songName )\n            await this.handlePlayPause();\n        } \n        else {\n            var songIndex = this.props.playlist.findIndex((x)=>x.name===songName);\n            if (songIndex===-1){\n                console.warn(\"ERROR: SONG NOT FOUND: 103\");\n            }\n            try {\n                if(songIndex === -1) {songIndex = 0}\n                let { playbackInstance } = this.state\n                if (playbackInstance) {\n                await playbackInstance.unloadAsync()\n\n                this.setState({\n                    currentIndex: songIndex\n                })\n                this.setState({\n                    isPlaying: true\n                })\n                this.loadAudio()\n                }\n                this.onPlayPause_dispatchSideEffects(true);\n            }\n            catch (err) {\n                console.error(err);\n            }\n            \n        }\n    }\n\n    handlePlayPause = async () => {\n        const { isPlaying, playbackInstance } = this.state\n        isPlaying ? await playbackInstance.pauseAsync() : await playbackInstance.playAsync()\n    \n        this.onPlayPause_dispatchSideEffects(!isPlaying);\n\n        this.setState({\n          isPlaying: !isPlaying\n        })\n      }\n    \n    handlePreviousTrack = async () => {\n        let { playbackInstance, currentIndex, isPlaying } = this.state\n\n        if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (currentIndex === 0) {\n            return;\n        } else if (playbackInstance) {\n          await playbackInstance.unloadAsync()\n          currentIndex > 0 ? (currentIndex -= 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n          \n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n      }\n    \n\n    handleNextTrack = async () => {\n        \n        let { playbackInstance, currentIndex, isPlaying} = this.state\n\n        if (this.state.isNexting) {\n            return;\n        }\n        else if (!isPlaying && currentIndex === 0) {\n            await this.handlePlayPause();\n        }\n        else if (playbackInstance) {\n            this.state.isNexting = true;\n          await playbackInstance.unloadAsync()\n          currentIndex < this.props.playlist.length - 1 ? (currentIndex += 1) : (currentIndex = 0)\n          this.setState({\n            currentIndex\n          })\n\n          this.setState({\n                isPlaying: true\n            })\n\n          this.loadAudio()\n        }\n        this.onPlayPause_dispatchSideEffects(true);\n        this.state.isNexting = false;\n    }\n\n    async componentDidMount() {\n\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {this.state.playbackInstance.unloadAsync(); console.log(\"a\")});\n        // const initialOpacityState = this.props.playlist.map((element) => {\n        //     var dict = {}; dict[element.name] = OPACITY_STATE.PAUSE; return dict\n        // });\n\n        try {\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n                shouldDuckAndroid: true,\n                staysActiveInBackground: false,\n                playThroughEarpieceAndroid: true\n            });\n            this.loadAudio();\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n    async componentWillUnmount() {\n        this.state.playbackInstance.unloadAsync();\n    }\n\n\n\n    render() {\n        return (\n            <ViewContainer color='clear' height='54.5454545%' width='50%'  nudge>\n                <ViewContainer height='17%' width={AppConstants.themeTitleBoxSize[this.props.themeName]}>\n                        <TextBanner \n                            borderColor={AppConstants.themeColors[this.props.themeName].border}\n                            backgroundColor={AppConstants.themeColors[this.props.themeName].background}\n                            fontColor={AppConstants.themeColors[this.props.themeName].text}\n                            noBottom \n                            height='100%' \n                            width='100%' \n                            borderWidth={this.props.bannerBorderWidth}\n                            \n                            fontSize={(this.props.themeName===AppConstants.themes.Cloudy)? this.props.cloudTitleFontSize : this.props.subtitleFontSize}\n                            lineHeight={(this.props.themeName===AppConstants.themes.Cloudy)? this.props.cloudLineHeight : this.props.subtitleLineHeight}\n                        >{this.props.themeTitle}</TextBanner>\n                    </ViewContainer>\n                <Banner \n                        borderColor={AppConstants.themeColors[this.props.themeName].border}\n                        backgroundColor={AppConstants.themeColors[this.props.themeName].background}\n                        height='69%' \n                        width='100%'\n                        borderWidth={this.props.bannerBorderWidth}\n                        corners\n                        // noBackground\n                    >\n                        <FlatList\n                            ref={(ref) => {this.state.flatListRef = ref}}\n                            vertical\n                            showsHorizontalScrollIndicator={false}\n                            showsVerticalScrollIndicator={false}\n                            keyExtractor={(track) => track.name}\n                            data={this.props.playlist}\n                            renderItem={({item}) => {\n                                return (\n                                    <Banner \n                                        \n                                        height='100%' \n                                        width='100%' \n                                        corners\n                                        noBorder\n                                        noBackground>\n                                            \n                                    <TouchableOpacity \n                                        onPress={() => {\n                                            this.handleSongButton(item.name)}}>\n                                        <View style={{opacity: this.state.opacities[item.name]}}>\n                                            <ScrollView  \n                                                style={{flexDirection: 'row'}}\n                                                horizontal\n                                                showsHorizontalScrollIndicator={false}\n                                                nestedScrollEnabled \n                                                contentContainerStyle={{ width: '100%'}}\n                                                \n                                                \n                                            >   \n                                                <View style={{width: '100%'}}><Text style={this.props.fontStyle(this.props.subtitleFontSize, this.props.subtitleLineHeight, 'center', this.props.subtitleFontSize/2, \"Tinos_400Regular\").style}\n                                                >{item.name} / {item.artist}</Text></View>\n                                               \n                                            </ScrollView>\n                                            <ScrollView>\n                                                <View><Text style={this.props.fontStyle(this.props.titleFontSize, this.props.titleLineHeight, 'center', 0, \"PressStart2P_400Regular\").style}\n                                                >--------------</Text></View>                                            \n                                            </ScrollView>\n                                            \n                                        </View>\n                                    </TouchableOpacity></Banner>\n                                )\n                            }}\n                        >\n                            \n                        </FlatList>\n                    </Banner >\n                    <ViewContainer color='clear' height='13%' width='100%'>\n                        <TextBanner \n                            noTop\n                            borderColor={AppConstants.themeColors[this.props.themeName].border}\n                            backgroundColor={AppConstants.themeColors[this.props.themeName].background}\n                            // fontColor={}\n                            height='100%'\n                            width='100%'\n                            borderWidth={this.props.bannerBorderWidth}\n                            fontSize={this.props.entryFontSize}\n                            lineHeight={this.props.entryLineHeight}\n                        >\n\n                            <TouchableOpacity\n                                onPress={this.handlePreviousTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-back-circle\"color=\"white\"\n                                    size={this.props.titleFontSize} \n                                    color={AppConstants.themeColors[this.props.themeName].border}\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handlePlayPause}\n                            >\n                                {this.state.isPlaying ? (\n                                    <AntDesign name='pausecircle' size={this.props.titleFontSize} color={AppConstants.themeColors[this.props.themeName].border} />\n                                    ) : (\n                                    <AntDesign name='play' size={this.props.titleFontSize} color={AppConstants.themeColors[this.props.themeName].border} />\n                                )}\n                            </TouchableOpacity>\n\n                            <Text> </Text>\n\n                            <TouchableOpacity\n                                onPress={this.handleNextTrack}\n                            >\n                                <Ionicons  \n                                    name=\"play-skip-forward-circle\"\n                                    size={this.props.titleFontSize} \n                                    color={AppConstants.themeColors[this.props.themeName].border}\n                                    >\n                                </Ionicons>\n                            </TouchableOpacity>\n                        </TextBanner>\n                    </ViewContainer>\n            </ViewContainer>\n        )\n    }\n}","import { Text, Image, StyleSheet, ScrollView, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useState, useReducer} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\n\nimport AppConstants from \"../AppConstants\"\n\nimport StyledMusicPlayer from \"../components/StyledMusicPlayer\";\nimport { random } from \"underscore\";\n\nconst PlaylistScreen = ({navigation}) => {\n\n    const THEME_PARAM = navigation.getParam(\"themeName\");\n    var THEME = THEME_PARAM;\n    if (THEME_PARAM === \"Random\") {\n        const themes_array = Object.keys(AppConstants.themes);\n        const rand_index = Math.floor(random(themes_array.length));\n        THEME = themes_array[rand_index];\n    }\n    \n\n\n    const THEME_NAME = AppConstants.themeTitleNames[THEME];\n    let IMAGE;\n    let PLAYLIST;\n    switch(THEME) {\n        case AppConstants.themes.Beach:\n            IMAGE = AppConstants.themeImage[THEME];\n            PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Cloudy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Happy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Home:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Party:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Pumped:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Romantic:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Sad:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Icy:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Space:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        case AppConstants.themes.Weird:\n            IMAGE = AppConstants.themeImage[THEME];\n            // PLAYLIST = AppConstants.themePlaylists[THEME];\n            break;\n        default:\n            console.warn(\"No Theme Found For Image\")\n            break;\n    }\n    PLAYLIST = AppConstants.themePlaylists[\"Beach\"];\n    \n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width;\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * AppConstants.BUTTON_BORDER_WIDTH * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * AppConstants.TILE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * 1.0;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.SUBTITLE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * 1.5;\n\n    const scaled_entryFontSize = scaledImageDim.scalingRatio * AppConstants.ENTRY_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_entryLineHeight = scaled_entryFontSize * 1.15;\n\n    // hack\n    const scaled_cloudTitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLOUDS_TITLE_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_cloudTitleLineHeight = scaled_cloudTitleFontSize;\n\n    const fontStyle = (fontSize, lineHeight, align, leftPad, fontStyle) => { \n        return StyleSheet.create(\n            {\n                style: {\n                    fontFamily: fontStyle,\n                    fontSize: fontSize,\n                    textAlign: \"center\",\n                    textAlignVertical: 'center',\n                    color: 'white',\n                    opacity: 1,\n                    lineHeight: lineHeight,\n                    alignSelf: align,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    \n                },\n            }\n        );\n    };\n\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <StyledBackground \n                image={IMAGE.src} \n                height={scaledImageDim.height}\n                width={scaledImageDim.width}>   \n                    <StyledMusicPlayer\n                        navigation={navigation}\n                        themeName={THEME}\n                        themeTitle={THEME_NAME}\n                        playlist={PLAYLIST}\n                        fontStyle={fontStyle}\n                        subtitleFontSize={scaled_subtitleFontSize}\n                        subtitleLineHeight={scaled_subtitleLineHeight}\n                        titleFontSize={scaled_titleFontSize}\n                        titleLineHeight={scaled_titleLineHeight}\n                        bannerBorderWidth={scaledButtonBorderWidth}\n                        entryFontSize={scaled_entryFontSize}\n                        entryLineHeight={scaled_entryLineHeight}\n                        //hack\n                        cloudTitleFontSize={scaled_cloudTitleLineHeight}\n                        cloudLineHeight={scaled_cloudTitleLineHeight}\n                    ></StyledMusicPlayer>\n            </StyledBackground>\n        </ViewContainer>\n    )\n\n}\n\n\n\nexport default PlaylistScreen; ","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\n\n\nclass FirstScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        console.log(this.props)\n    }\n    static navigationOptions = {\n      title: 'First',\n    }\n    componentDidMount(){\n    }\n    render() {\n      const {navigate} = this.props.props.navigation;\n      navigate('Home');\n\n      return (\n        <AppLoading />\n      );\n      \n    }\n  }\n\nconst RootScreen = (props) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n    });\n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const imageDim = {height: AppConstants.BACKGROUND_IMAGE_HEIGHT, width: AppConstants.BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n\n    return (\n        <View>\n            <FirstScreen props={props}></FirstScreen>\n        </View>\n    )\n}\n\nexport default RootScreen;\n","import { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport {Tinos_400Regular} from '@expo-google-fonts/tinos'\nimport React, {useEffect, useState} from 'react';\nimport ViewContainer from \"../components/ViewContainer\";\nimport StyledBackground from \"../components/StyledBackground\"\nimport utilities from '../utilities'\nimport TextBanner from \"../components/TextBanner\";\nimport AppConstants from \"../AppConstants\"\nimport { Asset, useAssets } from 'expo-asset'\n\nconst HomeScreen = ({navigation}) => {\n    // navigation.navigate('Home')\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage or error\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n        Tinos_400Regular\n    });\n\n    const icon_uris = Object.values(AppConstants.icons).map((element)=>element.uri)\n    const themeBackground_uris = Object.values(AppConstants.themeImage).map((element)=>element.src.uri);\n    const beachSong_uris = AppConstants.themePlaylists.Beach.map((element)=>element.track.uri);\n    // console.log(Object.keys(AppConstants.icons));\n    const [assets] = useAssets([\n        \n        // AppConstants.HomeScreenImage.src.uri,\n        AppConstants.themeImage.Beach.src.uri,\n        ...icon_uris,\n        ...beachSong_uris,\n        ...themeBackground_uris\n      ]);\n    if (!fontsLoaded && !assets) {\n        return <ViewContainer color='black' height='100%' width='100%' >\n            {/* <Image\n                source={require('../assets/loading.gif')}\n                style={{flex:1, aspectRatio: 2,height:'100%', width:'100%'}}\n                resizeMode='contain'\n            ></Image> */}\n        </ViewContainer>\n    }\n\n    \n\n\n      \n\n\n    const HEIGHT = AppConstants.HomeScreenImage.height;\n    const WIDTH = AppConstants.HomeScreenImage.width\n\n    const MAGIC_SCALING_FACTOR = (WIDTH / AppConstants.BACKGROUND_IMAGE_WIDTH)\n\n    const imageDim = {height: HEIGHT, width: WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = AppConstants.BUTTON_BORDER_WIDTH * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleFontSize = AppConstants.TILE_FONT_SIZE * scaledImageDim.scalingRatio * MAGIC_SCALING_FACTOR;\n    const scaled_titleLineHeight = scaled_titleFontSize * AppConstants.LINE_SPACING;\n    const scaled_subtitleFontSize = scaledImageDim.scalingRatio * AppConstants.CLICK_FONT_SIZE * MAGIC_SCALING_FACTOR;\n    const scaled_subtitleLineHeight = scaled_subtitleFontSize * AppConstants.LINE_SPACING;\n\n    return (\n        <ViewContainer color='black' height='100%' width='100%' >\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <StyledBackground \n                    image={AppConstants.HomeScreenImage.src.uri} \n                    height={scaledImageDim.height}\n                    width={scaledImageDim.width}>\n                    <ViewContainer apart nudge color='clear' height='84.5%' width='50%' top='.6%'>\n\n                        <ViewContainer color='clear' height='36%' width='100%'>\n                            <TextBanner\n                                fontColor=\"#ffffff\"\n                                borderColor=\"#b4a7d6\"\n                                backgroundColor=\"#8e7cc380\"\n                                fontColor=\"#ffffff\"\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_titleFontSize}\n                                lineHeight={scaled_titleLineHeight}\n                                height='78%'\n                                width='100%'\n                                bottomCorners\n                            >Choose Your <br></br>Own Audioventure!</TextBanner>\n                            <TextBanner\n\n                                fontColor=\"#ffffff\"\n                                borderColor=\"#b4a7d6\"\n                                backgroundColor=\"#8e7cc380\"\n                                borderWidth={scaledButtonBorderWidth}\n                                fontSize={scaled_subtitleFontSize}\n                                lineHeight={scaled_subtitleLineHeight}\n                                height='22%'\n                                width='100%'\n                                noTop\n                            >Click anywhere to start!</TextBanner>\n                        </ViewContainer>\n\n                        <TextBanner\n                            fontColor=\"#ffffff\"\n                            borderColor=\"#b4a7d6\"\n                            backgroundColor=\"#8e7cc380\"\n                            borderWidth={scaledButtonBorderWidth}\n                            fontSize={scaled_subtitleFontSize}\n                            lineHeight={scaled_subtitleLineHeight}\n                            // text=\"Credits\"\n                            height='9%'\n                            width='33%'\n                            touchable\n                        >Credits</TextBanner>\n\n                    </ViewContainer>\n                </StyledBackground>\n            </TouchableOpacity>\n        </ViewContainer>\n    )\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBrowserApp } from '@react-navigation/web'\nimport {createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen'\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen'\nimport PlaylistScreen from './src/screens/PlaylistScreen'\nimport RootScreen from './src/screens/RootScreen'\n\nimport {Platform } from 'react-native'\n\nimport HomeScreen from './src/screens/HomeScreen'\n\nconst navigator = createStackNavigator(\n\n  {\n    Root: RootScreen,\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Playlist: PlaylistScreen\n  },\n  {\n    initialRouteName: 'Root',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\n\nexport default Platform.select({\n  web: config => createBrowserApp(config, {history: 'hash'}),\n  default: config => createAppContainer(config)\n})(navigator);\n\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}