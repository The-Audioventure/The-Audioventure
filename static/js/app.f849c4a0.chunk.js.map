{"version":3,"sources":["assets/backgroundBanner.gif","styles/main_styleFactory.js","styles/container_styleFactory.js","styles/banner_styleFactory.js","styles/text_styleFactory.js","src/utilities.js","styles/view_styleFactory.js","src/screens/ChooseMoodOrPlaceScreen.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","src/data/ThemePlaylists.js","src/screens/PlaylistScreen.js","src/screens/HomeScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_V2_JS/index.js?5f09"],"names":["module","exports","main_styleFactory","backgroundDim","buttonBorderWidth","FONT_SIZE","LINE_HEIGHT","StyleSheet","create","viewStyle","justifyContent","backgroundColor","alignItems","imageStyle","height","width","resizeMode","overflow","buttonStyle","borderWidth","borderColor","borderRadius","textStyle","fontFamily","fontSize","textAlign","color","opacity","lineHeight","container_styleFactory","containerDim","baseStyleSheet","defaultStyle","position","apartStyle_default","apartStyle_nudged","top","bottom","left","right","horizontalItemsStyle","flexDirection","main","debug_color","debug","colorStyle","style","debugStyle","Object","entries","key","value","compose","banner_styleFactory","bannerDim","default","flexWrap","paddingHorizontal","justLeft","borderLeftWidth","noTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","noBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","bottomCorners","justBorder","text_styleFactory","font_size","line_height","textAlignVertical","utilities","calculate_scaledImageDim","windowDim","imageDim","window_aspectRatio","scalingRatio","view_styleFactory","horizontal","HomeScreen","navigation","useState","Dimensions","get","setWindow","window","addEventListener","useFonts","PressStart2P_400Regular","require","scaledImageDim","scaledButtonBorderWidth","scaled_titleFontSize","scaled_titleLineHeight","titleText_style","scaled_clickFontSize","leftScreenBanner_style","leftBanner_style","rightScreenBanner_style","rightBanner_style","mainView_style","View","TouchableOpacity","onPress","navigate","Text","track","uri","Mood","opacityLevel","opacityReducer","opacityState","action","console","log","payload","type","Angry","Lazy","Sad","Happy","Pumped","Weird","Romantic","stylefactory","backgroundHeight","backgroundWidth","contentViewStyle","titleViewStyle","flex","titleBanner","title_textStyle","optionsViewStyle","apart_optionLineViewStyle","even_optionLineViewStyle","option_buttonStyle","option_textStyle","parentViewStyle","MatchMyMoodScreen","props","useReducer","opacityDispatch","React","Audio","Sound","sound","soundPlaying","setSoundPlaying","moodPlaying","setMoodPlaying","play_pauseSound","loaded_song","mood","a","async","_loaded","error","pauseAsync","unloadAsync","loadAsync","playAsync","_onPlaybackStatusUpdate","status","didJustFinish","useEffect","undefined","RATIO","styles","ImageBackground","source","theme","onMouseEnter","onMouseLeave","displayType","prefix","Place","Beach","Icy","Jungle","Home","Clouds","Party","Volcano","TakeMeSomewhereScreen","ThemePlaylists","themeArg","name","url","playlist","artist","play_pause_name","PlaylistScreen","initialButtonHighlights","map","element","push","buttonHighlights","setButtonHighlights","play_pause_state","set_play_pause_state","play_pause_button","newVal","currentIndex","findIndex","playlistLength","length","nextIndex","getParam","scaled_itemFontSize","titleItem_style","main_styles","contentView_style","titleView_style","titleBanner_style","listView_style","playlistView_style","playlistBanner_style","vertical","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","data","renderItem","item","ScrollView","AntDesign","size","skip_buttion","Ionicons","BACKGROUND_IMAGE","titleContent_style","creditsContent_style","clickBanner_style","creditsBanner_style","clickText_style","navigator","createStackNavigator","ChooseMoodOrPlace","ChooseMoodOrPlaceScreen","MatchMyMood","TakeMeSomewhere","Playlist","initialRouteName","headerMode","defaultNavigationOptions","title","cardStyle","createAppContainer","container","registerRootComponent","App"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,8C,uNCwC5BC,EArCW,SAACC,EAAeC,EAAmBC,EAAWC,GAA9C,OAA8DC,IAAWC,OAAO,CAEtGC,UAAW,CAEPC,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,SAChBE,WAAY,SACZE,OAAQX,EAAcW,OACtBC,MAAOZ,EAAcY,MACrBC,WAAY,SACZL,gBAAiB,QAEjBM,SAAU,UAEdC,YAAa,CACTC,YAAaf,EACbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAO,MACPD,OAAQ,MACRO,aAAc,EACdX,eAAgB,UAEpBY,UAAW,CACPC,WAAY,0BACZC,SAAUnB,EACVoB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAYtB,MCyCLuB,EApEgB,SAACC,GAE5B,IAAMC,EAAiBxB,IAAWC,OAAO,CACrCwB,aAAc,CACVjB,MAAOe,EAAaf,MACpBD,OAAQgB,EAAahB,OACrBmB,SAAU,WACVrB,WAAY,SACZF,eAAgB,UAGpBwB,mBAAoB,CAChBnB,MAAOe,EAAaf,MACpBD,OAAQgB,EAAahB,OACrBmB,SAAU,WACVvB,eAAgB,gBAChBE,WAAY,UAGhBuB,kBAAmB,CACfpB,MAAOe,EAAaf,MACpBD,OAAQgB,EAAahB,OACrBmB,SAAU,WACVvB,eAAgB,gBAChB0B,IAAKN,EAAaM,IAClBC,OAAQP,EAAaO,OACrBC,KAAMR,EAAaQ,KACnBC,MAAOT,EAAaS,MACpB3B,WAAY,UAEhB4B,qBAAsB,CAClBzB,MAAOe,EAAaf,MACpBD,OAAQgB,EAAahB,OACrBmB,SAAU,WACVG,IAAKN,EAAaM,IAClBC,OAAQP,EAAaO,OACrBC,KAAMR,EAAaQ,KACnBC,MAAOT,EAAaS,MACpB3B,WAAY,SACZ6B,cAAe,SAOvB,MAAO,CACHC,KAAM,SAACC,GACH,OAAOZ,GAEXa,MAAO,SAACD,GAUJ,IARA,IAAME,EAAatC,IAAWC,OAAO,CACjCsC,MAAO,CACHnC,gBAAiBgC,KAIrBI,EAAa,GAEjB,MAA0BC,OAAOC,QAAQlB,GAAzC,eAA0D,CAAC,IAAD,kBAA/CmB,EAA+C,KAA1CC,EAA0C,KACtDJ,EAAWG,GAAO3C,IAAW6C,QAAQP,EAAWC,MAAOK,GAE3D,OAAOJ,KCMJM,EA5Ea,SAACC,EAAWlD,GAAZ,OAAkCG,IAAWC,OAAO,CAC5E+C,QAAS,CACLpC,YAAaf,EACbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAOuC,EAAUvC,MACjBD,OAAQwC,EAAUxC,OAClBO,aAAc,EACdX,eAAgB,SAChBE,WAAY,OACZ4C,SAAU,OACVvC,SAAU,SACVwC,kBAAmB,MAGvBC,SAAU,CACNvC,YAAa,EACbwC,gBAAiBvD,EACjBgB,YAAa,UACbT,gBAAiB,YACjBI,MAAOuC,EAAUvC,MACjBD,OAAQwC,EAAUxC,OAClBO,aAAc,EACdX,eAAgB,SAChBE,WAAY,UAEhBgD,MAAO,CACHzC,YAAaf,EACbyD,eAAgB,EAChBzC,YAAa,UACbT,gBAAiB,YACjBI,MAAOuC,EAAUvC,MACjBD,OAAQwC,EAAUxC,OAClBO,aAAc,EACdX,eAAgB,SAChBE,WAAY,SACZkD,oBAAqB,EACrBC,qBAAsB,GAE1BC,SAAU,CACN7C,YAAaf,EACb6D,kBAAmB,EACnB7C,YAAa,UACbT,gBAAiB,YACjBI,MAAOuC,EAAUvC,MACjBD,OAAQwC,EAAUxC,OAClBO,aAAc,EACdX,eAAgB,SAChBE,WAAY,SACZsD,uBAAwB,EACxBC,wBAAyB,GAE7BC,cAAe,CACXjD,YAAaf,EAEbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAOuC,EAAUvC,MACjBD,OAAQwC,EAAUxC,OAClBO,aAAc,EACdX,eAAgB,SAChBE,WAAY,SACZsD,uBAAwB,EACxBC,wBAAyB,GAE7BE,WAAY,CACRlD,YAAaf,EACbgB,YAAa,UACbL,MAAOuC,EAAUvC,MACjBD,OAAQwC,EAAUxC,OAClBJ,eAAgB,SAChBE,WAAY,aCxDL0D,EAfW,SAACC,EAAWC,GAAZ,OAA4BjE,IAAWC,OAAO,CACpE+C,QAAS,CACLhC,WAAY,0BACZC,SAAU+C,EACV9C,UAAW,SACXgD,kBAAmB,SACnB/C,MAAO,QACPC,QAAS,EACTC,WAAY4C,MCaLE,EAtBG,CAEdC,yBAA0B,SAASC,EAAWC,GAE1C,IAAMC,EAAqBF,EAAU7D,MAAM6D,EAAU9D,OAGrD,GAF0B+D,EAAS9D,MAAQ8D,EAAS/D,OAE5BgE,EAAoB,CACxC,IAAMC,EAAeH,EAAU9D,OAAO+D,EAAS/D,OAG/C,MADuB,CAACA,OAAQ8D,EAAU9D,OAAQC,MAAOgE,EAAaF,EAAS9D,MAAOgE,aAAcA,GAIpG,IAAMA,EAAeH,EAAU7D,MAAM8D,EAAS9D,MAE9C,MADuB,CAACD,OAAQiE,EAAaF,EAAS/D,OAAQC,MAAO6D,EAAU7D,MAAOgE,aAAcA,KCQjGC,EAtBW,SAACtD,GAAD,OAAWnB,IAAWC,OAAO,CACnD+C,QAAS,CAEL7C,eAAgB,SAChBC,gBAAiBe,EACjBd,WAAY,SACZE,OAAQ,OACRC,MAAO,QAEXkE,WAAY,CAGRvE,eAAgB,aAChBC,gBAAiBe,EACjBd,WAAY,SACZE,OAAQ,OACRC,MAAO,OACP0B,cAAe,UCqFRyC,EAzFI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAGFC,mBAASC,IAAWC,IAAI,WAHtB,WAG1BV,EAH0B,KAGfW,EAHe,KAIjCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUF,IAAWC,IAAI,cAJhC,MAObI,YAAS,CACzBC,8BAGJ,IAXiC,YAYjC,OAAO,kBAAC,IAAD,MAGkBC,EAAQ,KAAjC,IAcMf,EAAW,CAAC/D,OAXc,IAWmBC,MAVpB,MAWzB8E,EAAiBnB,EAAUC,yBAAyBC,EAAWC,GAC/DiB,EAXsB,EAWID,EAAed,aAGzCgB,EAAuBF,EAAed,cAVrB,GAFmB,YAapCiB,EATe,KASUD,EACzBE,EAAkB3B,EAAkByB,EAAsBC,GAI1DE,GAHchG,EAAkB2F,EAAgBC,EAAyBC,EAAsBC,GAGxEH,EAAed,cAfpB,GAHkB,aA0BpCoB,GANkB7B,EAAkB4B,EAhBrB,KAeUA,GAIGrE,EADH,CAACf,OAAQ,OAAQC,MAAO,SAIxBc,EADH,CAACf,OAAQ,OAAQC,MAAO,SAG9CqF,EAAmB/C,EADF,CAACvC,OAAQ,MAAOC,MAAO,OACe+E,GAGvDO,EAA0BhD,EADH,CAACvC,OAAQ,OAAQC,MAAO,OACqB+E,GAEpEQ,EAAoBjD,EADF,CAACvC,OAAQ,MAAOC,MAAO,OACgB+E,GAEzDS,EAAkBvB,EAAkB,SAC1C,OACI,kBAACwB,EAAA,EAAD,CAAM1D,MAAOyD,EAAetB,YACxB,kBAACwB,EAAA,EAAD,CACI3D,MAAOqD,EAAuBvD,MAAM,oBAAoBZ,aACxD0E,QAAS,kBAAMvB,EAAWwB,SAAS,iBAEnC,kBAACH,EAAA,EAAD,CACI1D,MAAOsD,EAAiB7C,SACxB,kBAACqD,EAAA,EAAD,CAAM9D,MAAOmD,EAAgB1C,SAA7B,YAAgD,6BAAhD,aAGR,kBAACkD,EAAA,EAAD,CACI3D,MAAOuD,EAAwB3C,SAC/BgD,QAAS,kBAAMvB,EAAWwB,SAAS,qBAEnC,kBAACH,EAAA,EAAD,CACI1D,MAAOwD,EAAkB/C,SACzB,kBAACqD,EAAA,EAAD,CAAM9D,MAAOmD,EAAgB1C,SAA7B,WAA+C,6BAA/C,kB,koBC7EpB,IAAMsD,EAII,CAACC,IAAK,oGAJVD,EAMG,CAACC,IAAK,8FANTD,EAQK,CAACC,IAAK,kGARXD,EAUM,CAACC,IAAK,+FAVZD,EAYK,CAACC,IAAK,gGAZXD,EAcQ,CAACC,IAAK,+FAEdC,EACK,QADLA,EAEI,OAFJA,EAGG,MAHHA,EAIK,QAJLA,EAKM,SALNA,EAMK,QANLA,EAOQ,WAPRA,EAQI,OAGJC,EACO,GADPA,EAEQ,EAIRC,EAAiB,SAACC,EAAcC,GAElC,OADAC,QAAQC,IAAIF,EAAOG,SACZH,EAAOI,MACV,KAAKR,EAED,OADAK,QAAQC,IAAI,eACL,EAAP,KAAWH,GAAX,IAAyBM,MAAOL,EAAOG,UAC3C,KAAKP,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBO,KAAMN,EAAOG,UAC1C,KAAKP,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBQ,IAAKP,EAAOG,UACzC,KAAKP,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBS,MAAOR,EAAOG,UAC3C,KAAKP,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBU,OAAQT,EAAOG,UAC5C,KAAKP,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBW,MAAOV,EAAOG,UAC3C,KAAKP,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBY,SAAUX,EAAOG,UAC9C,QACI,OAAOJ,IAwPba,EAAe,SAACC,EAAkBC,EAAiB7H,EAAmBC,EAAWC,EAAa4G,GAA/E,OAAgG3G,IAAWC,OAAO,CAEnI0H,iBAAkB,CAEdpH,OAAQkH,EAAmB,IAAKC,EAChClH,MAAO,IAAKkH,EACZ7F,IAAK,GAGT+F,eAAgB,CAGZC,KAAM,IACNrH,MAAO,OACPH,WAAY,UAGhByH,YAAa,CACTlH,YAAaf,EACbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAQ,IAAQkH,EAChBnH,OAAQ,OACRO,aAAc,EACdX,eAAgB,UAEpB4H,gBAAiB,CACb/G,WAAY,0BACZC,SAAUnB,EAAY,EACtBoB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAYtB,EAAc,GAE9BiI,iBAAkB,CAEdH,KAAM,EAENrH,MAAO,OACPL,eAAgB,gBAGpB8H,0BAA2B,CAIvB1H,OAAQ,MACRC,MAAO,OACP0B,cAAe,MACf/B,eAAgB,iBAGpB+H,yBAA0B,CAItB3H,OAAQ,MACRC,MAAO,OACP0B,cAAe,MACf/B,eAAgB,iBAGpBgI,mBAAoB,CAChBvH,YAAaf,EACbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAO,KAAKkH,EACZnH,OAAQ,OACRO,aAAc,EACdX,eAAgB,UAIpBiI,iBAAkB,CACdpH,WAAY,0BACZC,SAAUnB,EACVoB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAYtB,GAKhBsI,gBAAiB,CAEblI,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,eAChBE,WAAY,SACZE,OAAQkH,EACRjH,MAAOkH,EACPjH,WAAY,SACZL,gBAAiB,QACjB8B,cAAe,MAEfxB,SAAU,aAMH4H,EA5VW,SAACC,GAAW,IAAD,EAOOC,qBAAW9B,EAAgB,CACnBO,MAAO,EACPC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,SAAU,IAdzB,WAO1BZ,EAP0B,KAOZ8B,EAPY,KAiB7BvB,GAKYP,EANZM,MAMYN,EALZO,MACAC,EAIYR,EAJZQ,IACAC,EAGYT,EAHZS,MACAC,EAEYV,EAFZU,OACAC,EACYX,EADZW,MACAC,EAAYZ,EAAZY,SAtB6B,EAwBPmB,IAAM7D,SAAS,IAAI8D,IAAMC,OAxBlB,WAwB1BC,EAxB0B,aAyBOH,IAAM7D,UAAS,IAzBtB,WAyB1BiE,EAzB0B,KAyBZC,EAzBY,OA0BKL,IAAM7D,SAAS2B,GA1BpB,WA0B1BwC,EA1B0B,KA0BbC,EA1Ba,KA2BjC,SAAeC,GAAgBC,EAAaC,GAA5C,SAAAC,EAAAC,OAAA,mDACIzC,QAAQC,IAAI,sBACZD,QAAQC,IAAI+B,EAAMU,SAClB1C,QAAQC,IAAIkC,GACZnC,QAAQC,IAAIsC,IACRN,EALR,oBAMYE,IAAgBxC,EAN5B,gBAOiBqC,EAAMU,SACP1C,QAAQ2C,MAAM,qCAR9B,0BAWiBR,IAAgBI,EAXjC,oCAAAC,EAAA,MAYkBR,EAAMY,cAZxB,QAaYV,GAAgB,GAb5B,+BAiBiBF,EAAMU,SACP1C,QAAQ2C,MAAM,wCAlB9B,YAAAH,EAAA,MAoBkBR,EAAMa,eApBxB,2BAAAL,EAAA,MAqBkBR,EAAMc,UAAUR,IArBlC,2BAAAE,EAAA,MAsBkBR,EAAMe,aAtBxB,QAuBYX,EAAeG,GAvB3B,oCA6BWP,EAAMU,QA7BjB,oBA8BgBP,IAAgBI,EA9BhC,oCAAAC,EAAA,MA+BsBR,EAAMe,aA/B5B,QAgCgBb,GAAgB,GAhChC,2CAAAM,EAAA,MAmCsBR,EAAMa,eAnC5B,2BAAAL,EAAA,MAoCsBR,EAAMc,UAAUR,IApCtC,2BAAAE,EAAA,MAqCsBR,EAAMe,aArC5B,QAsCgBb,GAAgB,GAChBE,EAAeG,GAvC/B,6DAAAC,EAAA,MA4CkBR,EAAMc,UAAUR,IA5ClC,2BAAAE,EAAA,MA6CkBR,EAAMe,aA7CxB,QA8CYb,GAAgB,GAChBE,EAAeG,GACfP,EAAMgB,wBAA2B,SAAOC,GAAP,SAAAT,EAAAC,OAAA,oDACI,IAAzBQ,EAAOC,cADc,uBAErBhB,GAAgB,GAChBE,EAAezC,GAEjBK,QAAQC,IAAI,yBALW,WAAAuC,EAAA,MAMjBR,EAAMa,eANW,6DAhD7C,6DA+DAhB,IAAMsB,WAAU,WACd,OAAOnB,EACH,WACEhC,QAAQC,IAAI,mBACZ+B,EAAMa,oBACRO,IACH,CAACpB,IAhG6B,OAoGFhE,mBAASC,IAAWC,IAAI,WApGtB,aAoG1BV,GApG0B,MAoGfW,GApGe,MAqGjCC,OAAOC,iBAAiB,UAAU,kBAAMF,GAAUF,IAAWC,IAAI,cACjE,IAGImF,GAAQ,EACRpK,GAAY,EAEZC,GAAc,EACd0H,GAAmB,EACnBC,GAAmB,EACnB7H,GAAoB,EARC,KADC,IAYDwE,GAAU7D,MAAM6D,GAAU9D,QAK/CR,GAZe,MAWfD,GAAY,IADZoK,GAAQ7F,GAAU9D,OAfI,MAkBtBkH,GAAmBpD,GAAU9D,OAC7BmH,GAlBqB,KAkBFwC,GACnBrK,GAAoB,EAAEqK,KAKtBnK,GApBe,MAmBfD,GAAY,IADZoK,GAAQ7F,GAAU7D,MAtBG,OAyBrBiH,GA1BsB,IA0BHyC,GACnBxC,GAAmBrD,GAAU7D,MAC7BX,GAAoB,EAAEqK,IAlIO,OAuIb/E,YAAS,CACzBC,8BAGF,IA3I+B,aA4I7B,OAAO,kBAAC,IAAD,MAGT,IAAM+E,GAAS3C,EAAaC,GAAkBC,GAAiB7H,GAAmBC,GAAWC,GAAa4G,GAE5G,OAAO,kBAACV,EAAA,EAAD,CAAM1D,MAAO4H,GAAO9B,iBAEvB,kBAAC+B,EAAA,EAAD,CAAiB7H,MAAO4H,GAAO7J,WAAY+J,OAAQhF,EAAQ,MACvD,kBAACY,EAAA,EAAD,CAAM1D,MAAO4H,GAAOxC,kBAChB,kBAAC1B,EAAA,EAAD,CAAM1D,MAAO4H,GAAOvC,gBAChB,kBAAC3B,EAAA,EAAD,CAAM1D,MAAO4H,GAAOrC,aAChB,kBAACzB,EAAA,EAAD,CAAM9D,MAAO4H,GAAOpC,iBAApB,YAA+C,6BAA/C,YAIR,kBAAC9B,EAAA,EAAD,CAAM1D,MAAO4H,GAAOnC,kBAEhB,kBAAC/B,EAAA,EAAD,CAAM1D,MAAO4H,GAAOlC,2BAChB,kBAAC/B,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAE5BhC,QAAS,WAAOoC,EAAM3D,WAAWwB,SAAS,WAAW,CAACkE,MAAO9D,KAE7D+D,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAYO,QAASN,KAChE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAYO,QAASN,MAGhE,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,UAGJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAC5BhC,QAAS,kBAAM+C,GAAgB5C,EAAcE,IAC7CpF,QAASiG,EACTkD,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAaO,QAASN,KACjE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAaO,QAASN,MAGjE,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,SAA6C,6BAA7C,SAIR,kBAACnC,EAAA,EAAD,CAAM1D,MAAO4H,GAAOjC,0BAChB,kBAAChC,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAC5BhC,QAAS,kBAAM+C,GAAgB5C,EAAYE,IAC3CpF,QAAS8F,EACTqD,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAWO,QAASN,KAC/D+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAWO,QAASN,MAG/D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,SAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAC5BhC,QAAS,kBAAM+C,GAAgB5C,EAAaE,IAC5CpF,QAASgG,EACTmD,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAYO,QAASN,KAChE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAYO,QAASN,MAGhE,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,WAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAC5BhC,QAAS,kBAAM+C,GAAgB5C,EAAaE,IAC5CpF,QAASkG,EACTiD,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAYO,QAASN,KAChE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAYO,QAASN,MAGhE,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,YAIR,kBAACnC,EAAA,EAAD,CAAM1D,MAAO4H,GAAOlC,2BAChB,kBAAC/B,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAC5BhC,QAAS,kBAAM+C,GAAgB5C,EAAWE,IAC1CpF,QAAS+F,EACToD,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAUO,QAASN,KAC9D+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAUO,QAASN,MAG9D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,WAA+C,6BAA/C,WAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,GAAOhC,mBAC5BhC,QAAS,kBAAM+C,GAAgB5C,EAAgBE,IAC/CpF,QAASmG,EACTgD,aAAc,kBAAM9B,EAAgB,CAACzB,KAAMR,EAAeO,QAASN,KACnE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAMR,EAAeO,QAASN,MAGnE,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,GAAO/B,kBAApB,WAA+C,6BAAS,kBAAC,IAAD,CAAcxF,MAAO,EAAG6H,YAAa,OAAQC,OAAQ,c,ikBC9RzI,IAAMpE,GAEK,CAACC,IAAK,gGAFXD,GAIG,CAACC,IAAK,wFAJTD,GAMM,CAACC,IAAK,2FANZD,GAQI,CAACC,IAAK,8FARVD,GAUM,CAACC,IAAK,8FAVZD,GAYK,CAACC,IAAK,iGAZXD,GAcO,CAACC,IAAK,8FAEboE,GACK,QADLA,GAEG,MAFHA,GAGM,SAHNA,GAII,OAJJA,GAKM,SALNA,GAMK,QANLA,GAOO,UAPPA,GAQI,OAGJlE,GACO,GADPA,GAEQ,EAIRC,GAAiB,SAACC,EAAcC,GAClC,OAAOA,EAAOI,MACV,KAAK2D,GACD,OAAO,OAAIhE,GAAX,IAAyBiE,MAAOhE,EAAOG,UAC3C,KAAK4D,GACD,OAAO,OAAIhE,GAAX,IAAyBkE,IAAKjE,EAAOG,UACzC,KAAK4D,GACD,OAAO,OAAIhE,GAAX,IAAyBmE,OAAQlE,EAAOG,UAC5C,KAAK4D,GACD,OAAO,OAAIhE,GAAX,IAAyBoE,KAAMnE,EAAOG,UAC1C,KAAK4D,GACD,OAAO,OAAIhE,GAAX,IAAyBqE,OAAQpE,EAAOG,UAC5C,KAAK4D,GACD,OAAO,OAAIhE,GAAX,IAAyBsE,MAAOrE,EAAOG,UAC3C,KAAK4D,GACD,OAAO,OAAIhE,GAAX,IAAyBuE,QAAStE,EAAOG,UAC7C,QACI,OAAOJ,IAsOba,GAAe,SAACC,EAAkBC,EAAiB7H,EAAmBC,EAAWC,GAAlE,OAAkFC,IAAWC,OAAO,CAErH0H,iBAAkB,CAEdpH,OAAQkH,EAAmB,IAAKC,EAChClH,MAAO,IAAKkH,EACZ7F,IAAK,GAGT+F,eAAgB,CAGZC,KAAM,IACNrH,MAAO,OACPH,WAAY,UAGhByH,YAAa,CACTlH,YAAaf,EACbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAQ,KAASkH,EACjBnH,OAAQ,OACRO,aAAc,EACdX,eAAgB,UAEpB4H,gBAAiB,CACb/G,WAAY,0BACZC,SAAUnB,EAAY,EACtBoB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAYtB,EAAc,GAE9BiI,iBAAkB,CAEdH,KAAM,EAENrH,MAAO,OACPL,eAAgB,gBAGpB8H,0BAA2B,CAIvB1H,OAAQ,MACRC,MAAO,OACP0B,cAAe,MACf/B,eAAgB,iBAGpB+H,yBAA0B,CAItB3H,OAAQ,MACRC,MAAO,OACP0B,cAAe,MACf/B,eAAgB,iBAGpBgI,mBAAoB,CAChBvH,YAAaf,EACbgB,YAAa,UACbT,gBAAiB,YACjBI,MAAO,KAAKkH,EACZnH,OAAQ,OACRO,aAAc,EACdX,eAAgB,UAIpBiI,iBAAkB,CACdpH,WAAY,0BACZC,SAAUnB,EACVoB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAYtB,GAKhBsI,gBAAiB,CAEblI,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,eAChBE,WAAY,SACZE,OAAQkH,EACRjH,MAAOkH,EACPjH,WAAY,SACZL,gBAAiB,QACjB8B,cAAe,MAEfxB,SAAU,aAMHyK,GAzUe,SAAC5C,GAAW,IAAD,EAIXG,IAAM7D,SAAS,IAAI8D,IAAMC,OAJd,WAI9BC,EAJ8B,aAKGH,IAAM7D,UAAS,IALlB,WAK9BiE,EAL8B,KAKhBC,EALgB,OAMCL,IAAM7D,SAAS8F,IANhB,WAM9B3B,EAN8B,KAMjBC,EANiB,OASGT,qBAAW9B,GAAgB,CAC/DkE,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,QAAS,IAhBwB,WAS9BvE,EAT8B,KAShB8B,EATgB,KAkBjCmC,EAMWjE,EANXiE,MACAC,EAKWlE,EALXkE,IACAC,EAIWnE,EAJXmE,OACAC,EAGWpE,EAHXoE,KACAC,EAEWrE,EAFXqE,OACAC,EACWtE,EADXsE,MACAC,EAAWvE,EAAXuE,QAIJ,SAAehC,EAAgBC,EAAaC,GAA5C,SAAAC,EAAAC,OAAA,mDACIzC,QAAQC,IAAI,sBACZD,QAAQC,IAAI+B,EAAMU,SAClB1C,QAAQC,IAAIkC,GACZnC,QAAQC,IAAIsC,IACRN,EALR,oBAMYE,IAAgB2B,GAN5B,gBAOiB9B,EAAMU,SACP1C,QAAQ2C,MAAM,qCAR9B,0BAWiBR,IAAgBI,EAXjC,oCAAAC,EAAA,MAYkBR,EAAMY,cAZxB,QAaYV,GAAgB,GAb5B,+BAiBiBF,EAAMU,SACP1C,QAAQ2C,MAAM,wCAlB9B,YAAAH,EAAA,MAoBkBR,EAAMa,eApBxB,2BAAAL,EAAA,MAqBkBR,EAAMc,UAAUR,IArBlC,2BAAAE,EAAA,MAsBkBR,EAAMe,aAtBxB,QAuBYX,EAAeG,GAvB3B,oCA6BWP,EAAMU,QA7BjB,oBA8BgBP,IAAgBI,EA9BhC,oCAAAC,EAAA,MA+BsBR,EAAMe,aA/B5B,QAgCgBb,GAAgB,GAhChC,2CAAAM,EAAA,MAmCsBR,EAAMa,eAnC5B,2BAAAL,EAAA,MAoCsBR,EAAMc,UAAUR,IApCtC,2BAAAE,EAAA,MAqCsBR,EAAMe,aArC5B,QAsCgBb,GAAgB,GAChBE,EAAeG,GAvC/B,6DAAAC,EAAA,MA4CkBR,EAAMc,UAAUR,IA5ClC,2BAAAE,EAAA,MA6CkBR,EAAMe,aA7CxB,QA8CYb,GAAgB,GAChBE,EAAeG,GACfP,EAAMgB,wBAA2B,SAAOC,GAAP,SAAAT,EAAAC,OAAA,oDACI,IAAzBQ,EAAOC,cADc,uBAGvBhB,GAAgB,GAChBE,EAAe0B,IACf9D,QAAQC,IAAI,yBALW,WAAAuC,EAAA,MAMjBR,EAAMa,eANW,6DAhD7C,6DA5BqC,MA0FN7E,mBAASC,IAAWC,IAAI,WA1FlB,WA0F9BV,EA1F8B,KA0FnBW,EA1FmB,KA2FrCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUF,IAAWC,IAAI,cACjE,IAGImF,EAAQ,EACRpK,EAAY,EAEZC,EAAc,EACd0H,EAAmB,EACnBC,EAAmB,EACnB7H,EAAoB,EARC,KADC,IAYDwE,EAAU7D,MAAM6D,EAAU9D,QAK/CR,EAZe,MAWfD,EAAY,IADZoK,EAAQ7F,EAAU9D,OAfI,MAkBtBkH,EAAmBpD,EAAU9D,OAC7BmH,EAlBqB,KAkBFwC,EACnBrK,EAAoB,EAAEqK,IAKtBnK,EApBe,MAmBfD,EAAY,IADZoK,EAAQ7F,EAAU7D,MAtBG,OAyBrBiH,EA1BsB,IA0BHyC,EACnBxC,EAAmBrD,EAAU7D,MAC7BX,EAAoB,EAAEqK,GAxHW,MA6HjB/E,YAAS,CACzBC,8BAGF,IAjImC,YAkIjC,OAAO,kBAAC,IAAD,MAGT,IAAM+E,EAAS3C,GAAaC,EAAkBC,EAAiB7H,EAAmBC,EAAWC,GAE/F,OAAO,kBAACkG,EAAA,EAAD,CAAM1D,MAAO4H,EAAO9B,iBAEvB,kBAAC+B,EAAA,EAAD,CAAiB7H,MAAO4H,EAAO7J,WAAY+J,OAAQhF,EAAQ,MACvD,kBAACY,EAAA,EAAD,CAAM1D,MAAO4H,EAAOxC,kBAChB,kBAAC1B,EAAA,EAAD,CAAM1D,MAAO4H,EAAOvC,gBAChB,kBAAC3B,EAAA,EAAD,CAAM1D,MAAO4H,EAAOrC,aAChB,kBAACzB,EAAA,EAAD,CAAM9D,MAAO4H,EAAOpC,iBAApB,WAA8C,6BAA9C,iBAIR,kBAAC9B,EAAA,EAAD,CAAM1D,MAAO4H,EAAOnC,kBAEhB,kBAAC/B,EAAA,EAAD,CAAM1D,MAAO4H,EAAOlC,2BAChB,kBAAC/B,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAaqE,KAC5CvJ,QAASwJ,EACTL,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAa5D,QAASN,MACjE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAa5D,QAASN,OAE7D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,SAA6C,6BAA7C,UAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAcqE,KAC7CvJ,QAAS4J,EACTT,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAc5D,QAASN,MAClE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAc5D,QAASN,OAE9D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,UAA8C,6BAA9C,gBAIR,kBAACnC,EAAA,EAAD,CAAM1D,MAAO4H,EAAOjC,0BAChB,kBAAChC,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAWqE,KAC1CvJ,QAASyJ,EACTN,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAW5D,QAASN,MAC/D+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAW5D,QAASN,OAE3D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,YAAgD,6BAAhD,QAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAYqE,KAC3CvJ,QAAS2J,EACTR,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAY5D,QAASN,MAChE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAY5D,QAASN,OAE5D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,SAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAaqE,KAC5CvJ,QAAS6J,EACTV,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAa5D,QAASN,MACjE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAa5D,QAASN,OAE7D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,OAA2C,6BAA3C,YAIR,kBAACnC,EAAA,EAAD,CAAM1D,MAAO4H,EAAOlC,2BAChB,kBAAC/B,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAcqE,KAC7CvJ,QAAS0J,EACTP,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAc5D,QAASN,MAClE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAc5D,QAASN,OAE9D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,MAA0C,6BAA1C,WAEJ,kBAAClC,EAAA,EAAD,CAAkB3D,MAAO4H,EAAOhC,mBAChChC,QAAS,kBAAM+C,EAAgB5C,GAAeqE,KAC9CvJ,QAAS8J,EACTX,aAAc,kBAAM9B,EAAgB,CAACzB,KAAM2D,GAAe5D,QAASN,MACnE+D,aAAc,kBAAM/B,EAAgB,CAACzB,KAAM2D,GAAe5D,QAASN,OAE/D,kBAACJ,EAAA,EAAD,CAAM9D,MAAO4H,EAAO/B,kBAApB,SAA6C,6BAA7C,kB,6BC1QbgD,GARQ,CACnBC,SAAU,QACVpE,MAAO,CACHqE,KAAM,cACNC,IAAK,K,UCYPC,GAAW,CACb,CAAEF,KAAM,iBAAkBG,OAAQ,OAAQnF,MAAO,CAACC,IAAK,+FACvD,CAAE+E,KAAM,cAAeG,OAAQ,iCAAkCnF,MAAO,CAACC,IAAK,2FAC9E,CAAE+E,KAAM,gBAAiBG,OAAQ,kBAAmBnF,MAAO,CAACC,IAAK,8FACjE,CAAE+E,KAAM,YAAaG,OAAQ,gBAAiBnF,MAAO,CAACC,IAAK,0FAC3D,CAAE+E,KAAM,qBAAsBG,OAAQ,QAASnF,MAAO,CAACC,IAAK,iGAC5D,CAAE+E,KAAM,UAAWG,OAAQ,gBAAiBnF,MAAO,CAACC,IAAK,yFACzD,CAAE+E,KAAM,QAASG,OAAQ,WAAYnF,MAAO,CAAEC,IAAK,6FACnD,CAAE+E,KAAM,YAAaG,OAAQ,gBAAiBnF,MAAO,CAACC,IAAK,2FAC3D,CAAE+E,KAAM,aAAcG,OAAQ,MAAOnF,MAAO,CAACC,IAAK,6FAGhDmF,GACI,OADJA,GAEK,cAkVIC,GA5UQ,SAAC,GAAkB,IAAjB/G,EAAgB,EAAhBA,WAGfgH,EAA0B,GAChCJ,GAASK,KAAI,SAACC,GAAD,OAAaF,EAAwBG,KAAK,CAACpJ,IAAKmJ,EAAQR,KAAM1I,OAAO,OAJ7C,MAOWiC,mBAAS+G,GAPpB,WAO9BI,EAP8B,KAOZC,EAPY,OAYYpH,mBAAS6G,IAZrB,WAY9BQ,EAZ8B,KAYZC,EAZY,OAcXzD,IAAM7D,SAAS,IAAI8D,IAAMC,OAdd,WAc9BC,EAd8B,aAeGH,IAAM7D,UAAS,IAflB,WAe9BiE,EAf8B,KAehBC,EAfgB,OAgBCL,IAAM7D,SAAS,IAhBhB,WAgB9BmE,EAhB8B,KAgBjBC,EAhBiB,OAmBNpE,mBAASC,IAAWC,IAAI,WAnBlB,WAmB9BV,EAnB8B,KAmBnBW,EAnBmB,KAoBrCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUF,IAAWC,IAAI,cApB5B,MAuBjBI,YAAS,CACzBC,8BAGJ,IA3BqC,YA4BrC,OAAO,kBAAC,IAAD,MA+BP,SAAegH,IAAf,SAAA/C,EAAAC,OAAA,gDACIzC,QAAQC,IAAIkC,GACQ,KAAhBA,EAIAE,EAAgBsC,GAAS,GAAGlF,MAAOkF,GAAS,GAAGF,MAG/CpC,EAAgB,KAAMF,GAT9B,4DAgBA,SAAeE,EAAgBC,EAAaC,GAA5C,eAAAC,EAAAC,OAAA,mDACIzC,QAAQC,IAAIkC,GACZnC,QAAQC,IAAIsC,IACRN,EAHR,oBAI4B,KAAhBE,EAJZ,gBAKiBH,EAAMU,SACP1C,QAAQ2C,MAAM,qCAN9B,0BASiBR,IAAgBI,EATjC,wBAUY+C,EAAqBT,IAVjC,YAAArC,EAAA,MAWkBR,EAAMY,cAXxB,QAYYV,GAAgB,GAZ5B,+BAgBiBF,EAAMU,SACP1C,QAAQ2C,MAAM,yCAId6C,EAASL,GAENhD,IAAe,EACtBqD,EAAOjD,IAAQ,EACf6C,EAAoBI,GAzBhC,YAAAhD,EAAA,MA2BkBR,EAAMa,eA3BxB,2BAAAL,EAAA,MA4BkBR,EAAMc,UAAUR,IA5BlC,eA6BYgD,EAAqBT,IA7BjC,YAAArC,EAAA,MA8BkBR,EAAMe,aA9BxB,QA+BYX,EAAeG,GA/B3B,oCAqCWP,EAAMU,QArCjB,oBAsCgBP,IAAgBI,EAtChC,wBAuCgB+C,EAAqBT,IAvCrC,YAAArC,EAAA,MAwCsBR,EAAMe,aAxC5B,QAyCgBb,GAAgB,GAzChC,+BA6CoBsD,EAASL,GACNhD,IAAe,EACtBqD,EAAOjD,IAAQ,EACf6C,EAAoBI,GAhDpC,YAAAhD,EAAA,MAkDsBR,EAAMa,eAlD5B,2BAAAL,EAAA,MAmDsBR,EAAMc,UAAUR,IAnDtC,eAoDgBgD,EAAqBT,IApDrC,YAAArC,EAAA,MAqDsBR,EAAMe,aArD5B,QAsDgBb,GAAgB,GAChBE,EAAeG,GAvD/B,iDA6DgBiD,EAASL,GACN5C,IAAQ,EACf6C,EAAoBI,GA/DhC,YAAAhD,EAAA,MAiEkBR,EAAMc,UAAUR,IAjElC,eAkEYgD,EAAqBT,IAlEjC,YAAArC,EAAA,MAmEkBR,EAAMe,aAnExB,QAoEYb,GAAgB,GAChBE,EAAeG,GACfP,EAAMgB,wBAA2B,SAAOC,GAAP,mBAAAT,EAAAC,OAAA,oDACI,IAAzBQ,EAAOC,cADc,wBAErBhB,GAAgB,GAGpBlC,QAAQC,IAAI,yBAEZD,QAAQC,IAAI,qBAPa,WAAAuC,EAAA,MAQnBR,EAAMa,eARa,OAUnB4C,EAAed,GAASe,UAAUnD,GAClCoD,EAAiBhB,GAASiB,SAEhCvD,EAAgBsC,GADVkB,GAAaJ,EAAe,GAAKE,GACHlG,MAAOkF,GAASkB,GAAWpB,MAbtC,8DAtE7C,6DA+FA,IAUMhH,EAAW,CAAC/D,OAVc,IAUmBC,MATpB,MAUzB8E,EAAiBnB,EAAUC,yBAAyBC,EAAWC,GAC/DiB,EAVsB,EAUID,EAAed,aAQzCgB,GAJYZ,EAAW+H,SAASvB,GAAeC,SAAU,MAIlC/F,EAAed,cAdpB,KAHkB,aAkBpCiB,EAbe,KAaUD,EACzBE,EAAkB3B,EAAkByB,EAAsBC,GAE1DmH,EAAsBtH,EAAed,cAnBpB,GAFmB,YAuBpCqI,GAAkB9I,EAAkB6I,EAlBrB,KAiBSpH,GAOxBsH,GAAcnN,EAAkB2F,EAAgBC,EAAyBC,EAAsBC,GAG/FsH,GAAoBzL,EADP,CAACf,OAAQ,cAAeC,MAAO,MAAOqB,IAAK,QAIxDmL,GAAkB1L,EADP,CAACf,OAAO,MAAOC,MAAO,SAIjCyM,GAAoBnK,EADH,CAACvC,OAAQ,OAAQC,MAAM,OACgB+E,GAGxD2H,GAAiBpK,EADP,CAACvC,OAAQ,MAAOC,MAAO,QACa+E,GAO9C4H,IAHqB7L,EADP,CAACf,OAAQ,OAAQC,MAAO,SAIjBc,EADP,CAACf,OAAQ,MAAOC,MAAO,UAIrC4M,GAAuBtK,EADH,CAACvC,OAAQ,OAAQC,MAAM,QACmB+E,GAEpE,OAAO,kBAACU,EAAA,EAAD,CAAM1D,MAAOuK,GAAY5M,WAC5B,kBAACkK,EAAA,EAAD,CAAiB7H,MAAOuK,GAAYxM,WAAY+J,OAAQhF,EAAQ,MAE5D,kBAACY,EAAA,EAAD,CAAM1D,MAAOwK,GAAkB5K,OAAOV,cAClC,kBAACwE,EAAA,EAAD,CAAM1D,MAAOyK,GAAgB7K,OAAOV,cAChC,kBAACwE,EAAA,EAAD,CAAM1D,MAAO0K,GAAkBxJ,UAC3B,kBAAC4C,EAAA,EAAD,CAAM9D,MAAOmD,EAAgB1C,SAA7B,WAGR,kBAACiD,EAAA,EAAD,CAAM1D,MAAO2K,GAAerJ,eAExB,kBAAC,KAAD,CAEIwJ,UAAQ,EACRC,gCAAgC,EAEhCC,8BAA8B,EAC9BC,aAAc,SAAClH,GAAD,OAAWA,EAAMgF,MAC/BmC,KAAMjC,GACNkC,WAAY,YAAe,IAAZC,EAAW,EAAXA,KAEX,OACI,kBAAC1H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAS,WAAO+C,EAAgByE,EAAKrH,MAAOqH,EAAKrC,OAEjD/I,MAAO,CAACnB,SACJyF,QAAQC,IAAI,mBACRkF,EAAiB2B,EAAKrC,MACf,GAGA,KAKf,kBAACrF,EAAA,EAAD,KACI,kBAAC2H,GAAA,EAAD,CAEIlJ,YAAU,EACV4I,gCAAgC,GAGhC,kBAACrH,EAAA,EAAD,KACA,kBAACI,EAAA,EAAD,CAAM9D,MAAOsK,GAAgB7J,SAA7B,IAAwC2K,EAAKrC,KAA7C,MAAsDqC,EAAKlC,UAI/D,kBAACmC,GAAA,EAAD,KACI,kBAAC3H,EAAA,EAAD,KAAM,kBAACI,EAAA,EAAD,CAAM9D,MAAOmD,EAAgB1C,SAA7B,2BAkBtC,kBAACiD,EAAA,EAAD,CAAM1D,MAAO4K,GAAmBhL,OAAOV,cACnC,kBAACwE,EAAA,EAAD,CAAM1D,MAAO6K,GAAqB/J,OAC9B,kBAACgD,EAAA,EAAD,KACQ,kBAACH,EAAA,EAAD,CACIC,QAAS,WACLiG,MAGJ,kBAACyB,GAAA,EAAD,CACIvC,KAAMY,EACN4B,KAAMtI,EACNrE,MAAM,WATtB,MAY8B,kBAAC+E,EAAA,EAAD,CAClBC,QAAS,YAnRzC,uBAAAkD,EAAAC,OAAA,gDACI6C,EAAqBT,IACD,KAAhB1C,EACAoD,KAMAvF,QAAQC,IAAIkC,GACNsD,EAAed,GAASe,WAAU,SAACT,GAAD,OAAaA,EAAQR,OAAStC,KACtEnC,QAAQC,IAAIwF,GACNE,EAAiBhB,GAASiB,OAChC5F,QAAQC,IAAI0F,GACNE,GAAaJ,EAAe,GAAKE,EACvC3F,QAAQC,IAAI4F,GAEZxD,EAAgBsC,GAASkB,GAAWpG,MAAOkF,GAASkB,GAAWpB,OAjBvE,4DAqRoCyC,KAGJ,kBAACC,GAAA,EAAD,CACI1C,KAAK,2BACLwC,KAAMtI,EACNrE,MAAM,kBC9O/BwD,GArGI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAGFC,mBAASC,IAAWC,IAAI,WAHtB,WAG1BV,EAH0B,KAGfW,EAHe,KAIjCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUF,IAAWC,IAAI,cAJhC,MAObI,YAAS,CACzBC,8BAGJ,IAXiC,YAYjC,OAAO,kBAAC,IAAD,MAGP,IAAM6I,EAAmB5I,EAAQ,KAc3Bf,EAAW,CAAC/D,OAXc,IAWmBC,MAVpB,MAWzB8E,EAAiBnB,EAAUC,yBAAyBC,EAAWC,GAC/DiB,EAXsB,EAWID,EAAed,aAKzCuI,EAAoBzL,EADP,CAACf,OAAQ,QAASC,MAAO,MAAOqB,IAAK,QAIlDqM,EAAqB5M,EADH,CAACf,OAAQ,MAAOC,MAAO,SAIzC2N,EAAuB7M,EADH,CAACf,OAAQ,KAAMC,MAAO,QAI1CyM,EAAoBnK,EADH,CAACvC,OAAQ,MAAOC,MAAO,QACgB+E,GAExD6I,EAAoBtL,EADH,CAACvC,OAAQ,MAAOC,MAAO,QACgB+E,GAExD8I,EAAsBvL,EADH,CAACvC,OAAQ,OAAQC,MAAO,QACiB+E,GAE5DC,EAAuBF,EAAed,cA3BrB,GAFmB,YA8BpCiB,EA1Be,KA0BUD,EACzBE,EAAkB3B,EAAkByB,EAAsBC,GAC1DqH,EAAcnN,EAAkB2F,EAAgBC,EAAyBC,EAAsBC,GAG/FE,EAAuBL,EAAed,cAhCpB,GAHkB,YAqCpC8J,EAAkBvK,EAAkB4B,EAjCrB,KAgCUA,GAK/B,OACI,kBAACM,EAAA,EAAD,CAAM1D,MAAOuK,EAAY5M,WACrB,kBAACgG,EAAA,EAAD,CAAkBC,QAAS,WAAOvB,EAAWwB,SAAS,uBAClD,kBAACgE,EAAA,EAAD,CAAiB7H,MAAOuK,EAAYxM,WAAY+J,OAAQ4D,GACpD,kBAAChI,EAAA,EAAD,CAAM1D,MAAOwK,EAAkB5K,OAAOP,mBAElC,kBAACqE,EAAA,EAAD,CAAM1D,MAAO2L,EAAmB/L,OAAOV,cACnC,kBAACwE,EAAA,EAAD,CACI1D,MAAO0K,EAAkBpJ,eACzB,kBAACwC,EAAA,EAAD,CAAM9D,MAAOmD,EAAgB1C,SAA7B,kCAEJ,kBAACiD,EAAA,EAAD,CACI1D,MAAO6L,EAAkB/K,OACzB,kBAACgD,EAAA,EAAD,CAAM9D,MAAO+L,EAAgBtL,SAA7B,8BAIR,kBAACiD,EAAA,EAAD,CAAM1D,MAAO4L,EAAqBhM,OAAOV,cACrC,kBAACwE,EAAA,EAAD,CACI1D,MAAO8L,EAAoBrL,SAC3B,kBAACqD,EAAA,EAAD,CAAM9D,MAAO+L,EAAgBtL,SAA7B,kBClF1BuL,GAAYC,YAEhB,CACEzD,KAAMpG,GACN8J,kBAAmBC,EACnBC,YAAarG,EACbsG,gBAAiBzD,GACjB0D,SAAUlD,IAEZ,CACEmD,iBAAkB,OAClBC,WAAY,OACZC,yBAA0B,CACxBC,MAAO,MACPC,UAAW,CAAE9O,gBAAiB,YAarB+O,IARAnP,IAAWC,OAAO,CAC/BmP,UAAW,CACTvH,KAAM,EACNzH,gBAAiB,QACjBC,WAAY,SACZF,eAAgB,YAGLgP,6BAAmBZ,KCpClCc,YAAsBC,M","file":"static/js/app.f849c4a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundBanner.e17a0abf.gif\";","\nimport { StyleSheet } from \"react-native\";\n\nconst main_styleFactory = (backgroundDim, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT) => StyleSheet.create({\n\n    viewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: backgroundDim.height,\n        width: backgroundDim.width,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden'\n    },\n    buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '50%',\n        height: '25%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    }\n})\n\nexport default main_styleFactory;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\n\n\n\nconst container_styleFactory = (containerDim) => {\n    \n    const baseStyleSheet = StyleSheet.create({\n        defaultStyle: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n\n        apartStyle_default: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            justifyContent: \"space-between\",\n            alignItems: 'center'\n        },\n\n        apartStyle_nudged: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            justifyContent: \"space-between\",\n            top: containerDim.top,\n            bottom: containerDim.bottom,\n            left: containerDim.left,\n            right: containerDim.right,\n            alignItems: 'center'\n        },\n        horizontalItemsStyle: {\n            width: containerDim.width,\n            height: containerDim.height,\n            position: \"relative\",\n            top: containerDim.top,\n            bottom: containerDim.bottom,\n            left: containerDim.left,\n            right: containerDim.right,\n            alignItems: 'center',\n            flexDirection: 'row'\n        }\n\n    })\n    \n\n    \n    return {\n        main: (debug_color) => {\n            return baseStyleSheet;\n        },\n        debug: (debug_color) => {\n\n            const colorStyle = StyleSheet.create({\n                style: {\n                    backgroundColor: debug_color\n                }\n            })\n\n            var debugStyle = {};\n            // const\n            for (const[key, value] of Object.entries(baseStyleSheet)) {\n                debugStyle[key] = StyleSheet.compose(colorStyle.style, value);\n            }\n            return debugStyle;\n        }\n    }\n}\n\nexport default container_styleFactory;","import {StyleSheet} from 'react-native'\n\nconst banner_styleFactory = (bannerDim, buttonBorderWidth) => StyleSheet.create({\n    default: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'left',\n        flexWrap: 'wrap',\n        overflow: 'hidden',\n        paddingHorizontal: '3%'\n        \n    },\n    justLeft: {\n        borderWidth: 0,\n        borderLeftWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 0,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    noTop: {\n        borderWidth: buttonBorderWidth,\n        borderTopWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    noBottom: {\n        borderWidth: buttonBorderWidth,\n        borderBottomWidth: 0,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    bottomCorners: {\n        borderWidth: buttonBorderWidth,\n        // borderTopWidth: 0\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        borderRadius: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n    },\n    justBorder: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        width: bannerDim.width,\n        height: bannerDim.height,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n\n});\n\nexport default banner_styleFactory;","import {StyleSheet} from 'react-native'\n\nconst text_styleFactory = (font_size, line_height) => StyleSheet.create({\n    default: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: font_size,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: line_height,\n        // alignSelf: 'flex-start'\n\n    }\n\n});\n\nexport default text_styleFactory;","\nconst utilities = {\n\n    calculate_scaledImageDim: function(windowDim, imageDim) {\n\n        const window_aspectRatio = windowDim.width/windowDim.height;\n        const image_aspectRatio = imageDim.width / imageDim.height;\n    \n        if (image_aspectRatio < window_aspectRatio) {\n            const scalingRatio = windowDim.height/imageDim.height;\n    \n            const scaledImageDim = {height: windowDim.height, width: scalingRatio*imageDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n        else {\n            const scalingRatio = windowDim.width/imageDim.width;\n            const scaledImageDim = {height: scalingRatio*imageDim.height, width: windowDim.width, scalingRatio: scalingRatio }\n            return scaledImageDim;\n        }\n    }\n}\n\n\nexport default utilities;","import {StyleSheet} from 'react-native'\n\nconst view_styleFactory = (color) => StyleSheet.create({\n    default: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: color,\n        alignItems: 'center',\n        height: '100%',\n        width: '100%'\n    },\n    horizontal: {\n        // flexDirection: \"column\",\n        // justifyContent: 'center',\n        justifyContent: 'flex-start',\n        backgroundColor: color,\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        flexDirection: 'row'\n    }\n\n});\n\nexport default view_styleFactory;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p';\nimport React, {useState} from 'react';\nimport main_styleFactory from '../../styles/main_styleFactory';\nimport container_styleFactory from '../../styles/container_styleFactory';\nimport banner_styleFactory from '../../styles/banner_styleFactory';\nimport text_styleFactory from '../../styles/text_styleFactory';\nimport utilities from '../utilities';\nimport view_styleFactory from '../../styles/view_styleFactory';\n\n\n\nconst HomeScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const BACKGROUND_IMAGE = require('../../assets/backgroundBanner.gif');\n\n    // these constants depend on the image backgroun I use\n    const BACKGROUND_IMAGE_HEIGHT = 867;\n    const BACKGROUND_IMAGE_WIDTH = 1542;\n    const BUTTON_BORDER_WIDTH = 7;\n\n    const GOOGLE_DOCS_TEXT_CONVERSION_RATIO = 2.14285714;\n\n    const TILE_FONT_SIZE = 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const CLICK_FONT_SIZE = 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const LINE_SPACING = 1.15;\n\n    // calculation for the scaling of the background image\n    const imageDim = {height: BACKGROUND_IMAGE_HEIGHT, width: BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * BUTTON_BORDER_WIDTH;\n\n\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * LINE_SPACING;\n    const titleText_style = text_styleFactory(scaled_titleFontSize, scaled_titleLineHeight);\n    const main_styles = main_styleFactory(scaledImageDim, scaledButtonBorderWidth, scaled_titleFontSize, scaled_titleLineHeight);\n\n\n    const scaled_clickFontSize = scaledImageDim.scalingRatio * CLICK_FONT_SIZE;\n    const scaled_clickLineHeight = scaled_clickFontSize * LINE_SPACING;\n    const clickText_style = text_styleFactory(scaled_clickFontSize, scaled_clickLineHeight);\n\n    const horizontalContainerDim = {height: '100%', width: '100%'};\n    const horizontalContainer_style = container_styleFactory(horizontalContainerDim);\n\n    const leftScreenBannerDim = {height: '100%', width: '50%'};\n    const leftScreenBanner_style = container_styleFactory(leftScreenBannerDim);\n    const leftBanner_Dim = {height: '20%', width: '80%'};\n    const leftBanner_style = banner_styleFactory(leftBanner_Dim, scaledButtonBorderWidth);\n\n    const rightScreenBannerDim = {height: '100%', width: '50%'};\n    const rightScreenBanner_style = banner_styleFactory(rightScreenBannerDim, scaledButtonBorderWidth);\n    const rightBanner_Dim = {height: '20%', width: '80%'};\n    const rightBanner_style = banner_styleFactory(rightBanner_Dim, scaledButtonBorderWidth);\n\n    const mainView_style =  view_styleFactory('white');\n    return (\n        <View style={mainView_style.horizontal}>\n            <TouchableOpacity \n                style={leftScreenBanner_style.debug('rgb(238,238,238)').defaultStyle}\n                onPress={() => navigation.navigate('MatchMyMood')}\n                >\n                <View \n                    style={leftBanner_style.default}>\n                    <Text style={titleText_style.default} >[Match My<br></br>Mood!]!</Text>                \n                </View>\n            </TouchableOpacity>\n            <TouchableOpacity \n                style={rightScreenBanner_style.justLeft}\n                onPress={() => navigation.navigate('TakeMeSomewhere')}\n                >\n                <View \n                    style={rightBanner_style.default}>\n                    <Text style={titleText_style.default} >[Take Me<br></br>Somewhere]</Text>                \n                </View>\n            </TouchableOpacity>\n        </View>\n    )\n\n\n};\n\n\n\n  \n\n\nexport default HomeScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport NumberFormat from 'react-number-format'\nimport { Audio } from 'expo-av';\nimport { loadOptions } from \"@babel/core\";\nimport { NavigationActions } from \"react-navigation\";\n// import stylefactory from '../styles/styles'\n\n\nconst track = {\n    // Angry: require('../../assets/angryPuella.mp3'),\n    Angry: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/angryPuella.mp3'},\n    // Lazy: require('../../assets/lazySamuraiChamploo.mp3'),\n    Lazy: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/lazySamuraiChamploo.mp3'},\n    // Sad: require('../../assets/sadTokyoGhoul.mp3'),\n    Sad: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/sadTokyoGhoul.mp3'},\n    // Happy: require('../../assets/happyFlipFlappers.mp3'),\n    Happy: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/happyFlipFlappers.mp3'},\n    // Pumped: require('../../assets/pumpedOnePiece.mp3'),\n    Pumped: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/pumpedOnePiece.mp3'},\n    // Weird: require('../../assets/weirdMintOrange.mp3'),\n    Weird: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/weirdMintOrange.mp3'},\n    // Romantic: require('../../assets/romanticSakura.mp3')\n    Romantic: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/romanticSakura.mp3'},\n}\nconst Mood = {\n    Angry: 'Angry',\n    Lazy: 'Lazy',\n    Sad: 'Sad',\n    Happy: 'Happy',\n    Pumped: 'Pumped',\n    Weird: 'Weird',\n    Romantic: 'Romantic',\n    Null: 'null'\n}\n\nconst opacityLevel = {\n    mouseOn: 0.5,\n    mouseOff: 1.0\n\n}\n\nconst opacityReducer = (opacityState, action) => {\n    console.log(action.payload)\n    switch(action.type) {\n        case Mood.Angry:\n            console.log(\"hello angry\")\n            return {...opacityState, Angry: action.payload};\n        case Mood.Lazy:\n            return {...opacityState, Lazy: action.payload};\n        case Mood.Sad:\n            return {...opacityState, Sad: action.payload};\n        case Mood.Happy:\n            return {...opacityState, Happy: action.payload};\n        case Mood.Pumped:\n            return {...opacityState, Pumped: action.payload};\n        case Mood.Weird:\n            return {...opacityState, Weird: action.payload};\n        case Mood.Romantic:\n            return {...opacityState, Romantic: action.payload};\n        default:\n            return opacityState;\n    }\n}\n\n\nconst MatchMyMoodScreen = (props) => {\n\n   \n\n\n\n\n    const [opacityState, opacityDispatch] = useReducer(opacityReducer, {\n                                                    Angry: 1,\n                                                    Lazy: 1,\n                                                    Sad: 1,\n                                                    Happy: 1,\n                                                    Pumped: 1,\n                                                    Weird: 1,\n                                                    Romantic: 1});\n    const {\n        Angry,\n        Lazy,\n        Sad,\n        Happy,\n        Pumped,\n        Weird,\n        Romantic} = opacityState;\n\n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(Mood.Null)\n    async function play_pauseSound(loaded_song, mood) {\n        console.log(\"pressed play_pause\")\n        console.log(sound._loaded)\n        console.log(moodPlaying)\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === Mood.Null) {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n                await sound.loadAsync(loaded_song)\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                            setSoundPlaying(false);\n                            setMoodPlaying(Mood.Null);\n                          // audio has finished!\n                          console.log(\"finished playing song\");\n                          await sound.unloadAsync();\n                        }\n                      })\n            }\n        }\n    }\n\n\n  \n    React.useEffect(() => {\n      return sound\n        ? () => {\n            console.log('Unloading Sound');\n            sound.unloadAsync(); }\n        : undefined;\n    }, [sound]);\n  \n  \n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 7*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 7*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT, opacityState);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Match My<br></br>Mood!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            // onPress={() => play_pauseSound(track.Angry, Mood.Angry)}\n                            onPress={() => {props.navigation.navigate(\"Playlist\",{theme: Mood.Angry})}}\n                            // opacity={}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Angry, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Angry, payload: opacityLevel.mouseOff})}\n                            >\n\n                            <Text style={styles.option_textStyle} >Angry</Text> \n                                       \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Pumped, Mood.Pumped)}\n                            opacity={Pumped}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Pumped, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Pumped, payload: opacityLevel.mouseOff})}\n                            >   \n                                \n                            <Text style={styles.option_textStyle} >Pumped<br></br>Up!</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Lazy, Mood.Lazy)}\n                            opacity={Lazy}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Lazy, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Lazy, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Lazy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Happy, Mood.Happy)}\n                            opacity={Happy}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Happy, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Happy, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Happy!</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Weird, Mood.Weird)}\n                            opacity={Weird}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Weird, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Weird, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Weird~</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Sad, Mood.Sad)}\n                            opacity={Sad}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Sad, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Sad, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >A Little<br></br>Sad...</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Romantic, Mood.Romantic)}\n                            opacity={Romantic}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Romantic, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Romantic, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Romantic<br></br><NumberFormat value={3} displayType={'text'} prefix={'<'}></NumberFormat></Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT, opacityState) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (3.9/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .295*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default MatchMyMoodScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport { Audio } from 'expo-av';\nimport NumberFormat from 'react-number-format'\n// import stylefactory from '../styles/styles'\n\n\nconst track = {\n    // Beach: require('../../assets/beachEvangelion.mp3'),\n    Beach: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/beachEvangelion.mp3'},\n    // Icy: require('../../assets/icyYuri.mp3'),\n    Icy: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/icyYuri.mp3'},\n    // Jungle: require('../../assets/jungleJojo.mp3'),\n    Jungle: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/jungleJojo.mp3'},\n    // Home: require('../../assets/homeSpiceWolf.mp3'),\n    Home: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/homeSpiceWolf.mp3'},\n    // Clouds: require('../../assets/cloudsAnohana.mp3'),\n    Clouds: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/cloudsAnohana.mp3'},\n    // Party: require('../../assets/partyDeathParade.mp3'),\n    Party: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/partyDeathParade.mp3'},\n    // Volcano: require('../../assets/volcanoReZero.mp3')\n    Volcano: {uri: 'https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/volcanoReZero.mp3'},\n}\nconst Place = {\n    Beach: 'Beach',\n    Icy: 'Icy',\n    Jungle: 'Jungle',\n    Home: 'Home',\n    Clouds: 'Clouds',\n    Party: 'Party',\n    Volcano: 'Volcano',\n    Null: 'null'\n}\n\nconst opacityLevel = {\n    mouseOn: 0.5,\n    mouseOff: 1.0 \n\n}\n\nconst opacityReducer = (opacityState, action) => {\n    switch(action.type) {\n        case Place.Beach:\n            return {...opacityState, Beach: action.payload};\n        case Place.Icy:\n            return {...opacityState, Icy: action.payload};\n        case Place.Jungle:\n            return {...opacityState, Jungle: action.payload};\n        case Place.Home:\n            return {...opacityState, Home: action.payload};\n        case Place.Clouds:\n            return {...opacityState, Clouds: action.payload};\n        case Place.Party:\n            return {...opacityState, Party: action.payload};\n        case Place.Volcano:\n            return {...opacityState, Volcano: action.payload};\n        default:\n            return opacityState;\n    }\n}\n\n\n\nconst TakeMeSomewhereScreen = (props) => {\n    \n\n\n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(Place.Null)\n\n\n    const [opacityState, opacityDispatch] = useReducer(opacityReducer, {\n        Beach: 1,\n        Icy: 1,\n        Jungle: 1,\n        Home: 1,\n        Clouds: 1,\n        Party: 1,\n        Volcano: 1});\n    const {\n        Beach,\n        Icy,\n        Jungle,\n        Home,\n        Clouds,\n        Party,\n        Volcano} = opacityState;\n\n    \n\n    async function play_pauseSound(loaded_song, mood) {\n        console.log(\"pressed play_pause\")\n        console.log(sound._loaded)\n        console.log(moodPlaying)\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === Place.Null) {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n                await sound.loadAsync(loaded_song)\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                          // audio has finished!\n                          setSoundPlaying(false);\n                          setMoodPlaying(Place.Null);\n                          console.log(\"finished playing song\");\n                          await sound.unloadAsync();\n                        }\n                      })\n            }\n        }\n    }\n\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 7*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 7*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Take Me<br></br>Somewhere!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Beach, Place.Beach)}\n                        opacity={Beach}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Beach, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Beach, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >To the<br></br>Beach</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Clouds, Place.Clouds)}\n                        opacity={Clouds}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Clouds, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Clouds, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Through<br></br>the Clouds</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Icy, Place.Icy)}\n                        opacity={Icy}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Icy, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Icy, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Somewhere<br></br>Icy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Home, Place.Home)}\n                        opacity={Home}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Home, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Home, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Home</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Party, Place.Party)}\n                        opacity={Party}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Party, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Party, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >To A<br></br>Party!</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Jungle, Place.Jungle)}\n                        opacity={Jungle}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Jungle, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Jungle, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >The<br></br>Jungle</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Volcano, Place.Volcano)}\n                        opacity={Volcano}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Volcano, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Volcano, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Into a<br></br>Volcano</Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (4.25/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .298*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default TakeMeSomewhereScreen;\n\n","\nconst ThemePlaylists = {\n    themeArg: \"theme\",\n    Angry: {\n        name: \"angryPuella\",\n        url: \"\"\n    }\n}\n\nexport default ThemePlaylists;","\nimport { Text, Image, Flat, View, ScrollView, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { AntDesign , Ionicons } from '@expo/vector-icons';\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport main_styleFactory from '../../styles/main_styleFactory'\nimport container_styleFactory from '../../styles/container_styleFactory'\nimport banner_styleFactory from '../../styles/banner_styleFactory'\nimport text_styleFactory from '../../styles/text_styleFactory'\nimport utilities from '../utilities'\nimport ThemePlaylists from '../data/ThemePlaylists'\nimport view_styleFactory from '../../styles/view_styleFactory';\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { Audio } from 'expo-av';\n\nconst playlist = [\n    { name: 'Linked Horizon', artist: \"Revo\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/LinkedHorizon.mp3\"}},\n    { name: 'Let Me Hear', artist: \"Fear and Loathing in Las Vegas\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/LetMeHear.mp3\"} },\n    { name: 'Heavenly Blue', artist: \"Hiroyuki Sawano\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/HeavenlyBlue.mp3\"}},\n    { name: 'The World', artist: \"Yutaka Yamada\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/TheWorld.mp3\"}},\n    { name: 'Sono Chi No Sadame', artist: \"Bluff\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/SonoChiNoSadame.mp3\"}},\n    { name: 'Unravel', artist: \"Toru Kitajima\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/Unravel.mp3\"}},\n    { name: 'Magia', artist: \"Kalafina\", track: { uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/angryPuella.mp3\"}},\n    { name: 'Papermoon', artist: \"Tomoko Kawase\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/Papermoon.mp3\"}},\n    { name: 'Clattanoia', artist: \"OxT\", track: {uri: \"https://yahtzeerage.github.io/Choose-Your-Own-Audioventure-Assets/assets/Clattanoia.mp3\"}}\n];\n\nconst play_pause_name = {\n    play: \"play\",\n    pause: \"pausecircle\"\n}\n\n\n\n\nconst PlaylistScreen = ({navigation}) => {\n\n\n    const initialButtonHighlights = [];\n    playlist.map((element) => initialButtonHighlights.push({key: element.name, value: false}));\n\n\n    const [buttonHighlights, setButtonHighlights] = useState(initialButtonHighlights);\n\n\n\n\n    const [play_pause_state, set_play_pause_state] = useState(play_pause_name.play);\n    \n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(\"\")\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n\n\n\n    async function skip_buttion() {\n        set_play_pause_state(play_pause_name.play);\n        if (moodPlaying === \"\") {\n            play_pause_button();\n        } \n        else {\n\n            \n\n            console.log(moodPlaying)\n            const currentIndex = playlist.findIndex((element) => element.name === moodPlaying);\n            console.log(currentIndex);\n            const playlistLength = playlist.length;\n            console.log(playlistLength)\n            const nextIndex = (currentIndex + 1) % playlistLength;\n            console.log(nextIndex);\n            \n            play_pauseSound(playlist[nextIndex].track, playlist[nextIndex].name)\n\n\n\n                                                        \n        }\n    }\n\n    async function play_pause_button() {\n        console.log(moodPlaying)\n        if (moodPlaying === \"\") {\n\n            \n\n            play_pauseSound(playlist[0].track, playlist[0].name);\n        } \n        else {\n            play_pauseSound(null, moodPlaying)\n\n\n        }\n\n    }\n    \n    async function play_pauseSound(loaded_song, mood) {\n        console.log(moodPlaying);\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === \"\") {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                set_play_pause_state(play_pause_name.pause)\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n\n\n                var newVal = buttonHighlights;\n\n                newVal[moodPlaying] = false;\n                newVal[mood] = true;\n                setButtonHighlights(newVal)\n\n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                set_play_pause_state(play_pause_name.play)\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    set_play_pause_state(play_pause_name.play)\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n\n                    var newVal = buttonHighlights;\n                    newVal[moodPlaying] = false;\n                    newVal[mood] = true;\n                    setButtonHighlights(newVal)\n\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    set_play_pause_state(play_pause_name.play)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n\n                var newVal = buttonHighlights;\n                newVal[mood] = true;\n                setButtonHighlights(newVal)\n\n                await sound.loadAsync(loaded_song)\n                set_play_pause_state(play_pause_name.play);\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                            setSoundPlaying(false);\n                            \n                        // audio has finished!\n                        console.log(\"finished playing song\");\n\n                        console.log(\"playing next song\")\n                        await sound.unloadAsync();\n\n                        const currentIndex = playlist.findIndex(mood);\n                        const playlistLength = playlist.length();\n                        const nextIndex = (currentIndex + 1) % playlistLength;\n                        play_pauseSound(playlist[nextIndex].track, playlist[nextIndex].name)\n                        }\n                    })\n            }\n        }\n    }\n\n\n\n\n\n\n    const BACKGROUND_IMAGE_HEIGHT = 867;\n    const BACKGROUND_IMAGE_WIDTH = 1542;\n    const BUTTON_BORDER_WIDTH = 7;\n    const GOOGLE_DOCS_TEXT_CONVERSION_RATIO = 2.14285714;\n\n    const ITEM_FONT_SIZE = 21 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const TITLE_FONT_SIZE = 23.8 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    // const DASH_FONT_SIZE = 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const LINE_SPACING = 1.15;\n\n    const imageDim = {height: BACKGROUND_IMAGE_HEIGHT, width: BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * BUTTON_BORDER_WIDTH;\n\n\n\n    const themeName = navigation.getParam(ThemePlaylists.themeArg, null);\n    // themeName = \"Angry\";\n    const playlistInfo = ThemePlaylists[themeName];\n\n    const scaled_titleFontSize = scaledImageDim.scalingRatio * TITLE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * LINE_SPACING;\n    const titleText_style = text_styleFactory(scaled_titleFontSize, scaled_titleLineHeight);\n\n    const scaled_itemFontSize = scaledImageDim.scalingRatio * ITEM_FONT_SIZE;\n    const scaled_itemLineHeight = scaled_titleFontSize * LINE_SPACING;\n    const titleItem_style = text_styleFactory(scaled_itemFontSize, scaled_itemLineHeight);\n\n    // const scaled_dashFontSize = scaledImageDim.scalingRatio * TILE_FONT_SIZE;\n    // const scaled_titleLineHeight = scaled_titleFontSize * LINE_SPACING;\n    // const titleText_style = text_styleFactory(scaled_titleFontSize, scaled_titleLineHeight);\n\n    const main_styles = main_styleFactory(scaledImageDim, scaledButtonBorderWidth, scaled_titleFontSize, scaled_titleLineHeight);\n\n    const contentDim = {height: '54.5454545%', width: '50%', top: '.6%'};\n    const contentView_style = container_styleFactory(contentDim);\n\n    const titleDim = {height:'20%', width: '100%'}\n    const titleView_style = container_styleFactory(titleDim); \n\n    const titleBannerDim = {height: '100%', width:'50%'}\n    const titleBanner_style = banner_styleFactory(titleBannerDim, scaledButtonBorderWidth);\n\n    const listDim = {height: '65%', width: '100%'}\n    const listView_style = banner_styleFactory(listDim, scaledButtonBorderWidth);\n\n\n    const listItemDim = {height: '100%', width: '100%'}\n    const listItemView_style = container_styleFactory(listItemDim);\n    \n    const playlistDim = {height: '15%', width: '100%'}\n    const playlistView_style = container_styleFactory(playlistDim);\n\n    const playlistBannerDim = {height: '100%', width:'100%'}\n    const playlistBanner_style = banner_styleFactory(playlistBannerDim, scaledButtonBorderWidth);\n\n    return <View style={main_styles.viewStyle}>\n        <ImageBackground style={main_styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n\n            <View style={contentView_style.main().defaultStyle}>\n                <View style={titleView_style.main().defaultStyle}>\n                    <View style={titleBanner_style.noBottom}>\n                        <Text style={titleText_style.default}>Angry</Text>\n                    </View>\n                </View>\n                <View style={listView_style.bottomCorners}>\n\n                    <FlatList\n\n                        vertical\n                        showsHorizontalScrollIndicator={false}\n                        // contentContainerStyle={{backgroundColor: 'black'}}\n                        showsVerticalScrollIndicator={false}\n                        keyExtractor={(track) => track.name}\n                        data={playlist}\n                        renderItem={({ item }) => {\n                            // return <Text> {item.name} </Text>\n                            return (\n                                <View >\n                                    <TouchableOpacity\n                                        onPress={() => {play_pauseSound(item.track, item.name);\n                                                        }}\n                                        style={{opacity: (() => {\n                                            console.log(\"this was called\");\n                                            if (buttonHighlights[item.name]){\n                                                return 0.5;\n                                            }\n                                            else {\n                                                return 1;\n                                            }\n\n                                        })()}}\n                                    >\n                                        <View>\n                                            <ScrollView \n                                                \n                                                horizontal\n                                                showsHorizontalScrollIndicator={false}\n                                                \n                                            >   \n                                                <View>\n                                                <Text style={titleItem_style.default}> {item.name} / {item.artist}</Text>\n                                                \n                                                </View>\n                                            </ScrollView>\n                                            <ScrollView>\n                                                <View><Text style={titleText_style.default}>--------------</Text></View>\n                                                \n                                            </ScrollView>\n                                            \n                                        </View>\n                                        \n                                        \n                                    </TouchableOpacity>\n                                    \n                                </View>\n                            )\n                        }}\n\n                    />\n                </View>\n                \n\n                \n                <View style={playlistView_style.main().defaultStyle}>\n                    <View style={playlistBanner_style.noTop}>\n                        <Text>\n                                <TouchableOpacity\n                                    onPress={()=> {\n                                        play_pause_button();\n                                    }}\n                                >\n                                    <AntDesign \n                                        name={play_pause_state} \n                                        size={scaled_titleFontSize} \n                                        color=\"white\"\n                                        >\n                                    </AntDesign>\n                                </TouchableOpacity>   <TouchableOpacity\n                                    onPress={()=> {\n                                        \n                                        skip_buttion();\n                                    }}\n                                >\n                                    <Ionicons  \n                                        name=\"play-skip-forward-circle\"\n                                        size={scaled_titleFontSize} \n                                        color=\"white\"\n                                        >\n                                    </Ionicons>\n                                </TouchableOpacity>\n                        </Text>\n                        \n                    </View>\n                </View>\n            </View>\n\n        </ImageBackground>\n    </View>\n\n}\n\nexport default PlaylistScreen;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport main_styleFactory from '../../styles/main_styleFactory'\nimport container_styleFactory from '../../styles/container_styleFactory'\nimport banner_styleFactory from '../../styles/banner_styleFactory'\nimport text_styleFactory from '../../styles/text_styleFactory'\nimport utilities from '../utilities'\n\n\n\n\nconst HomeScreen = ({navigation}) => {\n\n    // keep the known window dimensions up to date amidst resize\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n\n    // load in the font for usage\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n    if (!fontsLoaded) {\n    return <AppLoading />;\n    }\n\n    const BACKGROUND_IMAGE = require('../../assets/backgroundBanner.gif');\n\n    // these constants depend on the image backgroun I use\n    const BACKGROUND_IMAGE_HEIGHT = 867;\n    const BACKGROUND_IMAGE_WIDTH = 1542;\n    const BUTTON_BORDER_WIDTH = 7;\n\n    const GOOGLE_DOCS_TEXT_CONVERSION_RATIO = 2.14285714;\n\n    const TILE_FONT_SIZE = 24 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const CLICK_FONT_SIZE = 14 * GOOGLE_DOCS_TEXT_CONVERSION_RATIO;\n    const LINE_SPACING = 1.15;\n\n    // calculation for the scaling of the background image\n    const imageDim = {height: BACKGROUND_IMAGE_HEIGHT, width: BACKGROUND_IMAGE_WIDTH};\n    const scaledImageDim = utilities.calculate_scaledImageDim(windowDim, imageDim);\n    const scaledButtonBorderWidth = scaledImageDim.scalingRatio * BUTTON_BORDER_WIDTH;\n\n\n\n    const contentDim = {height: '84.5%', width: '50%', top: '.6%'};\n    const contentView_style = container_styleFactory(contentDim);\n\n    const titleContentDim = {height: '36%', width: '100%'};\n    const titleContent_style = container_styleFactory(titleContentDim);\n\n    const creditsContentDim = {height: '9%', width: '33%'};\n    const creditsContent_style = container_styleFactory(creditsContentDim);\n\n    const titleBannerDim = {height: '78%', width: '100%'};\n    const titleBanner_style = banner_styleFactory(titleBannerDim, scaledButtonBorderWidth);\n    const clickBannerDim = {height: '22%', width: '100%'};\n    const clickBanner_style = banner_styleFactory(clickBannerDim, scaledButtonBorderWidth);\n    const creditsBannerDim = {height: '100%', width: '100%'};\n    const creditsBanner_style = banner_styleFactory(creditsBannerDim, scaledButtonBorderWidth);\n    \n    const scaled_titleFontSize = scaledImageDim.scalingRatio * TILE_FONT_SIZE;\n    const scaled_titleLineHeight = scaled_titleFontSize * LINE_SPACING;\n    const titleText_style = text_styleFactory(scaled_titleFontSize, scaled_titleLineHeight);\n    const main_styles = main_styleFactory(scaledImageDim, scaledButtonBorderWidth, scaled_titleFontSize, scaled_titleLineHeight);\n\n\n    const scaled_clickFontSize = scaledImageDim.scalingRatio * CLICK_FONT_SIZE;\n    const scaled_clickLineHeight = scaled_clickFontSize * LINE_SPACING;\n    const clickText_style = text_styleFactory(scaled_clickFontSize, scaled_clickLineHeight);\n\n\n\n    return (\n        <View style={main_styles.viewStyle}>\n            <TouchableOpacity onPress={() => {navigation.navigate('ChooseMoodOrPlace')}}>\n                <ImageBackground style={main_styles.imageStyle} source={BACKGROUND_IMAGE} >\n                    <View style={contentView_style.main().apartStyle_nudged}>\n                        \n                        <View style={titleContent_style.main().defaultStyle}>\n                            <View \n                                style={titleBanner_style.bottomCorners}>\n                                <Text style={titleText_style.default} >Choose Your Own Audioventure!</Text>                \n                            </View>\n                            <View \n                                style={clickBanner_style.noTop}>\n                                <Text style={clickText_style.default} >Click anywhere to start!</Text>                \n                            </View>\n                        </View>\n\n                        <View style={creditsContent_style.main().defaultStyle}>\n                            <View \n                                style={creditsBanner_style.default}>\n                                <Text style={clickText_style.default} >Credits</Text>                \n                            </View>\n                        </View>\n\n                    </View>          \n                </ImageBackground>\n            </TouchableOpacity>\n        </View>\n    )\n\n\n};\n\n\n\n  \n\n\nexport default HomeScreen;\n\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport ChooseMoodOrPlaceScreen from './src/screens/ChooseMoodOrPlaceScreen';\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen';\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen';\nimport PlaylistScreen from './src/screens/PlaylistScreen'\n\n\nimport HomeScreen from './src/screens/HomeScreen'\n// import MatchMyMoodScreen from './src/screens/MatchMyMoodScreen';\n// import TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen';\n// import FirstChoiceScreen from './src/screens/FirstChoiceScreen';\n\n\nconst navigator = createStackNavigator(\n\n  {\n    Home: HomeScreen,\n    ChooseMoodOrPlace: ChooseMoodOrPlaceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Playlist: PlaylistScreen\n  },\n  {\n    initialRouteName: 'Home',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\nexport default createAppContainer(navigator);\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}