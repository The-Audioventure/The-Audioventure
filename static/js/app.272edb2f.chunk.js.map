{"version":3,"sources":["assets/backgroundBanner.gif","assets/angryPuella.mp3","assets/lazySamuraiChamploo.mp3","assets/sadTokyoGhoul.mp3","assets/happyFlipFlappers.mp3","assets/pumpedOnePiece.mp3","assets/weirdMintOrange.mp3","assets/romanticSakura.mp3","assets/angryMetal.mp3","assets/beachEvangelion.mp3","assets/icyYuri.mp3","assets/jungleJojo.mp3","assets/homeSpiceWolf.mp3","assets/cloudsAnohana.mp3","assets/partyDeathParade.mp3","assets/volcanoReZero.mp3","src/screens/FirstChoiceScreen.js","src/styles/styles.js","src/screens/HomeScreen.js","src/screens/MatchMyMoodScreen.js","src/screens/TakeMeSomewhereScreen.js","App.js","webpack:////home/yhussain/Native_apps/ChooseYourOwnAudioventure_JS/index.js?b399"],"names":["module","exports","stylefactory","backgroundHeight","backgroundWidth","buttonBorderWidth","FONT_SIZE","LINE_HEIGHT","StyleSheet","create","viewStyle","justifyContent","backgroundColor","alignItems","imageStyle","height","width","resizeMode","flexDirection","overflow","left_buttonStyle","borderWidth","borderColor","borderRadius","marginRight","right_buttonStyle","marginLeft","textStyle","fontFamily","fontSize","textAlign","color","opacity","lineHeight","FirstChoiceScreen","navigation","useState","Dimensions","get","windowDim","setWindow","window","addEventListener","RATIO","useFonts","PressStart2P_400Regular","styles","View","style","ImageBackground","source","require","TouchableOpacity","onPress","navigate","Text","buttonStyle","HomeScreen","track","Angry","Lazy","Sad","Happy","Pumped","Weird","Romantic","Mood","opacityLevel","opacityReducer","opacityState","action","type","payload","contentViewStyle","top","titleViewStyle","flex","titleBanner","title_textStyle","optionsViewStyle","apart_optionLineViewStyle","even_optionLineViewStyle","option_buttonStyle","option_textStyle","parentViewStyle","MatchMyMoodScreen","props","React","Audio","Sound","sound","soundPlaying","setSoundPlaying","moodPlaying","setMoodPlaying","useReducer","opacityDispatch","play_pauseSound","loaded_song","mood","a","async","console","log","_loaded","error","pauseAsync","unloadAsync","loadAsync","playAsync","_onPlaybackStatusUpdate","status","didJustFinish","useEffect","undefined","onMouseEnter","onMouseLeave","value","displayType","prefix","Beach","Icy","Jungle","Home","Clouds","Party","Volcano","Place","TakeMeSomewhereScreen","navigator","createStackNavigator","FirstChoice","MatchMyMood","TakeMeSomewhere","Svg","SvgExample","initialRouteName","headerMode","defaultNavigationOptions","title","cardStyle","createAppContainer","container","registerRootComponent","App"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,8C,8ECA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,qKCiFrCC,EAAe,SAACC,EAAkBC,EAAiBC,EAAmBC,EAAWC,GAAlE,OAAkFC,IAAWC,OAAO,CAErHC,UAAW,CAEPC,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,eAChBE,WAAY,SACZE,OAAQZ,EACRa,MAAOZ,EACPa,WAAY,SACZL,gBAAiB,QACjBM,cAAe,MAEfC,SAAU,UAEdC,iBAAkB,CACdC,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAO,MACPD,OAAQ,MACRQ,aAAc,EACdZ,eAAgB,SAChBa,YAAa,MAEjBC,kBAAmB,CACfJ,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAO,MACPD,OAAQ,MACRQ,aAAc,EACdZ,eAAgB,SAChBe,WAAY,MAGhBC,UAAW,CACPC,WAAY,0BACZC,SAAUvB,EACVwB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAY1B,MAKL2B,EA3HW,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAETC,mBAASC,IAAWC,IAAI,WAFf,WAEjCC,EAFiC,KAEtBC,EAFsB,KAGxCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUH,IAAWC,IAAI,cACjE,IAGIK,EAAQ,EACRrC,EAAY,GAAGqC,EAEfpC,EAAc,EACdJ,EAAmB,EACnBC,EAAmB,EACnBC,EAAoB,EARC,KADC,IAYDkC,EAAUvB,MAAMuB,EAAUxB,QAK/CR,EAZe,MAWfD,EAAY,IADZqC,EAAQJ,EAAUxB,OAfI,MAkBtBZ,EAAmBoC,EAAUxB,OAC7BX,EAlBqB,KAkBFuC,EACnBtC,EAAoB,EAAEsC,IAKtBpC,EApBe,MAmBfD,EAAY,IADZqC,EAAQJ,EAAUvB,MAtBG,OAyBrBb,EA1BsB,IA0BHwC,EACnBvC,EAAmBmC,EAAUvB,MAC7BX,EAAoB,EAAEsC,GAhCc,MAqCpBC,YAAS,CACzBC,8BAGF,IAzCsC,YA0CpC,OAAO,kBAAC,IAAD,MAGT,IAAMC,EAAS5C,EAAaC,EAAkBC,EAAiBC,EAAmBC,EAAWC,GAE/F,OAAO,kBAACwC,EAAA,EAAD,CAAMC,MAAOF,EAAOpC,WAEvB,kBAACuC,EAAA,EAAD,CAAiBD,MAAOF,EAAOhC,WAAYoC,OAAQC,EAAQ,MAEvD,kBAACC,EAAA,EAAD,CACIJ,MAAOF,EAAO1B,iBACdiC,QAAS,WAAOlB,EAAWmB,SAAS,iBACpC,kBAACC,EAAA,EAAD,CAAMP,MAAOF,EAAOnB,WAApB,qBAEJ,kBAACyB,EAAA,EAAD,CACIJ,MAAOF,EAAOrB,kBACd4B,QAAS,WAAOlB,EAAWmB,SAAS,qBACpC,kBAACC,EAAA,EAAD,CAAMP,MAAOF,EAAOnB,WAApB,4BCrBDzB,EArCM,SAACC,EAAkBC,EAAiBC,EAAmBC,EAAWC,GAAlE,OAAkFC,IAAWC,OAAO,CAErHC,UAAW,CAEPC,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,SAChBE,WAAY,SACZE,OAAQZ,EACRa,MAAOZ,EACPa,WAAY,SACZL,gBAAiB,QAEjBO,SAAU,UAEdqC,YAAa,CACTnC,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAO,MACPD,OAAQ,MACRQ,aAAc,EACdZ,eAAgB,UAEpBgB,UAAW,CACPC,WAAY,0BACZC,SAAUvB,EACVwB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAY1B,MCiCLkD,EApEI,SAAC,GAAkB,IAAjBtB,EAAgB,EAAhBA,WAAgB,EAEFC,mBAASC,IAAWC,IAAI,WAFtB,WAE1BC,EAF0B,KAEfC,EAFe,KAGjCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUH,IAAWC,IAAI,cACjE,IAGIK,EAAQ,EACRrC,EAAY,GAAGqC,EAEfpC,EAAc,EACdJ,EAAmB,EACnBC,EAAmB,EACnBC,EAAoB,EARC,KADC,IAYDkC,EAAUvB,MAAMuB,EAAUxB,QAK/CR,EAZe,MAWfD,EAAY,IADZqC,EAAQJ,EAAUxB,OAfI,MAkBtBZ,EAAmBoC,EAAUxB,OAC7BX,EAlBqB,KAkBFuC,EACnBtC,EAAoB,EAAEsC,IAKtBpC,EApBe,MAmBfD,EAAY,IADZqC,EAAQJ,EAAUvB,MAtBG,OAyBrBb,EA1BsB,IA0BHwC,EACnBvC,EAAmBmC,EAAUvB,MAC7BX,EAAoB,EAAEsC,GAhCO,MAqCbC,YAAS,CACzBC,8BAGF,IAzC+B,YA0C7B,OAAO,kBAAC,IAAD,MAGT,IAAMC,EAAS5C,EAAaC,EAAkBC,EAAiBC,EAAmBC,EAAWC,GAE/F,OAAO,kBAACwC,EAAA,EAAD,CAAMC,MAAOF,EAAOpC,WAEvB,kBAACuC,EAAA,EAAD,CAAiBD,MAAOF,EAAOhC,WAAYoC,OAAQC,EAAQ,MAEvD,kBAACC,EAAA,EAAD,CACIJ,MAAOF,EAAOU,YACdH,QAAS,WAAOlB,EAAWmB,SAAS,iBACpC,kBAACC,EAAA,EAAD,CAAMP,MAAOF,EAAOnB,WAApB,qC,0nBClDhB,IAAM+B,EAAQ,CACVC,MAAOR,EAAQ,KACfS,KAAMT,EAAQ,KACdU,IAAKV,EAAQ,KACbW,MAAOX,EAAQ,KACfY,OAAQZ,EAAQ,KAChBa,MAAOb,EAAQ,KACfc,SAAUd,EAAQ,MAEhBe,EACK,QADLA,EAEI,OAFJA,EAGG,MAHHA,EAIK,QAJLA,EAKM,SALNA,EAMK,QANLA,EAOQ,WAPRA,EAQI,OAGJC,EACO,GADPA,EAEQ,EAIRC,EAAiB,SAACC,EAAcC,GAClC,OAAOA,EAAOC,MACV,KAAKL,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBV,MAAOW,EAAOE,UAC3C,KAAKN,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBT,KAAMU,EAAOE,UAC1C,KAAKN,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBR,IAAKS,EAAOE,UACzC,KAAKN,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBP,MAAOQ,EAAOE,UAC3C,KAAKN,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBN,OAAQO,EAAOE,UAC5C,KAAKN,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBL,MAAOM,EAAOE,UAC3C,KAAKN,EACD,OAAO,EAAP,KAAWG,GAAX,IAAyBJ,SAAUK,EAAOE,UAC9C,QACI,OAAOH,IAuRbnE,EAAe,SAACC,EAAkBC,EAAiBC,EAAmBC,EAAWC,EAAa8D,GAA/E,OAAgG7D,IAAWC,OAAO,CAEnIgE,iBAAkB,CAEd1D,OAAQZ,EAAmB,IAAKC,EAChCY,MAAO,IAAKZ,EACZsE,IAAK,GAGTC,eAAgB,CAGZC,KAAM,IACN5D,MAAO,OACPH,WAAY,UAGhBgE,YAAa,CACTxD,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAQ,IAAQZ,EAChBW,OAAQ,OACRQ,aAAc,EACdZ,eAAgB,UAEpBmE,gBAAiB,CACblD,WAAY,0BACZC,SAAUvB,EAAY,EACtBwB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAY1B,EAAc,GAE9BwE,iBAAkB,CAEdH,KAAM,EAEN5D,MAAO,OACPL,eAAgB,gBAGpBqE,0BAA2B,CAIvBjE,OAAQ,MACRC,MAAO,OACPE,cAAe,MACfP,eAAgB,iBAGpBsE,yBAA0B,CAItBlE,OAAQ,MACRC,MAAO,OACPE,cAAe,MACfP,eAAgB,iBAGpBuE,mBAAoB,CAChB7D,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAO,KAAKZ,EACZW,OAAQ,OACRQ,aAAc,EACdZ,eAAgB,UAIpBwE,iBAAkB,CACdvD,WAAY,0BACZC,SAAUvB,EACVwB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAY1B,GAKhB6E,gBAAiB,CAEbzE,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,eAChBE,WAAY,SACZE,OAAQZ,EACRa,MAAOZ,EACPa,WAAY,SACZL,gBAAiB,QACjBM,cAAe,MAEfC,SAAU,aAMHkE,EA3XW,SAACC,GAAW,IAAD,EAKPC,IAAMnD,SAAS,IAAIoD,IAAMC,OALlB,WAK1BC,EAL0B,aAMOH,IAAMnD,UAAS,IANtB,WAM1BuD,EAN0B,KAMZC,EANY,OAOKL,IAAMnD,SAAS8B,GAPpB,WAO1B2B,EAP0B,KAObC,EAPa,OAUOC,qBAAW3B,EAAgB,CACnBT,MAAO,EACPC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,SAAU,IAjBzB,WAU1BI,EAV0B,KAUZ2B,EAVY,KAmB7BrC,EAMYU,EANZV,MACAC,EAKYS,EALZT,KACAC,EAIYQ,EAJZR,IACAC,EAGYO,EAHZP,MACAC,EAEYM,EAFZN,OACAC,EACYK,EADZL,MACAC,EAAYI,EAAZJ,SAIJ,SAAegC,EAAgBC,EAAaC,GAA5C,SAAAC,EAAAC,OAAA,mDACIC,QAAQC,IAAI,sBACZD,QAAQC,IAAIb,EAAMc,SAClBF,QAAQC,IAAIV,GACZS,QAAQC,IAAIJ,IACRR,EALR,oBAMYE,IAAgB3B,EAN5B,gBAOiBwB,EAAMc,SACPF,QAAQG,MAAM,qCAR9B,0BAWiBZ,IAAgBM,EAXjC,oCAAAC,EAAA,MAYkBV,EAAMgB,cAZxB,QAaYd,GAAgB,GAb5B,+BAiBiBF,EAAMc,SACPF,QAAQG,MAAM,wCAlB9B,YAAAL,EAAA,MAoBkBV,EAAMiB,eApBxB,2BAAAP,EAAA,MAqBkBV,EAAMkB,UAAUV,IArBlC,2BAAAE,EAAA,MAsBkBV,EAAMmB,aAtBxB,QAuBYf,EAAeK,GAvB3B,oCA6BWT,EAAMc,QA7BjB,oBA8BgBX,IAAgBM,EA9BhC,oCAAAC,EAAA,MA+BsBV,EAAMmB,aA/B5B,QAgCgBjB,GAAgB,GAhChC,2CAAAQ,EAAA,MAmCsBV,EAAMiB,eAnC5B,2BAAAP,EAAA,MAoCsBV,EAAMkB,UAAUV,IApCtC,2BAAAE,EAAA,MAqCsBV,EAAMmB,aArC5B,QAsCgBjB,GAAgB,GAChBE,EAAeK,GAvC/B,6DAAAC,EAAA,MA4CkBV,EAAMkB,UAAUV,IA5ClC,2BAAAE,EAAA,MA6CkBV,EAAMmB,aA7CxB,QA8CYjB,GAAgB,GAChBE,EAAeK,GACfT,EAAMoB,wBAA2B,SAAOC,GAAP,SAAAX,EAAAC,OAAA,oDACI,IAAzBU,EAAOC,cADc,uBAGvBV,QAAQC,IAAI,yBAHW,WAAAH,EAAA,MAIjBV,EAAMiB,eAJW,6DAhD7C,6DA6FApB,IAAM0B,WAAU,WACd,OAAOvB,EACH,WACEY,QAAQC,IAAI,mBACZb,EAAMiB,oBACRO,IACH,CAACxB,IAhI6B,MAoIFtD,mBAASC,IAAWC,IAAI,WApItB,WAoI1BC,EApI0B,KAoIfC,GApIe,KAqIjCC,OAAOC,iBAAiB,UAAU,kBAAMF,GAAUH,IAAWC,IAAI,cACjE,IAGIK,GAAQ,EACRrC,GAAY,EAEZC,GAAc,EACdJ,GAAmB,EACnBC,GAAmB,EACnBC,GAAoB,EARC,KADC,IAYDkC,EAAUvB,MAAMuB,EAAUxB,QAK/CR,GAZe,MAWfD,GAAY,IADZqC,GAAQJ,EAAUxB,OAfI,MAkBtBZ,GAAmBoC,EAAUxB,OAC7BX,GAlBqB,KAkBFuC,GACnBtC,GAAoB,EAAEsC,KAKtBpC,GApBe,MAmBfD,GAAY,IADZqC,GAAQJ,EAAUvB,MAtBG,OAyBrBb,GA1BsB,IA0BHwC,GACnBvC,GAAmBmC,EAAUvB,MAC7BX,GAAoB,EAAEsC,IAlKO,OAuKbC,YAAS,CACzBC,8BAGF,IA3K+B,aA4K7B,OAAO,kBAAC,IAAD,MAGT,IAAMC,GAAS5C,EAAaC,GAAkBC,GAAiBC,GAAmBC,GAAWC,GAAa8D,GAE5G,OAAO,kBAACtB,EAAA,EAAD,CAAMC,MAAOF,GAAOsC,iBAEvB,kBAACnC,EAAA,EAAD,CAAiBD,MAAOF,GAAOhC,WAAYoC,OAAQC,EAAQ,MACvD,kBAACJ,EAAA,EAAD,CAAMC,MAAOF,GAAO2B,kBAChB,kBAAC1B,EAAA,EAAD,CAAMC,MAAOF,GAAO6B,gBAChB,kBAAC5B,EAAA,EAAD,CAAMC,MAAOF,GAAO+B,aAChB,kBAACtB,EAAA,EAAD,CAAMP,MAAOF,GAAOgC,iBAApB,YAA+C,6BAA/C,YAIR,kBAAC/B,EAAA,EAAD,CAAMC,MAAOF,GAAOiC,kBAEhB,kBAAChC,EAAA,EAAD,CAAMC,MAAOF,GAAOkC,2BAChB,kBAAC5B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAMC,MAAOO,IAC5ClC,QAAS2B,EACTwD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAYM,QAASL,KAChEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAYM,QAASL,MAGhE,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,UAGJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAMK,OAAQG,IAC7ClC,QAAS+B,EACToD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAaM,QAASL,KACjEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAaM,QAASL,MAGjE,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,SAA6C,6BAA7C,SAIR,kBAACpC,EAAA,EAAD,CAAMC,MAAOF,GAAOmC,0BAChB,kBAAC7B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAME,KAAMM,IAC3ClC,QAAS4B,EACTuD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAWM,QAASL,KAC/DiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAWM,QAASL,MAG/D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,SAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAMI,MAAOI,IAC5ClC,QAAS8B,EACTqD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAYM,QAASL,KAChEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAYM,QAASL,MAGhE,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,WAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAMM,MAAOE,IAC5ClC,QAASgC,EACTmD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAYM,QAASL,KAChEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAYM,QAASL,MAGhE,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,YAIR,kBAACpC,EAAA,EAAD,CAAMC,MAAOF,GAAOkC,2BAChB,kBAAC5B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAMG,IAAKK,IAC1ClC,QAAS6B,EACTsD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAUM,QAASL,KAC9DiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAUM,QAASL,MAG9D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,WAA+C,6BAA/C,WAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAC5B7B,QAAS,kBAAM4C,EAAgBvC,EAAMO,SAAUC,IAC/ClC,QAASiC,EACTkD,aAAc,kBAAMnB,EAAgB,CAACzB,KAAML,EAAeM,QAASL,KACnEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAML,EAAeM,QAASL,MAGnE,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,WAA+C,6BAAS,kBAAC,IAAD,CAAckC,MAAO,EAAGC,YAAa,OAAQC,OAAQ,c,ikBCnTzI,IAAM7D,EAAQ,CACV8D,MAAOrE,EAAQ,KACfsE,IAAKtE,EAAQ,KACbuE,OAAQvE,EAAQ,KAChBwE,KAAMxE,EAAQ,KACdyE,OAAQzE,EAAQ,KAChB0E,MAAO1E,EAAQ,KACf2E,QAAS3E,EAAQ,MAEf4E,EACK,QADLA,EAEG,MAFHA,EAGM,SAHNA,EAII,OAJJA,EAKM,SALNA,EAMK,QANLA,EAOO,UAPPA,GAQI,OAGJ5D,GACO,GADPA,GAEQ,EAIRC,GAAiB,SAACC,EAAcC,GAClC,OAAOA,EAAOC,MACV,KAAKwD,EACD,OAAO,OAAI1D,GAAX,IAAyBmD,MAAOlD,EAAOE,UAC3C,KAAKuD,EACD,OAAO,OAAI1D,GAAX,IAAyBoD,IAAKnD,EAAOE,UACzC,KAAKuD,EACD,OAAO,OAAI1D,GAAX,IAAyBqD,OAAQpD,EAAOE,UAC5C,KAAKuD,EACD,OAAO,OAAI1D,GAAX,IAAyBsD,KAAMrD,EAAOE,UAC1C,KAAKuD,EACD,OAAO,OAAI1D,GAAX,IAAyBuD,OAAQtD,EAAOE,UAC5C,KAAKuD,EACD,OAAO,OAAI1D,GAAX,IAAyBwD,MAAOvD,EAAOE,UAC3C,KAAKuD,EACD,OAAO,OAAI1D,GAAX,IAAyByD,QAASxD,EAAOE,UAC7C,QACI,OAAOH,IAoObnE,GAAe,SAACC,EAAyBC,EAAwBC,EAA0BC,EAAkBC,GAA9F,OAAqHC,IAAWC,OAAO,CAExJgE,iBAAkB,CAEd1D,OAAQZ,EAAmB,IAAKC,EAChCY,MAAO,IAAKZ,EACZsE,IAAK,GAGTC,eAAgB,CAGZC,KAAM,IACN5D,MAAO,OACPH,WAAY,UAGhBgE,YAAa,CACTxD,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAQ,KAASZ,EACjBW,OAAQ,OACRQ,aAAc,EACdZ,eAAgB,UAEpBmE,gBAAiB,CACblD,WAAY,0BACZC,SAAUvB,EAAY,EACtBwB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAY1B,EAAc,GAE9BwE,iBAAkB,CAEdH,KAAM,EAEN5D,MAAO,OACPL,eAAgB,gBAGpBqE,0BAA2B,CAIvBjE,OAAQ,MACRC,MAAO,OACPE,cAAe,MACfP,eAAgB,iBAGpBsE,yBAA0B,CAItBlE,OAAQ,MACRC,MAAO,OACPE,cAAe,MACfP,eAAgB,iBAGpBuE,mBAAoB,CAChB7D,YAAahB,EACbiB,YAAa,UACbV,gBAAiB,YACjBI,MAAO,KAAKZ,EACZW,OAAQ,OACRQ,aAAc,EACdZ,eAAgB,UAIpBwE,iBAAkB,CACdvD,WAAY,0BACZC,SAAUvB,EACVwB,UAAW,SACXC,MAAO,QACPC,QAAS,EACTC,WAAY1B,GAKhB6E,gBAAiB,CAEbzE,eAAgB,SAChBC,gBAAiB,QACjBC,WAAY,UAEhBC,WAAY,CACRH,eAAgB,eAChBE,WAAY,SACZE,OAAQZ,EACRa,MAAOZ,EACPa,WAAY,SACZL,gBAAiB,QACjBM,cAAe,MAEfC,SAAU,aAMH6G,GAvUe,SAAC1C,GAAW,IAAD,EAIXC,IAAMnD,SAAS,IAAIoD,IAAMC,OAJd,WAI9BC,EAJ8B,aAKGH,IAAMnD,UAAS,IALlB,WAK9BuD,EAL8B,KAKhBC,EALgB,OAMCL,IAAMnD,SAAS2F,IANhB,WAM9BlC,EAN8B,KAMjBC,EANiB,OASGC,qBAAW3B,GAAgB,CAC/DoD,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,QAAS,IAhBwB,WAS9BzD,EAT8B,KAShB2B,EATgB,KAkBjCwB,EAMWnD,EANXmD,MACAC,EAKWpD,EALXoD,IACAC,EAIWrD,EAJXqD,OACAC,EAGWtD,EAHXsD,KACAC,EAEWvD,EAFXuD,OACAC,EACWxD,EADXwD,MACAC,EAAWzD,EAAXyD,QAIJ,SAAe7B,EAAgBC,EAAaC,GAA5C,SAAAC,EAAAC,OAAA,mDACIC,QAAQC,IAAI,sBACZD,QAAQC,IAAIb,EAAMc,SAClBF,QAAQC,IAAIV,GACZS,QAAQC,IAAIJ,IACRR,EALR,oBAMYE,IAAgBkC,GAN5B,gBAOiBrC,EAAMc,SACPF,QAAQG,MAAM,qCAR9B,0BAWiBZ,IAAgBM,EAXjC,oCAAAC,EAAA,MAYkBV,EAAMgB,cAZxB,QAaYd,GAAgB,GAb5B,+BAiBiBF,EAAMc,SACPF,QAAQG,MAAM,wCAlB9B,YAAAL,EAAA,MAoBkBV,EAAMiB,eApBxB,2BAAAP,EAAA,MAqBkBV,EAAMkB,UAAUV,IArBlC,2BAAAE,EAAA,MAsBkBV,EAAMmB,aAtBxB,QAuBYf,EAAeK,GAvB3B,oCA6BWT,EAAMc,QA7BjB,oBA8BgBX,IAAgBM,EA9BhC,oCAAAC,EAAA,MA+BsBV,EAAMmB,aA/B5B,QAgCgBjB,GAAgB,GAhChC,2CAAAQ,EAAA,MAmCsBV,EAAMiB,eAnC5B,2BAAAP,EAAA,MAoCsBV,EAAMkB,UAAUV,IApCtC,2BAAAE,EAAA,MAqCsBV,EAAMmB,aArC5B,QAsCgBjB,GAAgB,GAChBE,EAAeK,GAvC/B,6DAAAC,EAAA,MA4CkBV,EAAMkB,UAAUV,IA5ClC,2BAAAE,EAAA,MA6CkBV,EAAMmB,aA7CxB,QA8CYjB,GAAgB,GAChBE,EAAeK,GACfT,EAAMoB,wBAA2B,SAAOC,GAAP,SAAAX,EAAAC,OAAA,oDACI,IAAzBU,EAAOC,cADc,uBAGvBV,QAAQC,IAAI,yBAHW,WAAAH,EAAA,MAIjBV,EAAMiB,eAJW,6DAhD7C,6DA5BqC,MAwFNvE,mBAASC,IAAWC,IAAI,WAxFlB,WAwF9BC,EAxF8B,KAwFnBC,EAxFmB,KAyFrCC,OAAOC,iBAAiB,UAAU,kBAAMF,EAAUH,IAAWC,IAAI,cACjE,IAGIK,EAAQ,EACRrC,EAAY,EAEZC,EAAc,EACdJ,EAAmB,EACnBC,EAAmB,EACnBC,GAAoB,EARC,KADC,IAYDkC,EAAUvB,MAAMuB,EAAUxB,QAK/CR,EAZe,MAWfD,EAAY,IADZqC,EAAQJ,EAAUxB,OAfI,MAkBtBZ,EAAmBoC,EAAUxB,OAC7BX,EAlBqB,KAkBFuC,EACnBtC,GAAoB,EAAEsC,IAKtBpC,EApBe,MAmBfD,EAAY,IADZqC,EAAQJ,EAAUvB,MAtBG,OAyBrBb,EA1BsB,IA0BHwC,EACnBvC,EAAmBmC,EAAUvB,MAC7BX,GAAoB,EAAEsC,GAtHW,OA2HjBC,YAAS,CACzBC,8BAGF,IA/HmC,aAgIjC,OAAO,kBAAC,IAAD,MAGT,IAAMC,GAAS5C,GAAaC,EAAkBC,EAAiBC,GAAmBC,EAAWC,GAE/F,OAAO,kBAACwC,EAAA,EAAD,CAAMC,MAAOF,GAAOsC,iBAEvB,kBAACnC,EAAA,EAAD,CAAiBD,MAAOF,GAAOhC,WAAYoC,OAAQC,EAAQ,MACvD,kBAACJ,EAAA,EAAD,CAAMC,MAAOF,GAAO2B,kBAChB,kBAAC1B,EAAA,EAAD,CAAMC,MAAOF,GAAO6B,gBAChB,kBAAC5B,EAAA,EAAD,CAAMC,MAAOF,GAAO+B,aAChB,kBAACtB,EAAA,EAAD,CAAMP,MAAOF,GAAOgC,iBAApB,WAA8C,6BAA9C,iBAIR,kBAAC/B,EAAA,EAAD,CAAMC,MAAOF,GAAOiC,kBAEhB,kBAAChC,EAAA,EAAD,CAAMC,MAAOF,GAAOkC,2BAChB,kBAAC5B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAM8D,MAAOO,IAC5C/F,QAASwF,EACTL,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAavD,QAASL,MACjEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAavD,QAASL,OAE7D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,SAA6C,6BAA7C,UAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAMkE,OAAQG,IAC7C/F,QAAS4F,EACTT,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAcvD,QAASL,MAClEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAcvD,QAASL,OAE9D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,UAA8C,6BAA9C,gBAIR,kBAACpC,EAAA,EAAD,CAAMC,MAAOF,GAAOmC,0BAChB,kBAAC7B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAM+D,IAAKM,IAC1C/F,QAASyF,EACTN,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAWvD,QAASL,MAC/DiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAWvD,QAASL,OAE3D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,YAAgD,6BAAhD,QAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAMiE,KAAMI,IAC3C/F,QAAS2F,EACTR,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAYvD,QAASL,MAChEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAYvD,QAASL,OAE5D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,SAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAMmE,MAAOE,IAC5C/F,QAAS6F,EACTV,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAavD,QAASL,MACjEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAavD,QAASL,OAE7D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,OAA2C,6BAA3C,YAIR,kBAACpC,EAAA,EAAD,CAAMC,MAAOF,GAAOkC,2BAChB,kBAAC5B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAMgE,OAAQK,IAC7C/F,QAAS0F,EACTP,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAcvD,QAASL,MAClEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAcvD,QAASL,OAE9D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,MAA0C,6BAA1C,WAEJ,kBAAC/B,EAAA,EAAD,CAAkBJ,MAAOF,GAAOoC,mBAChC7B,QAAS,kBAAM4C,EAAgBvC,EAAMoE,QAASC,IAC9C/F,QAAS8F,EACTX,aAAc,kBAAMnB,EAAgB,CAACzB,KAAMwD,EAAevD,QAASL,MACnEiD,aAAc,kBAAMpB,EAAgB,CAACzB,KAAMwD,EAAevD,QAASL,OAE/D,kBAACZ,EAAA,EAAD,CAAMP,MAAOF,GAAOqC,kBAApB,SAA6C,6BAA7C,kBC9PtB8C,GAAYC,YAEhB,CACEP,KAAMlE,EACN0E,YAAajG,EACbkG,YAAa/C,EACbgD,gBAAiBL,GACjBM,IAAKC,YAEP,CACEC,iBAAkB,OAClBC,WAAY,OACZC,yBAA0B,CACxBC,MAAO,MACPC,UAAW,CAAEhI,gBAAiB,YAarBiI,IARArI,IAAWC,OAAO,CAC/BqI,UAAW,CACTlE,KAAM,EACNhE,gBAAiB,QACjBC,WAAY,SACZF,eAAgB,YAGLkI,6BAAmBZ,KChClCc,YAAsBC,M","file":"static/js/app.272edb2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundBanner.e17a0abf.gif\";","module.exports = __webpack_public_path__ + \"static/media/angryPuella.2601220a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lazySamuraiChamploo.9ed9f427.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sadTokyoGhoul.10d045ca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/happyFlipFlappers.ea7df661.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pumpedOnePiece.06b99902.mp3\";","module.exports = __webpack_public_path__ + \"static/media/weirdMintOrange.9aa53a77.mp3\";","module.exports = __webpack_public_path__ + \"static/media/romanticSakura.7229762a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/angryMetal.96fb8937.mp3\";","module.exports = __webpack_public_path__ + \"static/media/beachEvangelion.50f8c5cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/icyYuri.b803459a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jungleJojo.7d982eac.mp3\";","module.exports = __webpack_public_path__ + \"static/media/homeSpiceWolf.5524f959.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cloudsAnohana.82eac9d8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/partyDeathParade.4be7bea1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/volcanoReZero.552145b1.mp3\";","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport Navigation from 'react-navigation'\n// import stylefactory from '../styles/styles'\n\nconst FirstChoiceScreen = ({navigation}) => {\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 54*RATIO;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 54*RATIO;\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 54*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.viewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n\n            <TouchableOpacity \n                style={styles.left_buttonStyle}\n                onPress={() => {navigation.navigate('MatchMyMood')}}>\n                <Text style={styles.textStyle} >[Match My Mood!]</Text>                \n            </TouchableOpacity>\n            <TouchableOpacity \n                style={styles.right_buttonStyle}\n                onPress={() => {navigation.navigate('TakeMeSomewhere')}}>\n                <Text style={styles.textStyle} >[Take Me Somewhere!]</Text>                \n            </TouchableOpacity>\n\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT) => StyleSheet.create({\n\n    viewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    },\n    left_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '42%',\n        height: '17%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        marginRight: '1%'\n    },\n    right_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '42%',\n        height: '17%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        marginLeft: '1%'\n\n    },\n    textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    }\n})\n\n\nexport default FirstChoiceScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT) => StyleSheet.create({\n\n    viewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden'\n    },\n    buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: '50%',\n        height: '25%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    }\n})\n\nexport default stylefactory;","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState} from 'react';\nimport stylefactory from '../styles/styles'\n\nconst HomeScreen = ({navigation}) => {\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 54*RATIO;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 54*RATIO;\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 54*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.viewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n\n            <TouchableOpacity \n                style={styles.buttonStyle}\n                onPress={() => {navigation.navigate('FirstChoice')}}>\n                <Text style={styles.textStyle} >Choose Your Own Audioventure!</Text>                \n            </TouchableOpacity>\n\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n  \n\n\nexport default HomeScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport NumberFormat from 'react-number-format'\nimport { Audio } from 'expo-av';\nimport { loadOptions } from \"@babel/core\";\n// import stylefactory from '../styles/styles'\n\n\nconst track = {\n    Angry: require('../../assets/angryPuella.mp3'),\n    Lazy: require('../../assets/lazySamuraiChamploo.mp3'),\n    Sad: require('../../assets/sadTokyoGhoul.mp3'),\n    Happy: require('../../assets/happyFlipFlappers.mp3'),\n    Pumped: require('../../assets/pumpedOnePiece.mp3'),\n    Weird: require('../../assets/weirdMintOrange.mp3'),\n    Romantic: require('../../assets/romanticSakura.mp3')\n}\nconst Mood = {\n    Angry: 'Angry',\n    Lazy: 'Lazy',\n    Sad: 'Sad',\n    Happy: 'Happy',\n    Pumped: 'Pumped',\n    Weird: 'Weird',\n    Romantic: 'Romantic',\n    Null: 'null'\n}\n\nconst opacityLevel = {\n    mouseOn: 0.5,\n    mouseOff: 1.0\n\n}\n\nconst opacityReducer = (opacityState, action) => {\n    switch(action.type) {\n        case Mood.Angry:\n            return {...opacityState, Angry: action.payload};\n        case Mood.Lazy:\n            return {...opacityState, Lazy: action.payload};\n        case Mood.Sad:\n            return {...opacityState, Sad: action.payload};\n        case Mood.Happy:\n            return {...opacityState, Happy: action.payload};\n        case Mood.Pumped:\n            return {...opacityState, Pumped: action.payload};\n        case Mood.Weird:\n            return {...opacityState, Weird: action.payload};\n        case Mood.Romantic:\n            return {...opacityState, Romantic: action.payload};\n        default:\n            return opacityState;\n    }\n}\n\n\nconst MatchMyMoodScreen = (props) => {\n\n   \n\n\n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(Mood.Null)\n\n\n    const [opacityState, opacityDispatch] = useReducer(opacityReducer, {\n                                                    Angry: 1,\n                                                    Lazy: 1,\n                                                    Sad: 1,\n                                                    Happy: 1,\n                                                    Pumped: 1,\n                                                    Weird: 1,\n                                                    Romantic: 1});\n    const {\n        Angry,\n        Lazy,\n        Sad,\n        Happy,\n        Pumped,\n        Weird,\n        Romantic} = opacityState;\n\n    \n\n    async function play_pauseSound(loaded_song, mood) {\n        console.log(\"pressed play_pause\")\n        console.log(sound._loaded)\n        console.log(moodPlaying)\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === Mood.Null) {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n                await sound.loadAsync(loaded_song)\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                          // audio has finished!\n                          console.log(\"finished playing song\");\n                          await sound.unloadAsync();\n                        }\n                      })\n            }\n        }\n        //     await sound.loadAsync(loaded_song)\n        //     sound._onPlaybackStatusUpdate = (async (status) => {\n        //         if (status.didJustFinish === true) {\n        //           // audio has finished!\n        //           console.log(\"finished\");\n        //           await sound.unloadAsync();\n        //         }\n        //       })\n        //     setSound(sound);\n        //     setSoundPlaying(true);\n\n        //     sound.playAsync();\n        // } else {\n        //     sound.pauseAsync();\n        //     await sound.unloadAsync();\n        //     setSound(sound);\n        //     setSoundPlaying(false);\n\n        // }\n    }\n\n\n    async function playSound() {\n      console.log('Loading Sound');\n      await sound.loadAsync(require('../../assets/angryMetal.mp3'))\n      setSound(sound);\n  \n      console.log('Playing Sound');\n      if (!soundPlaying){\n        await sound.playAsync();\n      }\n      else {\n          await sound.pauseAsync();\n      }\n    }\n  \n    React.useEffect(() => {\n      return sound\n        ? () => {\n            console.log('Unloading Sound');\n            sound.unloadAsync(); }\n        : undefined;\n    }, [sound]);\n  \n  \n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT, opacityState);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Match My<br></br>Mood!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Angry, Mood.Angry)}\n                            opacity={Angry}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Angry, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Angry, payload: opacityLevel.mouseOff})}\n                            >\n\n                            <Text style={styles.option_textStyle} >Angry</Text> \n                                       \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Pumped, Mood.Pumped)}\n                            opacity={Pumped}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Pumped, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Pumped, payload: opacityLevel.mouseOff})}\n                            >   \n                                \n                            <Text style={styles.option_textStyle} >Pumped<br></br>Up!</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Lazy, Mood.Lazy)}\n                            opacity={Lazy}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Lazy, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Lazy, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Lazy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Happy, Mood.Happy)}\n                            opacity={Happy}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Happy, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Happy, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Happy!</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Weird, Mood.Weird)}\n                            opacity={Weird}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Weird, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Weird, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Weird~</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Sad, Mood.Sad)}\n                            opacity={Sad}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Sad, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Sad, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >A Little<br></br>Sad...</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                            onPress={() => play_pauseSound(track.Romantic, Mood.Romantic)}\n                            opacity={Romantic}    \n                            onMouseEnter={() => opacityDispatch({type: Mood.Romantic, payload: opacityLevel.mouseOn})}\n                            onMouseLeave={() => opacityDispatch({type: Mood.Romantic, payload: opacityLevel.mouseOff})}\n                            >  \n\n                            <Text style={styles.option_textStyle} >Romantic<br></br><NumberFormat value={3} displayType={'text'} prefix={'<'}></NumberFormat></Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT, opacityState) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (3.9/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .295*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default MatchMyMoodScreen;\n\n","\nimport { Text, Image, StyleSheet, View, Button, TouchableOpacity, ImagePropTypes, Touchable, ImageBackground, ScaledSize } from \"react-native\";\nimport { Dimensions, Linking } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, PressStart2P_400Regular} from '@expo-google-fonts/press-start-2p'\nimport React, {useState, useReducer} from 'react';\nimport { Audio } from 'expo-av';\nimport NumberFormat from 'react-number-format'\n// import stylefactory from '../styles/styles'\n\n\nconst track = {\n    Beach: require('../../assets/beachEvangelion.mp3'),\n    Icy: require('../../assets/icyYuri.mp3'),\n    Jungle: require('../../assets/jungleJojo.mp3'),\n    Home: require('../../assets/homeSpiceWolf.mp3'),\n    Clouds: require('../../assets/cloudsAnohana.mp3'),\n    Party: require('../../assets/partyDeathParade.mp3'),\n    Volcano: require('../../assets/volcanoReZero.mp3')\n}\nconst Place = {\n    Beach: 'Beach',\n    Icy: 'Icy',\n    Jungle: 'Jungle',\n    Home: 'Home',\n    Clouds: 'Clouds',\n    Party: 'Party',\n    Volcano: 'Volcano',\n    Null: 'null'\n}\n\nconst opacityLevel = {\n    mouseOn: 0.5,\n    mouseOff: 1.0 \n\n}\n\nconst opacityReducer = (opacityState, action) => {\n    switch(action.type) {\n        case Place.Beach:\n            return {...opacityState, Beach: action.payload};\n        case Place.Icy:\n            return {...opacityState, Icy: action.payload};\n        case Place.Jungle:\n            return {...opacityState, Jungle: action.payload};\n        case Place.Home:\n            return {...opacityState, Home: action.payload};\n        case Place.Clouds:\n            return {...opacityState, Clouds: action.payload};\n        case Place.Party:\n            return {...opacityState, Party: action.payload};\n        case Place.Volcano:\n            return {...opacityState, Volcano: action.payload};\n        default:\n            return opacityState;\n    }\n}\n\n\n\nconst TakeMeSomewhereScreen = (props) => {\n    \n\n\n    const [sound, setSound] = React.useState(new Audio.Sound);\n    const [soundPlaying, setSoundPlaying] = React.useState(false);\n    const [moodPlaying, setMoodPlaying] = React.useState(Place.Null)\n\n\n    const [opacityState, opacityDispatch] = useReducer(opacityReducer, {\n        Beach: 1,\n        Icy: 1,\n        Jungle: 1,\n        Home: 1,\n        Clouds: 1,\n        Party: 1,\n        Volcano: 1});\n    const {\n        Beach,\n        Icy,\n        Jungle,\n        Home,\n        Clouds,\n        Party,\n        Volcano} = opacityState;\n\n    \n\n    async function play_pauseSound(loaded_song, mood) {\n        console.log(\"pressed play_pause\")\n        console.log(sound._loaded)\n        console.log(moodPlaying)\n        console.log(mood)\n        if (soundPlaying) {\n            if (moodPlaying === Place.Null) {\n                if (!sound._loaded){\n                    console.error(\"ERROR: MOOD is NULL WHILE PLAYING\")\n                } \n            }\n            else if (moodPlaying === mood) {\n                await sound.pauseAsync();\n                setSoundPlaying(false);\n            } \n            else {\n                // how could it possible by not loaded if its playing\n                if (!sound._loaded){\n                    console.error(\"ERROR: SONG PLAYING WHILE NOT LOADED\")\n                } \n                await sound.unloadAsync();\n                await sound.loadAsync(loaded_song);\n                await sound.playAsync();\n                setMoodPlaying(mood);\n\n                \n            }     \n        }\n        else {\n            if(sound._loaded) {\n                if (moodPlaying === mood) {\n                    await sound.playAsync();\n                    setSoundPlaying(true);\n                }\n                else {\n                    await sound.unloadAsync();\n                    await sound.loadAsync(loaded_song)\n                    await sound.playAsync();\n                    setSoundPlaying(false);\n                    setMoodPlaying(mood)\n                }\n                return\n            }\n            else {\n                await sound.loadAsync(loaded_song)\n                await sound.playAsync();\n                setSoundPlaying(true);\n                setMoodPlaying(mood)\n                sound._onPlaybackStatusUpdate = (async (status) => {\n                        if (status.didJustFinish === true) {\n                          // audio has finished!\n                          console.log(\"finished playing song\");\n                          await sound.unloadAsync();\n                        }\n                      })\n            }\n        }\n    }\n\n\n    const [windowDim, setWindow] = useState(Dimensions.get('window'));\n    window.addEventListener('resize', () => setWindow(Dimensions.get('window')))\n    const BACKGROUND_HEIGHT = 867;\n    const BACKGROUND_WIDTH = 1542;\n\n    var RATIO = 0;\n    var FONT_SIZE = 0;\n    var LINE_SPACING = 1.15;\n    var LINE_HEIGHT = 0;\n    var backgroundHeight = 0;\n    var backgroundWidth =  0;\n    var buttonBorderWidth = 0;\n\n    var background_aspectRatio = BACKGROUND_WIDTH/BACKGROUND_HEIGHT;\n    var window_aspectRatio = windowDim.width/windowDim.height;\n\n    if (background_aspectRatio < window_aspectRatio) {\n        RATIO = windowDim.height/BACKGROUND_HEIGHT;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = windowDim.height;\n        backgroundWidth =  RATIO * BACKGROUND_WIDTH;\n        buttonBorderWidth = 5*RATIO;\n    }\n    else {\n        RATIO = windowDim.width/BACKGROUND_WIDTH;\n        FONT_SIZE = 44*RATIO\n        LINE_HEIGHT = FONT_SIZE*LINE_SPACING;\n        backgroundHeight = RATIO * BACKGROUND_HEIGHT;\n        backgroundWidth =  windowDim.width;\n        buttonBorderWidth = 5*RATIO;\n    }\n\n    \n\n    let [fontsLoaded] = useFonts({\n        PressStart2P_400Regular,\n      });\n    \n      if (!fontsLoaded) {\n        return <AppLoading />;\n      }\n\n      const styles = stylefactory(backgroundHeight, backgroundWidth, buttonBorderWidth, FONT_SIZE, LINE_HEIGHT);\n\n    return <View style={styles.parentViewStyle}>\n\n        <ImageBackground style={styles.imageStyle} source={require('../../assets/backgroundBanner.gif')}>\n            <View style={styles.contentViewStyle}>\n                <View style={styles.titleViewStyle}>\n                    <View style={styles.titleBanner}>\n                        <Text style={styles.title_textStyle} >[Take Me<br></br>Somewhere!]</Text>                \n                    </View>\n                </View>\n                    \n                <View style={styles.optionsViewStyle}>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Beach, Place.Beach)}\n                        opacity={Beach}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Beach, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Beach, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >To the<br></br>Beach</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Clouds, Place.Clouds)}\n                        opacity={Clouds}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Clouds, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Clouds, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Through<br></br>the Clouds</Text>                \n                        </TouchableOpacity>    \n                    </View>\n\n                    <View style={styles.even_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Icy, Place.Icy)}\n                        opacity={Icy}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Icy, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Icy, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Somewhere<br></br>Icy</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Home, Place.Home)}\n                        opacity={Home}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Home, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Home, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Home</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Party, Place.Party)}\n                        opacity={Party}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Party, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Party, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >To A<br></br>Party!</Text>                \n                        </TouchableOpacity> \n                    </View>\n\n                    <View style={styles.apart_optionLineViewStyle}>\n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Jungle, Place.Jungle)}\n                        opacity={Jungle}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Jungle, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Jungle, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >The<br></br>Jungle</Text>                \n                        </TouchableOpacity> \n                        <TouchableOpacity style={styles.option_buttonStyle}\n                        onPress={() => play_pauseSound(track.Volcano, Place.Volcano)}\n                        opacity={Volcano}    \n                        onMouseEnter={() => opacityDispatch({type: Place.Volcano, payload: opacityLevel.mouseOn})}\n                        onMouseLeave={() => opacityDispatch({type: Place.Volcano, payload: opacityLevel.mouseOff})}\n                        >\n                            <Text style={styles.option_textStyle} >Into a<br></br>Volcano</Text>                \n                        </TouchableOpacity> \n                    </View>\n                    \n                </View>\n            </View>\n        </ImageBackground>\n\n\n    </View>\n};\n\n\n\n\n\nconst stylefactory = (backgroundHeight:number, backgroundWidth:number, buttonBorderWidth:number, FONT_SIZE:number, LINE_HEIGHT:number) => StyleSheet.create({\n\n    contentViewStyle: {\n\n        height: backgroundHeight - 0.09*backgroundWidth,\n        width: 0.91*backgroundWidth,\n        top: 4\n        // backgroundColor: 'red'\n    },\n    titleViewStyle: {\n\n        // height: 0.1*backgroundWidth,\n        flex: 1.2,\n        width: '100%',\n        alignItems: 'center',\n        // backgroundColor: 'green'\n    },\n    titleBanner: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: (4.25/10)*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n    },\n    title_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE + 5,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT + 8,\n    },\n    optionsViewStyle: {\n\n        flex: 5,\n        // height: 0.1*backgroundWidth,\n        width: '100%',\n        justifyContent: \"space-evenly\",\n        // backgroundColor: 'blue'\n    },\n    apart_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'yellow'\n    },\n    even_optionLineViewStyle: {\n\n        // flex: 1,\n        // height: 0.1*backgroundWidth,\n        height: '21%',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        // backgroundColor: 'pink'\n    },\n    option_buttonStyle: {\n        borderWidth: buttonBorderWidth,\n        borderColor: '#b4a7d6',\n        backgroundColor: '#8e7cc3c6',\n        width: .298*backgroundWidth,\n        height: '100%',\n        borderRadius: 3,\n        justifyContent: 'center',\n        \n\n    },\n    option_textStyle: {\n        fontFamily: 'PressStart2P_400Regular',\n        fontSize: FONT_SIZE,\n        textAlign: 'center',\n        color: 'white',\n        opacity: 1,\n        lineHeight: LINE_HEIGHT\n    },\n\n    \n\n    parentViewStyle: {\n        // flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: 'black',\n        alignItems: 'center',\n    },\n    imageStyle: {\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        height: backgroundHeight,\n        width: backgroundWidth,\n        resizeMode: \"center\",\n        backgroundColor: 'black',\n        flexDirection: 'row',\n        // ...StyleSheet.absoluteFillObject,\n        overflow: 'hidden',\n    }\n\n})\n\n\nexport default TakeMeSomewhereScreen;\n\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation'\nimport {createStackNavigator} from 'react-navigation-stack'\nimport FirstChoiceScreen from './src/screens/FirstChoiceScreen';\n\nimport HomeScreen from './src/screens/HomeScreen'\nimport MatchMyMoodScreen from './src/screens/MatchMyMoodScreen';\nimport TakeMeSomewhereScreen from './src/screens/TakeMeSomewhereScreen';\n\n\n\nconst navigator = createStackNavigator(\n\n  {\n    Home: HomeScreen,\n    FirstChoice: FirstChoiceScreen,\n    MatchMyMood: MatchMyMoodScreen,\n    TakeMeSomewhere: TakeMeSomewhereScreen,\n    Svg: SvgExample\n  },\n  {\n    initialRouteName: 'Home',\n    headerMode: 'none',\n    defaultNavigationOptions: {\n      title: 'App',\n      cardStyle: { backgroundColor: 'black' }\n    },\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\nexport default createAppContainer(navigator);\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}